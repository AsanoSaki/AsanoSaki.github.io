{
    "version": "https://jsonfeed.org/version/1",
    "title": "AsanoSaki • All posts by \"java\" category",
    "description": "",
    "home_page_url": "https://asanosaki.github.io",
    "items": [
        {
            "id": "https://asanosaki.github.io/posts/5710.html",
            "url": "https://asanosaki.github.io/posts/5710.html",
            "title": "SpringBoot学习笔记-实现微服务：匹配系统（下）",
            "date_published": "2023-12-05T13:00:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现完整的匹配系统微服务。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-重构项目\">1. 重构项目</h2>\n<h3 id=\"1-1-初始化Spring-Cloud项目\">1.1 初始化Spring Cloud项目</h3>\n<p>现在需要把匹配系统设计成一个微服务，也就是一个独立的系统，可以认为是一个新的 SpringBoot 后端，当之前的服务器获取到两名玩家的匹配请求后会向后台的匹配系统服务器发送 HTTP 请求，匹配系统类似于之前的 <code>Game</code>，在接收到请求之后也会单独开一个新的线程来匹配，可以设计成每隔一秒扫一遍匹配池中已有的玩家，然后判断能否匹配出来，如果可以就将匹配结果通过 HTTP 请求返回。</p>\n<p>匹配系统和网站后端是两个并列的后端项目，因此可以修改一下项目结构，将这两个后端改为子项目，然后新建一个新的父级项目。</p>\n<p>我们新建一个 Spring 项目，项目名为 <code>backendcloud</code>，还是选用 Maven 管理项目，组名为 <code>com.kob</code>。注意 2023.11.24 之后 SpringBoot 2.x 版本正式弃用，SpringBoot 3.x 版本需要 Java 17 及以上。我们现在选择 SpringBoot 3.2.0 版本，依赖选上 Spring Web 即可。</p>\n<p>父级项目是没有逻辑的，因此可以把 <code>src</code> 目录删掉，然后修改一下 <code>pom.xml</code>，首先在 <code>&lt;description&gt;backendcloud&lt;/description&gt;</code> 后添加一行：<code>&lt;packaging&gt;pom&lt;/packaging&gt;</code>，然后添加 Spring Cloud 的依赖，前往 <a href=\"https://mvnrepository.com/\">Maven 仓库</a>，搜索并安装以下依赖：</p>\n<ul>\n<li><code>spring-cloud-dependencies</code></li>\n</ul>\n<p>接着在 <code>backendcloud</code> 目录下创建匹配系统子项目，选择新建一个模块（Module），选择空项目，匹配系统的名称为 <code>matchingsystem</code>，在高级设置中将组 ID 设置为 <code>com.kob.matchingsystem</code>。</p>\n<p>这个新建的子项目本质上也是一个 SpringBoot，我们将父级目录的 <code>pom.xml</code> 中的 Spring Web 依赖剪切到 <code>matchingsystem</code> 中的 <code>pom.xml</code>，也就是以下这段依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-创建匹配系统框架\">1.2 创建匹配系统框架</h3>\n<p>由于有两个 SpringBoot 服务，因此需要修改一下匹配系统的端口，在 <code>resources</code> 目录下创建 <code>application.properties</code> 文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=<span class=\"number\">3001</span></span><br></pre></td></tr></table></figure>\n<p>在 <code>com.kob.matchingsystem</code> 包下创建 <code>controller</code> 和 <code>service</code> 包，在 <code>service</code> 包下创建 <code>impl</code> 包。先在 <code>service</code> 包下创建 <code>MatchingService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">MatchingService</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">addPlayer</span><span class=\"params\">(Integer userId, Integer rating)</span>;  <span class=\"comment\">// 将玩家添加到匹配池中</span></span><br><span class=\"line\">    String <span class=\"title function_\">removePlayer</span><span class=\"params\">(Integer userId)</span>;  <span class=\"comment\">// 从匹配池中删除玩家</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后简单实现一下 <code>MatchingServiceImpl</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.matchingsystem.service.MatchingService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MatchingService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">addPlayer</span><span class=\"params\">(Integer userId, Integer rating)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Add Player: &quot;</span> + userId + <span class=\"string\">&quot;, Rating: &quot;</span> + rating);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removePlayer</span><span class=\"params\">(Integer userId)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Remove Player: &quot;</span> + userId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在 <code>controller</code> 包下创建 <code>MatchingController</code>，在 Spring 的 <code>WebClient</code> 中，如果你想要发送一个 <code>Map</code> 类型的数据，你需要将它转换为 <code>MultiValueMap</code>。这是因为 HTTP 的表单数据通常可以包含多个值，而 <code>Map</code> 只能包含一个值。因此，<code>WebClient</code> 使用 <code>MultiValueMap</code> 来表示表单数据：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.matchingsystem.service.MatchingService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.MultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MatchingService matchingService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/matching/add/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">addPlayer</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> MultiValueMap&lt;String, String&gt; data)</span> &#123;  <span class=\"comment\">// 注意这边不能用Map</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> Integer.parseInt(Objects.requireNonNull(data.getFirst(<span class=\"string\">&quot;user_id&quot;</span>)));</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">rating</span> <span class=\"operator\">=</span> Integer.parseInt(Objects.requireNonNull(data.getFirst(<span class=\"string\">&quot;rating&quot;</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> matchingService.addPlayer(userId, rating);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/matching/remove/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removePlayer</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> MultiValueMap&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> Integer.parseInt(Objects.requireNonNull(data.getFirst(<span class=\"string\">&quot;user_id&quot;</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> matchingService.removePlayer(userId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，匹配系统应该只能接收来自 Web 后端服务器发来的请求，而不能接收其他外网的请求，因此需要使用 Spring Security 实现用户授权，在 <code>matchingsystem</code> 子项目中添加上 <code>spring-boot-starter-security</code> 依赖后创建一个 <code>config</code> 包，然后创建和之前类似的 <code>SecurityConfig</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configurers.CsrfConfigurer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.util.matcher.RequestMatcher;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SecurityFilterChain <span class=\"title function_\">filterChain</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        http.csrf(CsrfConfigurer::disable)</span><br><span class=\"line\">                .sessionManagement(sess -&gt; sess.sessionCreationPolicy(SessionCreationPolicy.STATELESS))</span><br><span class=\"line\">                .authorizeHttpRequests(auth -&gt; &#123;</span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"string\">&quot;/error&quot;</span>)).permitAll();  <span class=\"comment\">// 放行报错页面</span></span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"string\">&quot;/matching/add/&quot;</span>)).permitAll();</span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"string\">&quot;/matching/remove/&quot;</span>)).permitAll();</span><br><span class=\"line\">                    auth.requestMatchers(HttpMethod.OPTIONS).permitAll();</span><br><span class=\"line\">                    auth.anyRequest().authenticated();</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> http.build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">record</span> <span class=\"title class_\">IpAddressMatcher</span><span class=\"params\">(String remoteAddr, String servletPath)</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RequestMatcher</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">matches</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 放行来自http://remoteAddr/servletPath的请求</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> remoteAddr.equals(request.getRemoteAddr()) &amp;&amp; servletPath.equals(request.getServletPath());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们将自定义的 <code>IpAddressMatcher</code> 类定义为 <code>record</code>，这是 Java 14 中引入的一个新特性。它是一种类似于类的结构，但用于表示不可变数据。相比于传统的 Java 类，<code>record</code> 在定义数据类时更为简洁、易读和易用，<code>record</code> 申明的类，具备以下特点：</p>\n<ul>\n<li>它是一个 <code>final</code> 类。</li>\n<li>自动实现 <code>equals</code>、<code>hashCode</code>、<code>toString</code> 方法。</li>\n<li>成员变量均为 <code>final</code>，且有对应的 <code>public</code> 访问器方法。</li>\n</ul>\n<p>相当于以下的类定义（省略了自动实现的方法）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IpAddressMatcher</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RequestMatcher</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String remoteAddr;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String servletPath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">IpAddressMatcher</span><span class=\"params\">(String remoteAddr, String servletPath)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.remoteAddr = remoteAddr;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.servletPath = servletPath;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">matches</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在需要将这个匹配系统子项目变为 Spring 项目，将 <code>Main</code> 改名为 <code>MatchingSystemApplication</code>，然后将其修改为 SpringBoot 的入口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingSystemApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MatchingSystemApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-迁移Web后端\">1.3 迁移Web后端</h3>\n<p>在 <code>backendcloud</code> 目录下创建一个新的模块名为 <code>backend</code>，然后在高级设置中将组 ID 改为 <code>com.kob.backend</code>，创建好后先将 <code>src</code> 目录删掉，然后将之前的 Web 后端项目中的 <code>src</code> 复制过来，还需要将之前的 <code>pom.xml</code> 配置信息中的依赖配置 <code>&lt;dependencies&gt;</code> 也复制过来，可以将 <code>spring-boot-starter-thymeleaf</code> 依赖删掉。</p>\n<p>由于我们新建的 <code>backendcloud</code> 项目升级到了 SpringBoot 3.2.0，因此迁移过来的 <code>backend</code> 需要重构一部分代码，首先是 <code>javax.servlet</code> 和 <code>javax.websocket</code> 已经被弃用，需要用 Jakarta 提供的依赖包，先在 <code>backend</code> 的 <code>pom.xml</code> 中添加以下依赖：</p>\n<ul>\n<li><code>jakarta.websocket-api</code></li>\n<li><code>jakarta.websocket-client-api</code></li>\n</ul>\n<p>然后修改 <code>JwtAuthenticationTokenFilter</code> 的包导入代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config.filter;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.FilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>修改 <code>WebSocketServer</code> 的包导入代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>然后修改 Spring Security 的配置文件 <code>SecurityConfig</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.config.filter.JwtAuthenticationTokenFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configurers.CsrfConfigurer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.util.matcher.RequestMatcher;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">(AuthenticationConfiguration authenticationConfiguration)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> authenticationConfiguration.getAuthenticationManager();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SecurityFilterChain <span class=\"title function_\">filterChain</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        http.csrf(CsrfConfigurer::disable)</span><br><span class=\"line\">                .sessionManagement(sess -&gt; sess.sessionCreationPolicy(SessionCreationPolicy.STATELESS))</span><br><span class=\"line\">                .authorizeHttpRequests(auth -&gt; &#123;</span><br><span class=\"line\"><span class=\"comment\">//                    auth.requestMatchers(&quot;/user/account/login/&quot;, &quot;/user/account/register/&quot;).permitAll();  // 使用这种也行，但是无法通过浏览器地址访问，只能通过前端发出HTTP请求</span></span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;0:0:0:0:0:0:0:1&quot;</span>, <span class=\"string\">&quot;/error&quot;</span>)).permitAll();  <span class=\"comment\">// 0:0:0:0:0:0:0:1是localhost的IPv6版本</span></span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;0:0:0:0:0:0:0:1&quot;</span>, <span class=\"string\">&quot;/user/account/login/&quot;</span>)).permitAll();</span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;0:0:0:0:0:0:0:1&quot;</span>, <span class=\"string\">&quot;/user/account/register/&quot;</span>)).permitAll();</span><br><span class=\"line\">                    auth.requestMatchers(HttpMethod.OPTIONS).permitAll();</span><br><span class=\"line\">                    auth.anyRequest().authenticated();</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> http.build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> WebSecurityCustomizer <span class=\"title function_\">webSecurityCustomizer</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (web) -&gt; web.ignoring().requestMatchers(<span class=\"string\">&quot;/websocket/**&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">record</span> <span class=\"title class_\">IpAddressMatcher</span><span class=\"params\">(String remoteAddr, String servletPath)</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RequestMatcher</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">matches</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 放行来自http://remoteAddr/servletPath的请求</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> remoteAddr.equals(request.getRemoteAddr()) &amp;&amp; servletPath.equals(request.getServletPath());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以注意到我们在放行链接时 IP 地址为 <code>0:0:0:0:0:0:0:1</code>，代码中的 <code>request.getRemoteAddr()</code> 方法用于获取发起 HTTP 请求的客户端的 IP 地址，Vue 前端使用 Ajax 向后端发送 HTTP 请求时所用的 <code>localhost</code> 通过该方法会返回 IPv6 的回环地址 <code>0:0:0:0:0:0:0:1</code>，而如果是 SpringBoot 后端之间发送 HTTP 请求则 <code>localhost</code> 会返回 IPv4 的回环地址 <code>127.0.0.1</code>。</p>\n<p>这时候在 IDEA 中连接上数据库后启动一下 <code>backend</code> 项目会看到报错：<code>Invalid value type for attribute 'factoryBeanObjectType': java.lang.String</code>，这是由于 MyBatis-Plus 中的 MyBatis-Spring 版本较低，以后更新成新版本应该能解决问题，目前我们先在 <code>mybatis-plus-boot-starter</code> 依赖中排除掉 <code>mybatis-spring</code>，然后自己添加一个新的 <code>mybatis-spring</code> 依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.baomidou<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.4.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 解决SpringBoot版本升级到3.2.0导致的Invalid value type for attribute &#x27;factoryBeanObjectType&#x27;: java.lang.String --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-实现匹配系统微服务\">2. 实现匹配系统微服务</h2>\n<h3 id=\"2-1-数据库更新\">2.1 数据库更新</h3>\n<p>我们将 <code>rating</code> 放到用户身上而不是 BOT 上，每个用户对应一个自己的天梯分。在 <code>user</code> 表中创建 <code>rating</code>，并将 <code>bot</code> 表中的 <code>rating</code> 删去，然后需要修改对应的 <code>pojo</code>，还有 <code>service.impl.user.account</code> 包下的 <code>RegisterServiceImpl</code> 类以及 <code>service.impl.user.bot</code> 包下的 <code>AddServiceImpl</code> 和 <code>UpdateServiceImpl</code> 类。</p>\n<h3 id=\"2-2-Web后端与匹配系统后端通信\">2.2 Web后端与匹配系统后端通信</h3>\n<p>先在 <code>backend</code> 项目的 <code>config</code> 包下创建 <code>RestTemplateConfig</code> 类，便于之后在其他地方注入 <code>RestTemplate</code>。<code>RestTemplate</code> 能够在应用中调用 REST 服务。它简化了与 HTTP 服务的通信方式，统一了 RESTful 的标准，封装了 HTTP 链接，我们只需要传入 URL 及返回值类型即可：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.client.RestTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RestTemplateConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestTemplate <span class=\"title function_\">getRestTemplate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RestTemplate</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们将 <code>WebSocketServer</code> 的简易匹配代码删去，然后使用 HTTP 请求向 <code>matchingsystem</code> 后端发送匹配请求，注意我们将 <code>startGame()</code> 方法改为 <code>public</code>，因为之后需要在处理匹配成功的 Service 中调用该方法来启动游戏：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.Game;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.JwtAuthentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.RecordMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> jakarta.websocket.server.ServerEndpoint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.MultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.client.RestTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ConcurrentHashMap是一个线程安全的哈希表，用于将用户ID映射到WS实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;Integer, WebSocketServer&gt; users = <span class=\"keyword\">new</span> <span class=\"title class_\">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Game</span> <span class=\"variable\">game</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> UserMapper userMapper;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RecordMapper recordMapper;  <span class=\"comment\">// 要在Game中调用</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> RestTemplate restTemplate;  <span class=\"comment\">// 用于发送HTTP请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 向匹配系统发送请求的URL</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">matchingAddPlayerUrl</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost:3001/matching/add/&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">matchingRemovePlayerUrl</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost:3001/matching/remove/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserMapper</span><span class=\"params\">(UserMapper userMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.userMapper = userMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRecordMapper</span><span class=\"params\">(RecordMapper recordMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.recordMapper = recordMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRestTemplate</span><span class=\"params\">(RestTemplate restTemplate)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.restTemplate = restTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.session = session;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> JwtAuthentication.getUserId(token);</span><br><span class=\"line\">        user = userMapper.selectById(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.put(userId, <span class=\"built_in\">this</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; Connected!&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.session.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnClose</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClose</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.remove(user.getId());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; Disconnected!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stopMatching();  <span class=\"comment\">// 断开连接时取消匹配</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnMessage</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(String message, Session session)</span> &#123;  <span class=\"comment\">// 一般会把onMessage()当作路由</span></span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> JSONObject.parseObject(message);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">event</span> <span class=\"operator\">=</span> data.getString(<span class=\"string\">&quot;event&quot;</span>);  <span class=\"comment\">// 取出event的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;start_match&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 开始匹配</span></span><br><span class=\"line\">            <span class=\"built_in\">this</span>.startMatching();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;stop_match&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 取消匹配</span></span><br><span class=\"line\">            <span class=\"built_in\">this</span>.stopMatching();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;move&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 移动</span></span><br><span class=\"line\">            move(data.getInteger(<span class=\"string\">&quot;direction&quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnError</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Session session, Throwable error)</span> &#123;</span><br><span class=\"line\">        error.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">(String message)</span> &#123;  <span class=\"comment\">// 从后端向当前链接发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (session) &#123;  <span class=\"comment\">// 由于是异步通信，需要加一个锁</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                session.getBasicRemote().sendText(message);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startGame</span><span class=\"params\">(Integer aId, Integer bId)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> userMapper.selectById(aId), b = userMapper.selectById(bId);</span><br><span class=\"line\"></span><br><span class=\"line\">        game = <span class=\"keyword\">new</span> <span class=\"title class_\">Game</span>(<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">20</span>, a.getId(), b.getId());</span><br><span class=\"line\">        game.createMap();</span><br><span class=\"line\">        users.get(a.getId()).game = game;</span><br><span class=\"line\">        users.get(b.getId()).game = game;</span><br><span class=\"line\"></span><br><span class=\"line\">        game.start();  <span class=\"comment\">// 开一个新的线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">respGame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;a_id&quot;</span>, game.getPlayerA().getId());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;a_sx&quot;</span>, game.getPlayerA().getSx());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;a_sy&quot;</span>, game.getPlayerA().getSy());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;b_id&quot;</span>, game.getPlayerB().getId());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;b_sx&quot;</span>, game.getPlayerB().getSx());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;b_sy&quot;</span>, game.getPlayerB().getSy());</span><br><span class=\"line\">        respGame.put(<span class=\"string\">&quot;map&quot;</span>, game.getG());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">respA</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>(), respB = <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给A/B的信息</span></span><br><span class=\"line\">        respA.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">        respA.put(<span class=\"string\">&quot;opponent_username&quot;</span>, b.getUsername());</span><br><span class=\"line\">        respA.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, b.getPhoto());</span><br><span class=\"line\">        respA.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">        users.get(a.getId()).sendMessage(respA.toJSONString());  <span class=\"comment\">// A不一定是当前链接，因此要在users中获取</span></span><br><span class=\"line\"></span><br><span class=\"line\">        respB.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">        respB.put(<span class=\"string\">&quot;opponent_username&quot;</span>, a.getUsername());</span><br><span class=\"line\">        respB.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, a.getPhoto());</span><br><span class=\"line\">        respB.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">        users.get(b.getId()).sendMessage(respB.toJSONString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startMatching</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 需要向MatchingSystem发送请求</span></span><br><span class=\"line\">        MultiValueMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;user_id&quot;</span>, String.valueOf(user.getId()));</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;rating&quot;</span>, String.valueOf(user.getRating()));</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> restTemplate.postForObject(matchingAddPlayerUrl, data, String.class);  <span class=\"comment\">// 参数为请求地址、数据、返回值的Class</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;success&quot;</span>.equals(resp)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; start matching!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stopMatching</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 需要向MatchingSystem发送请求</span></span><br><span class=\"line\">        MultiValueMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;user_id&quot;</span>, String.valueOf(user.getId()));</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> restTemplate.postForObject(matchingRemovePlayerUrl, data, String.class);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;success&quot;</span>.equals(resp)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; stop matching!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">(Integer direction)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (game.getPlayerA().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepA(direction);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (game.getPlayerB().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepB(direction);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，从 Spring 5 开始，Spring 引入了一个新的 HTTP 客户端叫做 <code>WebClient</code>。<code>WebClient</code> 是 <code>RestTemplate</code> 的一个现代化的替代品，它不仅提供了传统的同步 API，还支持高效的非阻塞和异步方法。</p>\n<p><code>WebClient</code> 在 WebFlux 模块中，WebFlux 是 Spring 5.0 之后引入的一种基于响应式编程的 Web 框架。它是完全非阻塞式的，与传统的 Spring MVC 相比，WebFlux 是基于 NIO（新 IO，也叫非阻塞 IO），所以在 IO 性能上会比传统的 MVC 性能要好一些。</p>\n<p>如果需要替换成 <code>WebClient</code>，需要先安装依赖：<code>Spring Boot Starter WebFlux</code>，然后在 <code>config</code> 包下创建 <code>WebClientConfig</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebClientConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> WebClient <span class=\"title function_\">getWebClient</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> WebClient.builder().build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>WebClient</code> 接口提供了三个不同的静态方法来创建 <code>WebClient</code> 实例：</p>\n<ul>\n<li>利用 <code>create()</code> 创建。</li>\n<li>利用 <code>create(String baseUrl)</code> 创建。</li>\n<li>利用 <code>builder()</code> 创建（推荐）。</li>\n</ul>\n<p>使用 <code>builder()</code> 返回一个 <code>WebClient.Builder</code>，然后再调用 <code>build()</code> 就可以返回 <code>WebClient</code> 对象，我们可以用 <code>WebClient.Builder</code> 实例配置 <code>WebClient</code>：</p>\n<ul>\n<li><code>baseUrl(String baseUrl)</code>：这个方法用于设置 <code>WebClient</code> 的基础 URL，所有的请求都会基于这个 URL。例如，如果你设置了 <code>baseUrl(&quot;http://base.com&quot;)</code>，那么后续的 <code>.uri(&quot;/user/1&quot;)</code> 实际上是在请求 <code>http://base.com/user/1</code> 这个 URL。</li>\n<li><code>defaultHeader(String headerName, String... headerValues)</code>：这个方法用于设置默认的 HTTP 头，这些头会被添加到所有的请求中。例如，你可以使用 <code>defaultHeader(HttpHeaders.USER_AGENT, &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)&quot;)</code> 来设置 User-Agent 头。</li>\n<li><code>defaultCookie(String cookieName, String... cookieValues)</code>：这个方法用于设置默认的 HTTP Cookie。这些 Cookie 会被添加到所有的请求中。例如，你可以使用 <code>defaultCookie(&quot;ACCESS_TOKEN&quot;, &quot;test_token&quot;)</code> 来设置一个名为 <code>ACCESS_TOKEN</code> 的 Cookie。</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">WebClient</span> <span class=\"variable\">webClient</span> <span class=\"operator\">=</span> WebClient.builder()</span><br><span class=\"line\">        .baseUrl(<span class=\"string\">&quot;http://base.com&quot;</span>)</span><br><span class=\"line\">        .defaultHeader(HttpHeaders.USER_AGENT,<span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko)&quot;</span>)</span><br><span class=\"line\">        .defaultCookie(<span class=\"string\">&quot;ACCESS_TOKEN&quot;</span>, <span class=\"string\">&quot;test_token&quot;</span>)</span><br><span class=\"line\">        .build();</span><br></pre></td></tr></table></figure>\n<p>在 <code>WebSocketServer</code> 中按如下方式发送请求：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.reactive.function.BodyInserters;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> WebClient webClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 向匹配系统发送请求的URL</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">matchingAddPlayerUrl</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost:3001/matching/add/&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">matchingRemovePlayerUrl</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost:3001/matching/remove/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setWebClient</span><span class=\"params\">(WebClient webClient)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.webClient = webClient;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startMatching</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 需要向MatchingSystem发送请求</span></span><br><span class=\"line\">        MultiValueMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;user_id&quot;</span>, String.valueOf(user.getId()));</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;rating&quot;</span>, String.valueOf(user.getRating()));</span><br><span class=\"line\">        webClient.post()  <span class=\"comment\">// POST请求</span></span><br><span class=\"line\">                .uri(matchingAddPlayerUrl)  <span class=\"comment\">// 请求路径</span></span><br><span class=\"line\">                .body(BodyInserters.fromFormData(data))  <span class=\"comment\">// 请求体，MultiValueMap对象默认发起的是Form提交，使用BodyInserters.fromFormData()将其添加到请求体中</span></span><br><span class=\"line\">                .retrieve()  <span class=\"comment\">// 获取响应体</span></span><br><span class=\"line\">                .bodyToMono(String.class)  <span class=\"comment\">// 响应数据类型转换，返回Mono&lt;String&gt;类型的数据</span></span><br><span class=\"line\">                .subscribe(  <span class=\"comment\">// 回调函数会在请求完成时被调用，用于处理响应的结果</span></span><br><span class=\"line\">                        resp -&gt; &#123;  <span class=\"comment\">// 处理请求成功的响应</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;success&quot;</span>.equals(resp)) &#123;</span><br><span class=\"line\">                                System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; start matching!&quot;</span>);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        error -&gt; &#123;  <span class=\"comment\">// 处理请求错误的响应</span></span><br><span class=\"line\">                            System.out.println(<span class=\"string\">&quot;Start Matching WebClient Error: &quot;</span> + error.getMessage());</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stopMatching</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 需要向MatchingSystem发送请求</span></span><br><span class=\"line\">        MultiValueMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;user_id&quot;</span>, String.valueOf(user.getId()));</span><br><span class=\"line\">        webClient.post()</span><br><span class=\"line\">                .uri(matchingRemovePlayerUrl)</span><br><span class=\"line\">                .body(BodyInserters.fromFormData(data))</span><br><span class=\"line\">                .retrieve()</span><br><span class=\"line\">                .bodyToMono(String.class)</span><br><span class=\"line\">                .subscribe(</span><br><span class=\"line\">                        resp -&gt; &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;success&quot;</span>.equals(resp)) &#123;</span><br><span class=\"line\">                                System.out.println(<span class=\"string\">&quot;Player &quot;</span> + user.getId() + <span class=\"string\">&quot; stop matching!&quot;</span>);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        error -&gt; &#123;</span><br><span class=\"line\">                            System.out.println(<span class=\"string\">&quot;Stop Matching WebClient Error: &quot;</span> + error.getMessage());</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">(Integer direction)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (game.getPlayerA().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepA(direction);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (game.getPlayerB().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepB(direction);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在将两个后端项目都启动起来，可以在 IDEA 下方的服务（Services）选项卡的 <code>Add Service</code> 中点击 <code>Run Configuration Type</code>，然后选中 <code>Spring Boot</code>，这样就能在下方窗口中看到两个 SpringBoot 后端的情况。</p>\n<p>尝试在前端中开始匹配，可以看到 <code>matchingsystem</code> 后端控制台输出：<code>Add Player: 1, Rating: 1500</code>。</p>\n<h3 id=\"2-3-实现匹配逻辑\">2.3 实现匹配逻辑</h3>\n<p>匹配系统需要将当前正在匹配的用户放到一个匹配池中，然后开一个新线程每隔一段时间去扫描一遍匹配池，将能够匹配的玩家匹配在一起，我们的匹配逻辑是匹配两名分值接近的玩家，且随着时间的推移，两名玩家的分差可以越来越大。</p>\n<p>首先需要添加 <code>Project Lombok</code> 依赖，我们使用与之前 Web 后端相同的依赖版本：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.30<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在 <code>matchingsystem</code> 项目的 <code>service.impl</code> 包下创建 <code>utils</code> 包，然后在其中创建 <code>Player</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service.impl.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Player</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer userId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer rating;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer waitingTime;  <span class=\"comment\">// 等待时间</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于我们需要在 <code>matchingsystem</code> 项目中向 <code>backend</code> 发请求，因此也需要用 <code>WebClient</code>，将 <code>backend</code> 的 <code>config</code> 包中的 <code>WebClientConfig</code> 复制到 <code>matchingsystem</code> 的 <code>config</code> 包中（别忘了也需要在 <code>matchingsystem</code> 项目的 <code>pom.xml</code> 中添加 <code>Spring Boot Starter WebFlux</code> 依赖）。</p>\n<p>接着创建 <code>MatchingPool</code> 类用来维护我们的这个新线程：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service.impl.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.MultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.reactive.function.BodyInserters;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span>  <span class=\"comment\">// 为了在类中能够注入Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingPool</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> List&lt;Player&gt; players = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  <span class=\"comment\">// 我们之后会自己加锁，因此不需要用线程安全的集合</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> WebClient webClient;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">startGameUrl</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost:3000/pk/startgame/&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setWebClient</span><span class=\"params\">(WebClient webClient)</span> &#123;</span><br><span class=\"line\">        MatchingPool.webClient = webClient;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addPlayer</span><span class=\"params\">(Integer userId, Integer rating)</span> &#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            players.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Player</span>(userId, rating, <span class=\"number\">0</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">removePlayer</span><span class=\"params\">(Integer userId)</span> &#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            players.removeIf(player -&gt; player.getUserId().equals(userId));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">increaseWaitingTime</span><span class=\"params\">(Integer waitingTime)</span> &#123;  <span class=\"comment\">// 将当前所有等待匹配的玩家等待时间加waitingTime秒</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Player player: players) &#123;</span><br><span class=\"line\">            player.setWaitingTime(player.getWaitingTime() + waitingTime);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">checkMatched</span><span class=\"params\">(Player a, Player b)</span> &#123;  <span class=\"comment\">// 判断两名玩家是否能够匹配</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">ratingDelta</span> <span class=\"operator\">=</span> Math.abs(a.getRating() - b.getRating());  <span class=\"comment\">// 分差</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">minWatingTime</span> <span class=\"operator\">=</span> Math.min(a.getWaitingTime(), b.getWaitingTime());  <span class=\"comment\">// 等待时间较短的玩家符合匹配要求那么等待时间长的也一定符合要求</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ratingDelta &lt;= minWatingTime * <span class=\"number\">10</span>;  <span class=\"comment\">// 每多匹配一秒则匹配的分值范围加10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendResult</span><span class=\"params\">(Player a, Player b)</span> &#123;  <span class=\"comment\">// 返回匹配结果给Web后端</span></span><br><span class=\"line\">        MultiValueMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedMultiValueMap</span>&lt;&gt;();</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;a_id&quot;</span>, String.valueOf(a.getUserId()));</span><br><span class=\"line\">        data.add(<span class=\"string\">&quot;b_id&quot;</span>, String.valueOf(b.getUserId()));</span><br><span class=\"line\">        webClient.post()</span><br><span class=\"line\">                .uri(startGameUrl)</span><br><span class=\"line\">                .body(BodyInserters.fromFormData(data))</span><br><span class=\"line\">                .retrieve()</span><br><span class=\"line\">                .bodyToMono(String.class)</span><br><span class=\"line\">                .subscribe(</span><br><span class=\"line\">                        resp -&gt; &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (<span class=\"string\">&quot;success&quot;</span>.equals(resp)) &#123;</span><br><span class=\"line\">                                System.out.println(<span class=\"string\">&quot;Match Success: Player &quot;</span> + a.getUserId() + <span class=\"string\">&quot; and Player &quot;</span> + b.getUserId());</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;,</span><br><span class=\"line\">                        error -&gt; &#123;</span><br><span class=\"line\">                            System.out.println(<span class=\"string\">&quot;Matching WebClient Error: &quot;</span> + error.getMessage());</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">matchPlayers</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 尝试匹配所有玩家</span></span><br><span class=\"line\">        Set&lt;Player&gt; used = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();  <span class=\"comment\">// 标记玩家是否已经被匹配</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; players.size(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (used.contains(players.get(i))) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> i + <span class=\"number\">1</span>; j &lt; players.size(); j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (used.contains(players.get(j))) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"type\">Player</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> players.get(i), b = players.get(j);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (checkMatched(a, b)) &#123;</span><br><span class=\"line\">                    used.add(a);</span><br><span class=\"line\">                    used.add(b);</span><br><span class=\"line\">                    sendResult(a, b);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        players.removeIf(used::contains);  <span class=\"comment\">// 从players中移除used中的玩家</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                System.out.println(players);  <span class=\"comment\">// 输出当前匹配池中的玩家</span></span><br><span class=\"line\">                lock.lock();</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    increaseWaitingTime(<span class=\"number\">1</span>);</span><br><span class=\"line\">                    matchPlayers();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    lock.unlock();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从匹配池中删除玩家需要遍历找出 <code>userId</code> 所对应的玩家，<code>players.removeIf(player -&gt; player.getUserId().equals(userId));</code> 就等价于以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (Iterator&lt;Player&gt; it = players.iterator(); it.hasNext();) &#123;</span><br><span class=\"line\">    <span class=\"type\">Player</span> <span class=\"variable\">player</span> <span class=\"operator\">=</span> it.next();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (player.getUserId().equals(userId)) &#123;</span><br><span class=\"line\">        it.remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在即可将这个线程在 <code>MatchingServiceImpl</code> 中定义出来：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.matchingsystem.service.MatchingService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.matchingsystem.service.impl.utils.MatchingPool;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MatchingService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">MatchingPool</span> <span class=\"variable\">matchingPool</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MatchingPool</span>();  <span class=\"comment\">// 全局只有一个匹配线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">addPlayer</span><span class=\"params\">(Integer userId, Integer rating)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Add Player: &quot;</span> + userId + <span class=\"string\">&quot;, Rating: &quot;</span> + rating);</span><br><span class=\"line\">        matchingPool.addPlayer(userId, rating);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removePlayer</span><span class=\"params\">(Integer userId)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Remove Player: &quot;</span> + userId);</span><br><span class=\"line\">        matchingPool.removePlayer(userId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以在启动 <code>matchingsystem</code> 项目的时候就将该线程启动，即在 <code>MatchingSystemApplication</code> 这个主入口处启动：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.matchingsystem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.matchingsystem.service.impl.MatchingServiceImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MatchingSystemApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        MatchingServiceImpl.matchingPool.start();  <span class=\"comment\">// 启动匹配线程</span></span><br><span class=\"line\">        SpringApplication.run(MatchingSystemApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-Web后端接收匹配结果\">2.4 Web后端接收匹配结果</h3>\n<p>我们的 Web 后端还需要从 <code>matchingsystem</code> 接收请求，即接收匹配系统匹配成功的信息。在 <code>backend</code> 项目的 <code>service</code> 以及 <code>service.impl</code> 包下创建 <code>pk</code> 包，然后在 <code>service.pk</code> 包下创建 <code>StartGameService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">StartGameService</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">startGame</span><span class=\"params\">(Integer aId, Integer bId)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>service.impl.pk</code> 包下创建接口的实现 <code>StartGameServiceImpl</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.WebSocketServer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.pk.StartGameService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StartGameServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">StartGameService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">startGame</span><span class=\"params\">(Integer aId, Integer bId)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start Game: Player &quot;</span> + aId + <span class=\"string\">&quot; and Player &quot;</span> + bId);</span><br><span class=\"line\">        <span class=\"type\">WebSocketServer</span> <span class=\"variable\">webSocketServer</span> <span class=\"operator\">=</span> WebSocketServer.users.get(aId);</span><br><span class=\"line\">        webSocketServer.startGame(aId, bId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;success&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着在 <code>controller.pk</code> 包下创建 <code>StartGameController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.pk.StartGameService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.MultiValueMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Objects;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StartGameController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> StartGameService startGameService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/pk/startgame/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">startGame</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> MultiValueMap&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">aId</span> <span class=\"operator\">=</span> Integer.parseInt(Objects.requireNonNull(data.getFirst(<span class=\"string\">&quot;a_id&quot;</span>)));</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">bId</span> <span class=\"operator\">=</span> Integer.parseInt(Objects.requireNonNull(data.getFirst(<span class=\"string\">&quot;b_id&quot;</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> startGameService.startGame(aId, bId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实现完最后需要放行这个 URL，修改 <code>SecurityConfig</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SecurityFilterChain <span class=\"title function_\">filterChain</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        http.csrf(CsrfConfigurer::disable)</span><br><span class=\"line\">                .sessionManagement(sess -&gt; sess.sessionCreationPolicy(SessionCreationPolicy.STATELESS))</span><br><span class=\"line\">                .authorizeHttpRequests(auth -&gt; &#123;</span><br><span class=\"line\">                    ...</span><br><span class=\"line\">                    auth.requestMatchers(<span class=\"keyword\">new</span> <span class=\"title class_\">IpAddressMatcher</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>, <span class=\"string\">&quot;/pk/startgame/&quot;</span>)).permitAll();</span><br><span class=\"line\">                    ...</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/5710.html",
            "url": "https://asanosaki.github.io/posts/5710.html",
            "title": "SpringBoot学习笔记-实现微服务：匹配系统（中）",
            "date_published": "2023-11-30T15:13:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为同步玩家的移动与碰撞检测，并实现游戏结束的前端界面以及持久化游戏对局信息。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-同步玩家位置\">1. 同步玩家位置</h2>\n<h3 id=\"1-1-游戏信息的记录\">1.1 游戏信息的记录</h3>\n<p>两名玩家初始位置需要由服务器确定，且之后的每次移动都需要在服务器上判断。我们需要在 <code>Game</code> 类中添加 <code>Player</code> 类用来记录玩家的信息，在 <code>consumer.utils</code> 包下创建 <code>Player</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Player</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer sx;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer sy;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Integer&gt; steps;  <span class=\"comment\">// 记录历史走过的每一步方向</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就可以在 <code>Game</code> 中创建玩家：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Game</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Player playerA, playerB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Game</span><span class=\"params\">(Integer rows, Integer cols, Integer inner_walls_count, Integer idA, Integer idB)</span> &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        playerA = <span class=\"keyword\">new</span> <span class=\"title class_\">Player</span>(idA, rows - <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;());  <span class=\"comment\">// 默认A在左下角B在右上角</span></span><br><span class=\"line\">        playerB = <span class=\"keyword\">new</span> <span class=\"title class_\">Player</span>(idB, <span class=\"number\">1</span>, cols - <span class=\"number\">2</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Player <span class=\"title function_\">getPlayerA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> playerA;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Player <span class=\"title function_\">getPlayerB</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> playerB;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>WebSocketServer</code> 中创建 <code>Game</code> 时传入两名玩家的 ID，并且我们将与游戏内容相关的信息全部包装到一个 <code>JSONObject</code> 类中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.Game;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.JwtAuthentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.CopyOnWriteArraySet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startMatching</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start matching!&quot;</span>);</span><br><span class=\"line\">        matchPool.add(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (matchPool.size() &gt;= <span class=\"number\">2</span>) &#123;  <span class=\"comment\">// 临时调试用的，未来要替换成微服务</span></span><br><span class=\"line\">            Iterator&lt;User&gt; it = matchPool.iterator();</span><br><span class=\"line\">            <span class=\"type\">User</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> it.next(), b = it.next();</span><br><span class=\"line\">            matchPool.remove(a);</span><br><span class=\"line\">            matchPool.remove(b);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Game</span> <span class=\"variable\">game</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Game</span>(<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">20</span>, a.getId(), b.getId());</span><br><span class=\"line\">            game.createMap();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respGame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_id&quot;</span>, game.getPlayerA().getId());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_sx&quot;</span>, game.getPlayerA().getSx());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_sy&quot;</span>, game.getPlayerA().getSy());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_id&quot;</span>, game.getPlayerB().getId());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_sx&quot;</span>, game.getPlayerB().getSx());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_sy&quot;</span>, game.getPlayerB().getSy());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;map&quot;</span>, game.getG());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respA</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给A的信息</span></span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_username&quot;</span>, b.getUsername());</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, b.getPhoto());</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">            users.get(a.getId()).sendMessage(respA.toJSONString());  <span class=\"comment\">// A不一定是当前链接，因此要在users中获取</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respB</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给B的信息</span></span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_username&quot;</span>, a.getUsername());</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, a.getPhoto());</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">            users.get(b.getId()).sendMessage(respB.toJSONString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>前端也需要进行相应的修改，在 <code>store/pk.js</code> 中创建两名玩家的信息：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">a_id</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">a_sx</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">a_sy</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">b_id</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">b_sx</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">b_sy</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">gameObject</span>: <span class=\"literal\">null</span>,  <span class=\"comment\">// 整个GameMap对象</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">updateGame</span>(<span class=\"params\">state, game</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">game_map</span> = game.<span class=\"property\">map</span>;</span><br><span class=\"line\">      state.<span class=\"property\">a_id</span> = game.<span class=\"property\">a_id</span>;</span><br><span class=\"line\">      state.<span class=\"property\">a_sx</span> = game.<span class=\"property\">a_sx</span>;</span><br><span class=\"line\">      state.<span class=\"property\">a_sy</span> = game.<span class=\"property\">a_sy</span>;</span><br><span class=\"line\">      state.<span class=\"property\">b_id</span> = game.<span class=\"property\">b_id</span>;</span><br><span class=\"line\">      state.<span class=\"property\">b_sx</span> = game.<span class=\"property\">b_sx</span>;</span><br><span class=\"line\">      state.<span class=\"property\">b_sy</span> = game.<span class=\"property\">b_sy</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">updateGameObject</span>(<span class=\"params\">state, gameObject</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">gameObject</span> = gameObject;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>在 <code>GameMap.vue</code> 中需要先将 <code>GameMap</code> 对象存下来，之后会在 <code>PKIndexView</code> 中用到：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">GameMap</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/assets/scripts/GameMap&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> parent = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> canvas = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"string\">&quot;updateGameObject&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">new</span> <span class=\"title class_\">GameMap</span>(canvas.<span class=\"property\">value</span>.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>), parent.<span class=\"property\">value</span>, store));</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      parent,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      canvas,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p><code>PKIndexView</code> 中要传入从后端获取到的 <code>game</code> 数据：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">msg</span>) =&gt;</span> &#123;  <span class=\"comment\">// 接收到后端消息时会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;match_success&quot;</span>) &#123;  <span class=\"comment\">// 匹配成功</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateGame&quot;</span>, data.<span class=\"property\">game</span>);  <span class=\"comment\">// 更新游戏内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-实现多线程同步移动\">1.2 实现多线程同步移动</h3>\n<p>我们需要实现两名玩家的客户端以及服务器端的移动同步，假如 Client1 发出了移动指令，那么就会将这个消息发送给服务器，同理另一个客户端 Client2 发出移动指令时也会将消息发送给服务器，服务器在接收到两名玩家的消息后再将消息同步给两名玩家。</p>\n<p>我们在 <code>WebSocketServer</code> 中会维护一个游戏 <code>Game</code>，这个 <code>Game</code> 也有自己的执行流程，它会先创建地图 <code>creatMap</code>，接着会一步一步执行，即 <code>nextStep</code>，每一步会等待两名玩家的操作，这个操作可以是键盘输入，也可以是由 Bot 代码执行的微服务返回回来的结果。获取输入后会将结果发送给一个评判系统 <code>judge</code>，来判断两名玩家下一步是不是合法的，如果有一方不合法就游戏结束。</p>\n<p>在等待用户输入时会有一个时间限制，比如5秒，如果有一方还没有输入则表示输了，同样也是游戏结束。否则如果两方输入的下一步都是合法的则继续循环 <code>nextStep</code>。这个 <code>nextStep</code> 流程是比较独立的，而且每个游戏对局都有这个独立的过程，如果 <code>Game</code> 是单线程的，那么在等待用户输入时这个线程就会卡死，如果有多个游戏对局的话那么只能先卡死在某个对局中，其他对局的玩家体验就会很差，因此 <code>Game</code> 不能作为一个单线程来处理，每次在等待用户输入时都需要另起一个新的线程，这就涉及到了多线程的通信以及加锁的问题。</p>\n<p><code>ReentrantLock</code> 是 Java 中常用的锁，属于乐观锁类型，多线程并发情况下能保证共享数据安全性，线程间有序性。它的作用和 <code>synchronize</code> 是一样的，都是实现锁的功能，但是 <code>ReentrantLock</code> 需要手写代码对锁进行获取和释放（一定要在 <code>finally</code> 块里面释放），要不然就永远死锁了。<code>ReentrantLock</code> 通过原子操作和阻塞实现锁原理，一般使用 <code>lock()</code> 获取锁，<code>unlock()</code> 释放锁。</p>\n<p>我们将 <code>Game</code> 类继承自 <code>Thread</code> 类即可转为多线程，然后需要实现 <code>Thread</code> 的入口函数，使用快捷键 <code>Alt + Insert</code>，选择重写方法，需要重写的是 <code>run()</code> 方法，这是新线程的入口函数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.WebSocketServer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Game</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer rows;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer cols;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer inner_walls_count;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">boolean</span>[][] g;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>[] dx = &#123; -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span> &#125;, dy = &#123; <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Player playerA, playerB;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">nextStepA</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;  <span class=\"comment\">// 下一步操作，0、1、2、3分别表示四个方向，null表示还没有获取到</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Integer</span> <span class=\"variable\">nextStepB</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>();  <span class=\"comment\">// 需要给nextStep变量上锁防止读写冲突</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;playing&quot;</span>;  <span class=\"comment\">// 整局游戏的状态，结束后为finished</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">loser</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;  <span class=\"comment\">// 输的一方是谁，all表示平局</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Game</span><span class=\"params\">(Integer rows, Integer cols, Integer inner_walls_count, Integer idA, Integer idB)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rows = rows;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cols = cols;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.inner_walls_count = inner_walls_count;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.g = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[rows][cols];</span><br><span class=\"line\">        playerA = <span class=\"keyword\">new</span> <span class=\"title class_\">Player</span>(idA, rows - <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;());  <span class=\"comment\">// 默认A在左下角B在右上角</span></span><br><span class=\"line\">        playerB = <span class=\"keyword\">new</span> <span class=\"title class_\">Player</span>(idB, <span class=\"number\">1</span>, cols - <span class=\"number\">2</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Player <span class=\"title function_\">getPlayerA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> playerA;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Player <span class=\"title function_\">getPlayerB</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> playerB;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNextStepA</span><span class=\"params\">(Integer nextStepA)</span> &#123;  <span class=\"comment\">// 未来会在另一个线程中调用</span></span><br><span class=\"line\">        lock.lock();  <span class=\"comment\">// 操作nextStep变量前先上锁</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.nextStepA = nextStepA;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();  <span class=\"comment\">// 操作完后无论是否有异常都解锁</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setNextStepB</span><span class=\"params\">(Integer nextStepB)</span> &#123;</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.nextStepB = nextStepB;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span>[][] getG() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">check_connectivity</span><span class=\"params\">(<span class=\"type\">int</span> sx, <span class=\"type\">int</span> sy, <span class=\"type\">int</span> tx, <span class=\"type\">int</span> ty)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sx == tx &amp;&amp; sy == ty) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        g[sx][sy] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">nx</span> <span class=\"operator\">=</span> sx + dx[i], ny = sy + dy[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!g[nx][ny] &amp;&amp; check_connectivity(nx, ny, tx, ty)) &#123;</span><br><span class=\"line\">                g[sx][sy] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 注意在这里我们用的g就是原始数组，因此修改后要记得还原</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        g[sx][sy] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 记得还原</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">drawMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化障碍物标记数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.rows; i++) &#123;</span><br><span class=\"line\">            Arrays.fill(g[i], <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 给地图四周加上障碍物</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; r &lt; <span class=\"built_in\">this</span>.rows; r++) &#123;</span><br><span class=\"line\">            g[r][<span class=\"number\">0</span>] = g[r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; c &lt; <span class=\"built_in\">this</span>.cols; c++) &#123;</span><br><span class=\"line\">            g[<span class=\"number\">0</span>][c] = g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span>][c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 添加地图内部的随机障碍物，需要有对称性因此枚举一半即可，另一半对称生成</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">random</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.inner_walls_count / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">10000</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> random.nextInt(<span class=\"built_in\">this</span>.rows);  <span class=\"comment\">// 返回0~this.rows-1的随机整数</span></span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> random.nextInt(<span class=\"built_in\">this</span>.cols);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (g[r][c] || g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span> - r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span> - c]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (r == <span class=\"built_in\">this</span>.rows - <span class=\"number\">2</span> &amp;&amp; c == <span class=\"number\">1</span> || r == <span class=\"number\">1</span> &amp;&amp; c == <span class=\"built_in\">this</span>.cols - <span class=\"number\">2</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                g[r][c] = g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span> - r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span> - c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> check_connectivity(<span class=\"built_in\">this</span>.rows - <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"built_in\">this</span>.cols - <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">createMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (drawMap()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">nextStep</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 等待两名玩家的下一步操作，在该方法中也会操作nextStep变量</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">500</span>);  <span class=\"comment\">// 前端的蛇每秒走2格，因此走一格需要500ms，每次后端执行下一步时需要先sleep，否则快速的多次输入将会覆盖掉之前输入的信息</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">50</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">100</span>);  <span class=\"comment\">// 每回合循环50次，每次睡眠100ms，即一回合等待用户输入的时间为5s</span></span><br><span class=\"line\">                lock.lock();</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (nextStepA != <span class=\"literal\">null</span> &amp;&amp; nextStepB != <span class=\"literal\">null</span>) &#123;  <span class=\"comment\">// 两名玩家的下一步操作都读到了</span></span><br><span class=\"line\">                        playerA.getSteps().add(nextStepA);</span><br><span class=\"line\">                        playerB.getSteps().add(nextStepB);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    lock.unlock();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">judge</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 判断两名玩家下一步操作是否合法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendAllMessage</span><span class=\"params\">(String message)</span> &#123;  <span class=\"comment\">// 向两个Client发送消息</span></span><br><span class=\"line\">        WebSocketServer.users.get(playerA.getId()).sendMessage(message);</span><br><span class=\"line\">        WebSocketServer.users.get(playerB.getId()).sendMessage(message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMove</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 向两个Client发送移动消息</span></span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">            resp.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;move&quot;</span>);</span><br><span class=\"line\">            resp.put(<span class=\"string\">&quot;a_direction&quot;</span>, nextStepA);</span><br><span class=\"line\">            resp.put(<span class=\"string\">&quot;b_direction&quot;</span>, nextStepB);</span><br><span class=\"line\">            sendAllMessage(resp.toJSONString());</span><br><span class=\"line\">            nextStepA = nextStepB = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendResult</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 向两个Client公布结果</span></span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">        resp.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;result&quot;</span>);</span><br><span class=\"line\">        resp.put(<span class=\"string\">&quot;loser&quot;</span>, loser);</span><br><span class=\"line\">        sendAllMessage(resp.toJSONString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000</span>; i++) &#123;  <span class=\"comment\">// 游戏最多走的步数不会超过1000</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextStep()) &#123;  <span class=\"comment\">// 是否获取了两条蛇的下一步操作</span></span><br><span class=\"line\">                judge();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;playing&quot;</span>.equals(status)) &#123;  <span class=\"comment\">// 如果游戏还在进行中则需要将两名玩家的操作广播给两个Client</span></span><br><span class=\"line\">                    sendMove();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    sendResult();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                status = <span class=\"string\">&quot;finished&quot;</span>;</span><br><span class=\"line\">                lock.lock();</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (nextStepA == <span class=\"literal\">null</span> &amp;&amp; nextStepB == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        loser = <span class=\"string\">&quot;all&quot;</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nextStepA == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        loser = <span class=\"string\">&quot;A&quot;</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        loser = <span class=\"string\">&quot;B&quot;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                    lock.unlock();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sendResult();  <span class=\"comment\">// 这一步结束后需要给两个Client发送消息</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后前端 <code>GameMap.js</code> 中在移动时需要向后端通信，现在两名玩家的键盘输入操作就只需要 <code>W/S/A/D</code> 了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Snake</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Snake&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">add_listening_events</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"title function_\">focus</span>();  <span class=\"comment\">// 使Canvas聚焦</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> d = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;w&quot;</span>) d = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;d&quot;</span>) d = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;s&quot;</span>) d = <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;a&quot;</span>) d = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (d !== -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">store</span>.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">socket</span>.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">event</span>: <span class=\"string\">&quot;move&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">direction</span>: d,</span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>WebSocketServer</code> 对于每局游戏对局都会创建一个 <code>Game</code> 类，通过 <code>start()</code> 方法可以新开一个线程运行 <code>Game</code> 中的 <code>run()</code> 方法，由于我们需要在 <code>Game</code> 中使用 <code>WebSocketServer</code> 的 <code>users</code>，还需要将 <code>users</code> 修改为 <code>public</code>，然后需要接收前端的移动请求：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.Game;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.JwtAuthentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.CopyOnWriteArraySet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ConcurrentHashMap是一个线程安全的哈希表，用于将用户ID映射到WS实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;Integer, WebSocketServer&gt; users = <span class=\"keyword\">new</span> <span class=\"title class_\">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// CopyOnWriteArraySet也是线程安全的</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> CopyOnWriteArraySet&lt;User&gt; matchPool = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArraySet</span>&lt;&gt;();  <span class=\"comment\">// 匹配池</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Game</span> <span class=\"variable\">game</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserMapper</span><span class=\"params\">(UserMapper userMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.userMapper = userMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.session = session;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Connected!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> JwtAuthentication.getUserId(token);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.user = userMapper.selectById(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.put(userId, <span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.session.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnClose</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClose</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.remove(<span class=\"built_in\">this</span>.user.getId());</span><br><span class=\"line\">            matchPool.remove(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnMessage</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(String message, Session session)</span> &#123;  <span class=\"comment\">// 一般会把onMessage()当作路由</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Receive message!&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> JSONObject.parseObject(message);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">event</span> <span class=\"operator\">=</span> data.getString(<span class=\"string\">&quot;event&quot;</span>);  <span class=\"comment\">// 取出event的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;start_match&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 开始匹配</span></span><br><span class=\"line\">            <span class=\"built_in\">this</span>.startMatching();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;stop_match&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 取消匹配</span></span><br><span class=\"line\">            <span class=\"built_in\">this</span>.stopMatching();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;move&quot;</span>.equals(event)) &#123;  <span class=\"comment\">// 移动</span></span><br><span class=\"line\">            move(data.getInteger(<span class=\"string\">&quot;direction&quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnError</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Session session, Throwable error)</span> &#123;</span><br><span class=\"line\">        error.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">(String message)</span> &#123;  <span class=\"comment\">// 从后端向当前链接发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>.session) &#123;  <span class=\"comment\">// 由于是异步通信，需要加一个锁</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.session.getBasicRemote().sendText(message);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startMatching</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start matching!&quot;</span>);</span><br><span class=\"line\">        matchPool.add(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (matchPool.size() &gt;= <span class=\"number\">2</span>) &#123;  <span class=\"comment\">// 临时调试用的，未来要替换成微服务</span></span><br><span class=\"line\">            Iterator&lt;User&gt; it = matchPool.iterator();</span><br><span class=\"line\">            <span class=\"type\">User</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> it.next(), b = it.next();</span><br><span class=\"line\">            matchPool.remove(a);</span><br><span class=\"line\">            matchPool.remove(b);</span><br><span class=\"line\"></span><br><span class=\"line\">            game = <span class=\"keyword\">new</span> <span class=\"title class_\">Game</span>(<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">20</span>, a.getId(), b.getId());</span><br><span class=\"line\">            game.createMap();</span><br><span class=\"line\">            users.get(a.getId()).game = game;</span><br><span class=\"line\">            users.get(b.getId()).game = game;</span><br><span class=\"line\"></span><br><span class=\"line\">            game.start();  <span class=\"comment\">// 开一个新的线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respGame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_id&quot;</span>, game.getPlayerA().getId());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_sx&quot;</span>, game.getPlayerA().getSx());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;a_sy&quot;</span>, game.getPlayerA().getSy());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_id&quot;</span>, game.getPlayerB().getId());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_sx&quot;</span>, game.getPlayerB().getSx());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;b_sy&quot;</span>, game.getPlayerB().getSy());</span><br><span class=\"line\">            respGame.put(<span class=\"string\">&quot;map&quot;</span>, game.getG());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respA</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给A的信息</span></span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_username&quot;</span>, b.getUsername());</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, b.getPhoto());</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">            users.get(a.getId()).sendMessage(respA.toJSONString());  <span class=\"comment\">// A不一定是当前链接，因此要在users中获取</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respB</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给B的信息</span></span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_username&quot;</span>, a.getUsername());</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, a.getPhoto());</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;game&quot;</span>, respGame);</span><br><span class=\"line\">            users.get(b.getId()).sendMessage(respB.toJSONString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stopMatching</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Stop matching!&quot;</span>);</span><br><span class=\"line\">        matchPool.remove(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">(Integer direction)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (game.getPlayerA().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepA(direction);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (game.getPlayerB().getId().equals(user.getId())) &#123;</span><br><span class=\"line\">            game.setNextStepB(direction);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在 <code>PKIndexView</code> 中处理接收到后端发来的移动消息以及游戏结束消息：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PlayGround</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$store.state.pk.status === &#x27;playing&#x27;&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">MatchGround</span> <span class=\"attr\">v-else</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">PlayGround</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/PlayGround.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">MatchGround</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/MatchGround.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; onMounted, onUnmounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">PlayGround</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">MatchGround</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> socket = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> socket_url = <span class=\"string\">`ws://localhost:3000/websocket/<span class=\"subst\">$&#123;store.state.user.jwt_token&#125;</span>/`</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(socket_url);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: <span class=\"string\">&quot;我的对手&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">photo</span>: <span class=\"string\">&quot;https://cdn.acwing.com/media/article/image/2022/08/09/1_1db2488f17-anonymous.png&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 链接成功建立后会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Connected!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateSocket&quot;</span>, socket);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">msg</span>) =&gt;</span> &#123;  <span class=\"comment\">// 接收到后端消息时会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(msg.<span class=\"property\">data</span>);  <span class=\"comment\">// Spring传过来的数据是放在消息的data中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;match_success&quot;</span>) &#123;  <span class=\"comment\">// 匹配成功</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;  <span class=\"comment\">// 更新对手信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">username</span>: data.<span class=\"property\">opponent_username</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">photo</span>: data.<span class=\"property\">opponent_photo</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateGame&quot;</span>, data.<span class=\"property\">game</span>);  <span class=\"comment\">// 更新游戏内容</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 3秒后再进入游戏地图界面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;playing&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;, <span class=\"number\">3000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;move&quot;</span>) &#123;  <span class=\"comment\">// 两名玩家的移动</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">const</span> gameObject = store.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">gameObject</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">const</span> [snake0, snake1] = gameObject.<span class=\"property\">snakes</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          snake0.<span class=\"title function_\">set_direction</span>(data.<span class=\"property\">a_direction</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          snake1.<span class=\"title function_\">set_direction</span>(data.<span class=\"property\">b_direction</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;result&quot;</span>) &#123;  <span class=\"comment\">// 游戏结束</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">const</span> gameObject = store.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">gameObject</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">const</span> [snake0, snake1] = gameObject.<span class=\"property\">snakes</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (data.<span class=\"property\">loser</span> === <span class=\"string\">&quot;all&quot;</span> || data.<span class=\"property\">loser</span> === <span class=\"string\">&quot;A&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            snake0.<span class=\"property\">status</span> = <span class=\"string\">&quot;die&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (data.<span class=\"property\">loser</span> === <span class=\"string\">&quot;all&quot;</span> || data.<span class=\"property\">loser</span> === <span class=\"string\">&quot;B&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            snake1.<span class=\"property\">status</span> = <span class=\"string\">&quot;die&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onclose</span> = <span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 关闭链接后会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;matching&quot;</span>);  <span class=\"comment\">// 进入游戏地图后玩家点击其他页面应该是默认退出游戏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"title function_\">close</span>();  <span class=\"comment\">// 如果不断开链接每次切换页面都会创建新链接，就会导致有很多冗余链接</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1>2. 同步碰撞检测</h1>\n<p>现在还需要将碰撞检测放到后端进行判断，先将 <code>Snake.js</code> 中的碰撞检测判断代码删掉，并将死后变白的逻辑放到 <code>render()</code> 函数中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将蛇的状态变为走下一步</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// if (!this.gamemap.check_next_valid(this.next_cell)) &#123;  // 下一步不合法</span></span><br><span class=\"line\">    <span class=\"comment\">//   this.status = &quot;die&quot;;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&quot;die&quot;</span>) &#123;</span><br><span class=\"line\">      ctx.<span class=\"property\">fillStyle</span> = <span class=\"string\">&quot;white&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来需要实现后端中的 <code>judge()</code> 方法，在判断的时候需要知道当前蛇的身体有哪些，先在 <code>comsumer.utils</code> 包下创建 <code>Cell</code> 类表示身体的每一格：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Cell</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x;</span><br><span class=\"line\">    <span class=\"type\">int</span> y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>Player</code> 类中创建一个方法能够根据玩家历史走过的路径找出当前这条蛇身体的每一格：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Player</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer sx;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer sy;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Integer&gt; steps;  <span class=\"comment\">// 记录历史走过的每一步方向</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">check_tail_increasing</span><span class=\"params\">(<span class=\"type\">int</span> step)</span> &#123;  <span class=\"comment\">// 检测当前回合蛇的长度是否增加</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (step &lt;= <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  <span class=\"comment\">// 前7回合每一回合长度都增加</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> step % <span class=\"number\">3</span> == <span class=\"number\">1</span>;  <span class=\"comment\">// 之后每3回合增加一次长度</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Cell&gt; <span class=\"title function_\">getCells</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 返回蛇的身体，每次都根据蛇历史走的方向将其每一格找出来</span></span><br><span class=\"line\">        List&lt;Cell&gt; cells = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"type\">int</span>[] dx = &#123; -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span> &#125;, dy = &#123; <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> sx, y = sy;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">step</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        cells.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(x, y));</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> d: steps) &#123;</span><br><span class=\"line\">            x += dx[d];</span><br><span class=\"line\">            y += dy[d];</span><br><span class=\"line\">            cells.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(x, y));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!check_tail_increasing(++step)) &#123;</span><br><span class=\"line\">                cells.remove(<span class=\"number\">0</span>);  <span class=\"comment\">// 删掉蛇尾，即第一个起始的位置</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cells;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后即可在 <code>Game</code> 类中实现 <code>judge()</code> 方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Game</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">check_valid</span><span class=\"params\">(List&lt;Cell&gt; cellsA, List&lt;Cell&gt; cellsB)</span> &#123;  <span class=\"comment\">// 判断A是否合法</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> cellsA.size();</span><br><span class=\"line\">        <span class=\"type\">Cell</span> <span class=\"variable\">headCellA</span> <span class=\"operator\">=</span> cellsA.get(n - <span class=\"number\">1</span>);  <span class=\"comment\">// A的头，也就是最后一个Cell</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (g[headCellA.x][headCellA.y]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;  <span class=\"comment\">// 判断除了头以外的其他身体部分</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cellsA.get(i).x == headCellA.x &amp;&amp; cellsA.get(i).y == headCellA.y) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cellsB.get(i).x == headCellA.x &amp;&amp; cellsB.get(i).y == headCellA.y) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">judge</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 判断两名玩家下一步操作是否合法</span></span><br><span class=\"line\">        List&lt;Cell&gt; cellsA = playerA.getCells();</span><br><span class=\"line\">        List&lt;Cell&gt; cellsB = playerB.getCells();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">validA</span> <span class=\"operator\">=</span> check_valid(cellsA, cellsB);</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">validB</span> <span class=\"operator\">=</span> check_valid(cellsB, cellsA);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!validA || !validB) &#123;</span><br><span class=\"line\">            status = <span class=\"string\">&quot;finished&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!validA &amp;&amp; !validB) &#123;</span><br><span class=\"line\">                loser = <span class=\"string\">&quot;all&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!validA) &#123;</span><br><span class=\"line\">                loser = <span class=\"string\">&quot;A&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                loser = <span class=\"string\">&quot;B&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1>3. 实现游戏结束界面</h1>\n<p>首先我们需要将输的玩家记录到前端的全局变量中，在 <code>store/pk.js</code> 中添加 <code>loser</code> 变量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">loser</span>: <span class=\"string\">&quot;none&quot;</span>,  <span class=\"comment\">// none表示没人输，all表示平局，A/B表示A/B赢</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">updateLoser</span>(<span class=\"params\">state, loser</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">loser</span> = loser;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>PKIndexView</code> 组件的游戏结束处理语句块中添加更新 <code>loser</code> 的语句：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateLoser&quot;</span>, data.<span class=\"property\">loser</span>);</span><br></pre></td></tr></table></figure>\n<p>游戏结束后需要给用户展示谁赢谁输的界面，并提供一个重开按钮，在 <code>components</code> 目录下创建 <code>ResultBoard.vue</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card text-bg-secondary text-center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 26px;&quot;</span>&gt;</span></span><br><span class=\"line\">      游戏结束</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: rgba(255, 255, 255, 0.4);&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;result_board_text&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$store.state.pk.loser === &#x27;all&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">        Draw</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;result_board_text&quot;</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;$store.state.pk.loser === &#x27;A&#x27; &amp;&amp; $store.state.pk.a_id.toString() === $store.state.user.id&quot;</span>&gt;</span></span><br><span class=\"line\">        Lose</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;result_board_text&quot;</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;$store.state.pk.loser === &#x27;B&#x27; &amp;&amp; $store.state.pk.b_id.toString() === $store.state.user.id&quot;</span>&gt;</span></span><br><span class=\"line\">        Lose</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;result_board_text&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">        Win</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;result_board_btn&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;returnHome&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info btn-lg&quot;</span>&gt;</span></span><br><span class=\"line\">            返回主页</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">returnHome</span> = (<span class=\"params\"></span>) =&gt; &#123;  <span class=\"comment\">// 需要复原一些全局变量</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;matching&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateLoser&quot;</span>, <span class=\"string\">&quot;none&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: <span class=\"string\">&quot;我的对手&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">photo</span>: <span class=\"string\">&quot;https://cdn.acwing.com/media/article/image/2022/08/09/1_1db2488f17-anonymous.png&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      returnHome,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.card</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">width</span>: <span class=\"number\">30vw</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">position</span>: absolute;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">top</span>: <span class=\"number\">25vh</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">left</span>: <span class=\"number\">35vw</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.result_board_text</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">font-style</span>: italic;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5vh</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.result_board_btn</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3vh</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意 <code>state.pk</code> 中的 <code>a_id</code> 和 <code>b_id</code> 是整数，而之前 <code>state.user</code> 中的 <code>id</code> 是字符串，因此需要做类型转换再判断是否相等。</p>\n<h1>4. 持久化游戏状态</h1>\n<h2 id=\"4-1-创建数据库表\">4.1 创建数据库表</h2>\n<p>最后我们还需要将游戏过程存到数据库中，方便用户之后回看游戏录像，在数据库中创建 <code>record</code> 表用来记录每局对战的信息：</p>\n<ul>\n<li><code>id: int</code>（主键、自增、非空）</li>\n<li><code>a_id: int</code></li>\n<li><code>a_sx: int</code></li>\n<li><code>a_sy: int</code></li>\n<li><code>b_id: int</code></li>\n<li><code>b_sx: int</code></li>\n<li><code>b_sy: int</code></li>\n<li><code>a_steps: varchar(1000)</code></li>\n<li><code>b_steps: varchar(1000)</code></li>\n<li><code>map: varchar(1000)</code></li>\n<li><code>loser: varchar(10)</code></li>\n<li><code>createtime: datetime</code></li>\n</ul>\n<p>创建该数据库表的 SQL 语句如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `kob`.`record` (</span><br><span class=\"line\">    `id` <span class=\"type\">int</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">    `a_id` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `a_sx` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `a_sy` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `b_id` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `b_sx` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `b_sy` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `a_steps` <span class=\"type\">varchar</span>(<span class=\"number\">1000</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `b_steps` <span class=\"type\">varchar</span>(<span class=\"number\">1000</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `map` <span class=\"type\">varchar</span>(<span class=\"number\">1000</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `loser` <span class=\"type\">varchar</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `createtime` datetime <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>在 <code>pojo</code> 包下创建 <code>Record</code> 类如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Record</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer aId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer aSx;  <span class=\"comment\">// 注意别忘了驼峰命名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer aSy;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer bId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer bSx;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer bSy;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String aSteps;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String bSteps;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String map;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String loser;</span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;, timezone = &quot;Asia/Shanghai&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createtime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>mapper</code> 包下创建 <code>RecordMapper</code> 类如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Record;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">RecordMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Record&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-2-保存游戏对局信息\">4.2 保存游戏对局信息</h2>\n<p>可以在向前端发送游戏结果消息之前将对局信息存下来，首先需要在 <code>WebSocketServer</code> 中将 <code>RecordMapper</code> 创建出来：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RecordMapper recordMapper;  <span class=\"comment\">// 要在Game中调用</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRecordMapper</span><span class=\"params\">(RecordMapper recordMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.recordMapper = recordMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>Player</code> 中创建辅助函数用来返回 <code>steps</code> 的字符串形式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Player</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Integer&gt; steps;  <span class=\"comment\">// 记录历史走过的每一步方向</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getStringSteps</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 将steps转换成字符串</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> d: steps) &#123;</span><br><span class=\"line\">            res.append(d);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后就可以在 <code>Game</code> 中将游戏记录保存至数据库中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Game</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String <span class=\"title function_\">getStringMap</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 将g转换成01字符串</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; rows; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; cols; j++) &#123;</span><br><span class=\"line\">                res.append(g[i][j] ? <span class=\"number\">1</span> : <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">saveRecord</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 将对局信息存到数据库中</span></span><br><span class=\"line\">        <span class=\"type\">Record</span> <span class=\"variable\">record</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Record</span>(</span><br><span class=\"line\">                <span class=\"literal\">null</span>,</span><br><span class=\"line\">                playerA.getId(),</span><br><span class=\"line\">                playerA.getSx(),</span><br><span class=\"line\">                playerA.getSy(),</span><br><span class=\"line\">                playerB.getId(),</span><br><span class=\"line\">                playerB.getSx(),</span><br><span class=\"line\">                playerB.getSy(),</span><br><span class=\"line\">                playerA.getStringSteps(),</span><br><span class=\"line\">                playerB.getStringSteps(),</span><br><span class=\"line\">                getStringMap(),</span><br><span class=\"line\">                loser,</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()</span><br><span class=\"line\">        );</span><br><span class=\"line\">        WebSocketServer.recordMapper.insert(record);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendResult</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 向两个Client公布结果</span></span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();</span><br><span class=\"line\">        resp.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;result&quot;</span>);</span><br><span class=\"line\">        resp.put(<span class=\"string\">&quot;loser&quot;</span>, loser);</span><br><span class=\"line\">        saveRecord();  <span class=\"comment\">// 在发送结束消息给前端之前先将游戏记录存下来</span></span><br><span class=\"line\">        sendAllMessage(resp.toJSONString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/41540.html",
            "url": "https://asanosaki.github.io/posts/41540.html",
            "title": "SpringBoot学习笔记-实现微服务：匹配系统（上）",
            "date_published": "2023-11-22T12:56:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现前后端的 WebSocket 通信，并同步游戏地图的生成。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>我们的游戏之后是两名玩家对战，因此需要实现联机功能，在这之前还需要实现一个匹配系统，能够匹配分数相近的玩家进行对战。</p>\n<p>想要进行匹配就至少要有两个客户端，当两个客户端都向服务器发送匹配请求后并不会马上得到返回结果，一般会等待一段时间，这个时间是未知的，因此这个匹配是一个<strong>异步</strong>的过程，对于这种异步的过程或者是计算量比较大的过程我们都会用一个额外的服务来操作。</p>\n<p>那么这个额外的用于匹配的服务可以称为 Matching System，这是另外一个程序（进程），当后端服务器接收到前端的请求后就会将请求发送给 Matching System，这个匹配系统维护了一堆用户的集合，它会不断地去匹配分数最接近的用户，当匹配成功一组用户后就会将结果返回给后端服务器，再由后端将匹配结果立即返回给对应的前端。这种服务就被称为微服务，可以用 Spring Cloud 实现。</p>\n<p>用以前的 HTTP 请求很难达到这种效果，之前我们是在客户端向后端发送请求，且后端在短时间内就会返回结果，HTTP 请求只能满足这种一问一答式的服务。而我们现在需要实现的效果是客户端发送请求后不知道经过多长时间后端才会返回结果，对于这种情况需要使用 WebSocket 协议（WS），该协议不仅支持客户端向服务器发送请求，也支持服务器向客户端发送请求。</p>\n<p>在前端向服务器发送请求后，服务器会维护好一个 WS 链接，这个链接其实就是一个 <code>WebSocketServer</code> 类的实例，所有和这个链接相关的信息都会存到这个类中。</p>\n<h2 id=\"1-配置WebSocket\">1. 配置WebSocket</h2>\n<p>我们之前每次刷新网页就会随机生成游戏地图，该过程是在浏览器本地执行的，当我们要实现匹配功能时，地图就不能由两名玩家各自的客户端生成，否则就基本不可能完全一样了。</p>\n<p>当匹配成功后应该由服务器端创建一个 Game 任务，将游戏放到该任务下执行，统一生成地图，且判断移动或者输赢等逻辑之后也应该移到后端来执行。</p>\n<p>生成好地图后服务器就将地图传给两名玩家的前端，然后等待玩家的键盘输入或者是 Bot 代码的输入，Bot 代码的输入也属于一个微服务。</p>\n<p>首先我们先在 <code>pom.xml</code> 文件中添加以下依赖：</p>\n<ul>\n<li><code>spring-boot-starter-websocket</code></li>\n<li><code>fastjson2</code></li>\n</ul>\n<p>接着在 <code>config</code> 包下创建 <code>WebSocketConfig</code> 配置类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.socket.server.standard.ServerEndpointExporter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ServerEndpointExporter <span class=\"title function_\">serverEndpointExporter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerEndpointExporter</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们创建一个 <code>consumer</code> 包，在其中创建 <code>WebSocketServer</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 建立链接</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnClose</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClose</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 关闭链接</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnMessage</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(String message, Session session)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 从Client接收消息</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnError</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Session session, Throwable error)</span> &#123;</span><br><span class=\"line\">        error.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>之前我们配置的 Spring Security 设置了屏蔽除了授权之外的其他所有链接，因此我们需要在 <code>SecurityConfig</code> 类中放行一下 WebSocket 的链接：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.config.filter.JwtAuthenticationTokenFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;  <span class=\"comment\">// AuthenticationManager用于处理身份验证</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.authenticationManagerBean();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;  <span class=\"comment\">// 配置HttpSecurity</span></span><br><span class=\"line\">        http.csrf().disable()</span><br><span class=\"line\">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .authorizeRequests()</span><br><span class=\"line\">                .antMatchers(<span class=\"string\">&quot;/user/account/login/&quot;</span>, <span class=\"string\">&quot;/user/account/register/&quot;</span>).permitAll()  <span class=\"comment\">// 需要公开的链接在这边写即可</span></span><br><span class=\"line\">                .antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class=\"line\">                .anyRequest().authenticated();</span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(WebSecurity web)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        web.ignoring().antMatchers(<span class=\"string\">&quot;/websocket/**&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是使用新版的配置而不是使用 <code>WebSecurityConfigurerAdapter</code> 可以按以下方式配置：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.config.filter.JwtAuthenticationTokenFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">(AuthenticationConfiguration authenticationConfiguration)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> authenticationConfiguration.getAuthenticationManager();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SecurityFilterChain <span class=\"title function_\">filterChain</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        http.csrf().disable()</span><br><span class=\"line\">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .authorizeRequests()</span><br><span class=\"line\">                .antMatchers(<span class=\"string\">&quot;/user/account/login/&quot;</span>, <span class=\"string\">&quot;/user/account/register/&quot;</span>).permitAll()</span><br><span class=\"line\">                .antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class=\"line\">                .anyRequest().authenticated();</span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> http.build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> WebSecurityCustomizer <span class=\"title function_\">webSecurityCustomizer</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (web) -&gt; web.ignoring().antMatchers(<span class=\"string\">&quot;/websocket/**&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-前后端WebSocket通信\">2. 前后端WebSocket通信</h2>\n<h3 id=\"2-1-WS通信的建立\">2.1 WS通信的建立</h3>\n<p>WebSocket 不属于单例模式（同一个时间每个类只能有一个实例，我们每建一个 WS 链接都会新创建一个实例），不是标准的 Spring 中的组件，因此在注入 <code>Mapper</code> 时不能用 <code>@Autowired</code> 直接注入，一般是将 <code>@Autowired</code> 写在一个 <code>set()</code> 方法上，Spring 会根据方法的参数类型从 IoC 容器中找到该类型的 Bean 对象注入到方法的行参中，并且自动反射调用该方法。</p>\n<p>我们先假设前端传过来的是用户 ID 而不是 JWT 令牌：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ConcurrentHashMap是一个线程安全的哈希表，用于将用户ID映射到WS实例</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;Integer, WebSocketServer&gt; users = <span class=\"keyword\">new</span> <span class=\"title class_\">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserMapper</span><span class=\"params\">(UserMapper userMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.userMapper = userMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.session = session;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Connected!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> Integer.parseInt(token);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.user = userMapper.selectById(userId);</span><br><span class=\"line\">        users.put(userId, <span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnClose</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClose</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.remove(<span class=\"built_in\">this</span>.user.getId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnMessage</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(String message, Session session)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Receive message!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnError</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Session session, Throwable error)</span> &#123;</span><br><span class=\"line\">        error.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">(String message)</span> &#123;  <span class=\"comment\">// 从后端向当前链接发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>.session) &#123;  <span class=\"comment\">// 由于是异步通信，需要加一个锁</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.session.getBasicRemote().sendText(message);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们先在前端的 <code>PKIndexView</code> 组件中调试，当组件被挂载完成后发出请求建立 WS 链接，当被卸载后关闭 WS 链接：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PlayGround</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">PlayGround</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/PlayGround.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; onMounted, onUnmounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">PlayGround</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> socket = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> socket_url = <span class=\"string\">`ws://localhost:3000/websocket/<span class=\"subst\">$&#123;store.state.user.id&#125;</span>/`</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(socket_url);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: <span class=\"string\">&quot;我的对手&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">photo</span>: <span class=\"string\">&quot;https://cdn.acwing.com/media/article/image/2022/08/09/1_1db2488f17-anonymous.png&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onopen</span> = <span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 链接成功建立后会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Connected!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateSocket&quot;</span>, socket);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">msg</span>) =&gt;</span> &#123;  <span class=\"comment\">// 接收到后端消息时会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(msg.<span class=\"property\">data</span>);  <span class=\"comment\">// Spring传过来的数据是放在消息的data中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onclose</span> = <span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 关闭链接后会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onUnmounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"title function_\">close</span>();  <span class=\"comment\">// 如果不断开链接每次切换页面都会创建新链接，就会导致有很多冗余链接</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现在我们在对战页面每次刷新后都可以在浏览器控制台或后端控制台中看到 WS 的输出信息。</p>\n<p>接下来我们要将 WebSocket 存到前端的 <code>store</code> 中，在 <code>store</code> 目录下创建 <code>pk.js</code> 用来存储和对战页面相关的全局变量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">status</span>: <span class=\"string\">&quot;matching&quot;</span>,  <span class=\"comment\">// 当前状态，matching表示正在匹配，playing表示正在对战</span></span><br><span class=\"line\">    <span class=\"attr\">socket</span>: <span class=\"literal\">null</span>,  <span class=\"comment\">// 前端和后端建立的链接</span></span><br><span class=\"line\">    <span class=\"attr\">opponent_username</span>: <span class=\"string\">&quot;&quot;</span>,  <span class=\"comment\">// 对手的用户名</span></span><br><span class=\"line\">    <span class=\"attr\">opponent_photo</span>: <span class=\"string\">&quot;&quot;</span>,  <span class=\"comment\">// 对手的头像</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">updateSocket</span>(<span class=\"params\">state, socket</span>) &#123;</span><br><span class=\"line\">        state.<span class=\"property\">socket</span> = socket;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">updateOpponent</span>(<span class=\"params\">state, opponent</span>) &#123;</span><br><span class=\"line\">        state.<span class=\"property\">opponent_username</span> = opponent.<span class=\"property\">username</span>;</span><br><span class=\"line\">        state.<span class=\"property\">opponent_photo</span> = opponent.<span class=\"property\">photo</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">updateStatus</span>(<span class=\"params\">state, status</span>) &#123;</span><br><span class=\"line\">        state.<span class=\"property\">status</span> = status;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>同时要在 <code>store/index.js</code> 中引入进来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ModuleUser</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./user&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ModulePk</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./pk&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">user</span>: <span class=\"title class_\">ModuleUser</span>,</span><br><span class=\"line\">    <span class=\"attr\">pk</span>: <span class=\"title class_\">ModulePk</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-加入JWT验证\">2.2 加入JWT验证</h3>\n<p>现在我们直接使用用户的 ID 建立 WS 链接，这是不安全的，因为前端可以自行修改这个 ID，因此就需要加入 JWT 验证。</p>\n<p>WebSocket 中没有 Session 的概念，因此我们在验证的时候前端就不用将信息放到表头里了，直接放到链接中就行：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> socket_url = <span class=\"string\">`ws://localhost:3000/websocket/<span class=\"subst\">$&#123;store.state.user.jwt_token&#125;</span>/`</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>验证的逻辑可以参考之前的 <code>JwtAuthenticationTokenFilter</code>，我们可以把这个验证的模块单独写到一个文件中，在 <code>consumer</code> 包下创建 <code>utils</code> 包，然后创建一个 <code>JwtAuthentication</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.utils.JwtUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtAuthentication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Integer <span class=\"title function_\">getUserId</span><span class=\"params\">(String token)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);</span><br><span class=\"line\">            userId = Integer.parseInt(claims.getSubject());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就可以在 <code>WebSocketServer</code> 中解析 JWT 令牌：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.JwtAuthentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.session = session;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Connected!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> JwtAuthentication.getUserId(token);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.user = userMapper.selectById(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.put(userId, <span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.session.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-前后端匹配业务\">3. 前后端匹配业务</h2>\n<h3 id=\"3-1-实现前端页面\">3.1 实现前端页面</h3>\n<p>我们需要实现一个前端的匹配页面，并能够切换匹配和对战页面，可以根据之前在 <code>store</code> 中存储的 <code>status</code> 状态来动态展示页面。首先在 <code>components</code> 目录下创建 <code>MatchGround.vue</code> 组件，其中需要展示玩家自己的头像和用户名以及对手的头像和用户名，当点击开始匹配按钮时向 WS 链接发送开始匹配的消息，点击取消按钮时发送取消匹配的消息：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;matchground&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-6&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;photo&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img-fluid&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;$store.state.user.photo&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123; $store.state.user.username &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-6&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;photo&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img-fluid&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;$store.state.pk.opponent_photo&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123; $store.state.pk.opponent_username &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-12 text-center&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 14vh;&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;click_match_btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-info btn-lg&quot;</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123; match_btn_info &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> match_btn_info = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;开始匹配&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">click_match_btn</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">if</span> (match_btn_info.<span class=\"property\">value</span> === <span class=\"string\">&quot;开始匹配&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        match_btn_info.<span class=\"property\">value</span> = <span class=\"string\">&quot;取消&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">socket</span>.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123;  <span class=\"comment\">// 将json封装成字符串发送给后端，后端会在onMessage()中接到请求</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">event</span>: <span class=\"string\">&quot;start_match&quot;</span>,  <span class=\"comment\">// 表示开始匹配</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;));</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        match_btn_info.<span class=\"property\">value</span> = <span class=\"string\">&quot;开始匹配&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">socket</span>.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">event</span>: <span class=\"string\">&quot;stop_match&quot;</span>,  <span class=\"comment\">// 表示停止匹配</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;));</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      match_btn_info,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      click_match_btn,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.matchground</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">width</span>: <span class=\"number\">60vw</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">height</span>: <span class=\"number\">70vh</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">margin</span>: <span class=\"number\">40px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">0.5</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">width</span>: <span class=\"number\">35%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">margin</span>: <span class=\"number\">14vh</span> <span class=\"number\">0</span> <span class=\"number\">1vh</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.username</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">font-weight</span>: bold;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">color</span>: white;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-实现前后端交互逻辑\">3.2 实现前后端交互逻辑</h3>\n<p>当用户点击开始匹配按钮后，前端要向服务器发出一个请求，后端接收到请求后应该将该用户放入匹配池中，由于目前还没有实现微服务，因此我们先在 <code>WebSocketServer</code> 后端用一个 <code>Set</code> 维护正在匹配的玩家，当匹配池中满两名玩家就将其匹配在一起，然后将匹配结果返回给两名玩家的前端：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.consumer.utils.JwtAuthentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.PathParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.CopyOnWriteArraySet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ServerEndpoint(&quot;/websocket/&#123;token&#125;&quot;)</span>  <span class=\"comment\">// 注意不要以&#x27;/&#x27;结尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WebSocketServer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ConcurrentHashMap是一个线程安全的哈希表，用于将用户ID映射到WS实例</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;Integer, WebSocketServer&gt; users = <span class=\"keyword\">new</span> <span class=\"title class_\">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// CopyOnWriteArraySet也是线程安全的</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> CopyOnWriteArraySet&lt;User&gt; matchPool = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArraySet</span>&lt;&gt;();  <span class=\"comment\">// 匹配池</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUserMapper</span><span class=\"params\">(UserMapper userMapper)</span> &#123;</span><br><span class=\"line\">        WebSocketServer.userMapper = userMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnOpen</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onOpen</span><span class=\"params\">(Session session, <span class=\"meta\">@PathParam(&quot;token&quot;)</span> String token)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.session = session;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Connected!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">userId</span> <span class=\"operator\">=</span> JwtAuthentication.getUserId(token);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.user = userMapper.selectById(userId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.put(userId, <span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.session.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnClose</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClose</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.user != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            users.remove(<span class=\"built_in\">this</span>.user.getId());</span><br><span class=\"line\">            matchPool.remove(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnMessage</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onMessage</span><span class=\"params\">(String message, Session session)</span> &#123;  <span class=\"comment\">// 一般会把onMessage()当作路由</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Receive message!&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">JSONObject</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> JSONObject.parseObject(message);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">event</span> <span class=\"operator\">=</span> data.getString(<span class=\"string\">&quot;event&quot;</span>);  <span class=\"comment\">// 取出event的内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;start_match&quot;</span>.equals(event)) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.startMatching();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&quot;stop_match&quot;</span>.equals(event)) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.stopMatching();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@OnError</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onError</span><span class=\"params\">(Session session, Throwable error)</span> &#123;</span><br><span class=\"line\">        error.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">(String message)</span> &#123;  <span class=\"comment\">// 从后端向当前链接发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>.session) &#123;  <span class=\"comment\">// 由于是异步通信，需要加一个锁</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.session.getBasicRemote().sendText(message);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startMatching</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start matching!&quot;</span>);</span><br><span class=\"line\">        matchPool.add(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (matchPool.size() &gt;= <span class=\"number\">2</span>) &#123;  <span class=\"comment\">// 临时调试用的，未来要替换成微服务</span></span><br><span class=\"line\">            Iterator&lt;User&gt; it = matchPool.iterator();</span><br><span class=\"line\">            <span class=\"type\">User</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> it.next(), b = it.next();</span><br><span class=\"line\">            matchPool.remove(a);</span><br><span class=\"line\">            matchPool.remove(b);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respA</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给A的信息</span></span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_username&quot;</span>, b.getUsername());</span><br><span class=\"line\">            respA.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, b.getPhoto());</span><br><span class=\"line\">            users.get(a.getId()).sendMessage(respA.toJSONString());  <span class=\"comment\">// A不一定是当前链接，因此要在users中获取</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JSONObject</span> <span class=\"variable\">respB</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给B的信息</span></span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_username&quot;</span>, a.getUsername());</span><br><span class=\"line\">            respB.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, a.getPhoto());</span><br><span class=\"line\">            users.get(b.getId()).sendMessage(respB.toJSONString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stopMatching</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Stop matching!&quot;</span>);</span><br><span class=\"line\">        matchPool.remove(<span class=\"built_in\">this</span>.user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着修改一下 <code>PKIndexView</code>，当接收到 WS 链接从后端发送过来的匹配成功消息后需要更新对手的头像和用户名：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">msg</span>) =&gt;</span> &#123;  <span class=\"comment\">// 接收到后端消息时会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(msg.<span class=\"property\">data</span>);  <span class=\"comment\">// Spring传过来的数据是放在消息的data中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;match_success&quot;</span>) &#123;  <span class=\"comment\">// 匹配成功</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">username</span>: data.<span class=\"property\">opponent_username</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">photo</span>: data.<span class=\"property\">opponent_photo</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 3秒后再进入游戏地图界面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;playing&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;, <span class=\"number\">3000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onclose</span> = <span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 关闭链接后会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Disconnected!&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;matching&quot;</span>);  <span class=\"comment\">// 进入游戏地图后玩家点击其他页面应该是默认退出游戏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>测试的时候需要用两个浏览器，如果没有两个浏览器可以在 Edge 浏览器的右上角设置菜单中新建 InPrivate 窗口，这样就可以自己登录两个不同的账号进行匹配测试。</p>\n<h3 id=\"3-3-同步游戏地图\">3.3 同步游戏地图</h3>\n<p>现在匹配成功后两名玩家进入游戏时看到的地图是不一样的，因为目前地图还都是在每名玩家本地的浏览器生成的，那么我们就需要将生成地图的逻辑放到服务器端。</p>\n<p>先在后端的 <code>consumer.utils</code> 包下创建 <code>Game</code> 类，用来管理整个游戏流程，然后我们在其中先实现地图的随机生成：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.consumer.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Game</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer rows;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer cols;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer inner_walls_count;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">boolean</span>[][] g;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>[] dx = &#123; -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span> &#125;, dy = &#123; <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Game</span><span class=\"params\">(Integer rows, Integer cols, Integer inner_walls_count)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rows = rows;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cols = cols;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.inner_walls_count = inner_walls_count;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.g = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[rows][cols];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span>[][] getG() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> g;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">check_connectivity</span><span class=\"params\">(<span class=\"type\">int</span> sx, <span class=\"type\">int</span> sy, <span class=\"type\">int</span> tx, <span class=\"type\">int</span> ty)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sx == tx &amp;&amp; sy == ty) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        g[sx][sy] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">nx</span> <span class=\"operator\">=</span> sx + dx[i], ny = sy + dy[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!g[nx][ny] &amp;&amp; check_connectivity(nx, ny, tx, ty)) &#123;</span><br><span class=\"line\">                g[sx][sy] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 注意在这里我们用的g就是原始数组，因此修改后要记得还原</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        g[sx][sy] = <span class=\"literal\">false</span>;  <span class=\"comment\">// 记得还原</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">drawMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化障碍物标记数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.rows; i++) &#123;</span><br><span class=\"line\">            Arrays.fill(g[i], <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 给地图四周加上障碍物</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; r &lt; <span class=\"built_in\">this</span>.rows; r++) &#123;</span><br><span class=\"line\">            g[r][<span class=\"number\">0</span>] = g[r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; c &lt; <span class=\"built_in\">this</span>.cols; c++) &#123;</span><br><span class=\"line\">            g[<span class=\"number\">0</span>][c] = g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span>][c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 添加地图内部的随机障碍物，需要有对称性因此枚举一半即可，另一半对称生成</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">random</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">this</span>.inner_walls_count / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">10000</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> random.nextInt(<span class=\"built_in\">this</span>.rows);  <span class=\"comment\">// 返回0~this.rows-1的随机整数</span></span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> random.nextInt(<span class=\"built_in\">this</span>.cols);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (g[r][c] || g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span> - r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span> - c]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (r == <span class=\"built_in\">this</span>.rows - <span class=\"number\">2</span> &amp;&amp; c == <span class=\"number\">1</span> || r == <span class=\"number\">1</span> &amp;&amp; c == <span class=\"built_in\">this</span>.cols - <span class=\"number\">2</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                g[r][c] = g[<span class=\"built_in\">this</span>.rows - <span class=\"number\">1</span> - r][<span class=\"built_in\">this</span>.cols - <span class=\"number\">1</span> - c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> check_connectivity(<span class=\"built_in\">this</span>.rows - <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"built_in\">this</span>.cols - <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">createMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (drawMap()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>WebSocketServer</code> 类中当匹配成功时创建游戏地图，暂时先将其存到局部变量中，之后再进行优化：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (matchPool.size() &gt;= <span class=\"number\">2</span>) &#123;  <span class=\"comment\">// 临时调试用的，未来要替换成微服务</span></span><br><span class=\"line\">    Iterator&lt;User&gt; it = matchPool.iterator();</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> it.next(), b = it.next();</span><br><span class=\"line\">    matchPool.remove(a);</span><br><span class=\"line\">    matchPool.remove(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Game</span> <span class=\"variable\">game</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Game</span>(<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">    game.createMap();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">JSONObject</span> <span class=\"variable\">respA</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给A的信息</span></span><br><span class=\"line\">    respA.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">    respA.put(<span class=\"string\">&quot;opponent_username&quot;</span>, b.getUsername());</span><br><span class=\"line\">    respA.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, b.getPhoto());</span><br><span class=\"line\">    respA.put(<span class=\"string\">&quot;game_map&quot;</span>, game.getG());</span><br><span class=\"line\">    users.get(a.getId()).sendMessage(respA.toJSONString());  <span class=\"comment\">// A不一定是当前链接，因此要在users中获取</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">JSONObject</span> <span class=\"variable\">respB</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JSONObject</span>();  <span class=\"comment\">// 发送给B的信息</span></span><br><span class=\"line\">    respB.put(<span class=\"string\">&quot;event&quot;</span>, <span class=\"string\">&quot;match_success&quot;</span>);</span><br><span class=\"line\">    respB.put(<span class=\"string\">&quot;opponent_username&quot;</span>, a.getUsername());</span><br><span class=\"line\">    respB.put(<span class=\"string\">&quot;opponent_photo&quot;</span>, a.getPhoto());</span><br><span class=\"line\">    respB.put(<span class=\"string\">&quot;game_map&quot;</span>, game.getG());</span><br><span class=\"line\">    users.get(b.getId()).sendMessage(respB.toJSONString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来需要在前端的 <code>store/pk.js</code> 文件中将地图存为全局变量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"attr\">game_map</span>: <span class=\"literal\">null</span>,  <span class=\"comment\">// 游戏地图</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">updateGameMap</span>(<span class=\"params\">state, game_map</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">game_map</span> = game_map;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>在 <code>PKIndexView.vue</code> 中当接收到匹配成功的消息后需要更新地图：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      socket.<span class=\"property\">onmessage</span> = <span class=\"function\">(<span class=\"params\">msg</span>) =&gt;</span> &#123;  <span class=\"comment\">// 接收到后端消息时会执行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(msg.<span class=\"property\">data</span>);  <span class=\"comment\">// Spring传过来的数据是放在消息的data中</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (data.<span class=\"property\">event</span> === <span class=\"string\">&quot;match_success&quot;</span>) &#123;  <span class=\"comment\">// 匹配成功</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateOpponent&quot;</span>, &#123;  <span class=\"comment\">// 更新对手信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">username</span>: data.<span class=\"property\">opponent_username</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">photo</span>: data.<span class=\"property\">opponent_photo</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateGameMap&quot;</span>, data.<span class=\"property\">game_map</span>);  <span class=\"comment\">// 更新游戏地图</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 3秒后再进入游戏地图界面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateStatus&quot;</span>, <span class=\"string\">&quot;playing&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;, <span class=\"number\">3000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>然后需要在 <code>GameMap.vue</code> 中将全局变量传给游戏地图 <code>GameMap.js</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">GameMap</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/assets/scripts/GameMap&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> parent = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> canvas = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">new</span> <span class=\"title class_\">GameMap</span>(canvas.<span class=\"property\">value</span>.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>), parent.<span class=\"property\">value</span>, store);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      parent,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      canvas,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>最后就可以在 <code>GameMap.js</code> 中将地图渲染出来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent, store</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">store</span> = store;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">create_walls_online</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 通过后端生成的数据创建地图</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> g = <span class=\"variable language_\">this</span>.<span class=\"property\">store</span>.<span class=\"property\">state</span>.<span class=\"property\">pk</span>.<span class=\"property\">game_map</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r = <span class=\"number\">0</span>; r &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>; r++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (g[r][c]) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">walls</span>.<span class=\"title function_\">push</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Wall</span>(r, c, <span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// for (let i = 0; i &lt; 10000; i++) &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   if (this.create_walls())</span></span><br><span class=\"line\">    <span class=\"comment\">//     break;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">create_walls_online</span>();  <span class=\"comment\">// 在线生成地图</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">add_listening_events</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/39458.html",
            "url": "https://asanosaki.github.io/posts/39458.html",
            "title": "SpringBoot学习笔记-创建个人中心页面（下）",
            "date_published": "2023-11-19T00:48:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现个人中心的前端页面，用户能够查看自己的 Bot 信息，并能创建、修改或删除 Bot，此外还集成了 Vue Ace Editor 代码编辑器，方便用户输入 Bot 的代码。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-实现个人中心页面\">1. 实现个人中心页面</h2>\n<p>我们要实现用户的个人中心页面，能够展示用户的头像以及自己所有 Bot 的信息，例如 Bot 名字、创建时间等，还需要具有创建/修改/删除 Bot 等功能，在很早之前创建的 <code>MyBotsIndexView</code> 组件中实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card text-bg-secondary&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 20px;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>My Bots<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: rgba(255, 255, 255, 0.5);&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!-- 用户头像与用户名 --&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body text-center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;img-fluid&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;$store.state.user.photo&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 50%; border-radius: 50%;&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 20px; margin-top: 10px; font-weight: bold;&quot;</span>&gt;</span></span><br><span class=\"line\">                  &#123;&#123; $store.state.user.username &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-9&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 25px;&quot;</span>&gt;</span>Bot 管理<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 点击创建按钮能够打开模态框 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-outline-success float-end&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">data-bs-target</span>=<span class=\"string\">&quot;#add_bot_modal&quot;</span>&gt;</span></span><br><span class=\"line\">                  创建 Bot</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 创建 Bot 的模态框 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add_bot_modal&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog modal-xl&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #198754;&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-title fs-5&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: white;&quot;</span>&gt;</span>创建 Bot<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn-close&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>名称<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;new_bot.title&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入 Bot 名称&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>简介<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;new_bot.description&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;介绍一下你的 Bot 吧~（可以暂时不填）&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>代码<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;new_bot.content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;在这里编写你的 Bot 代码~&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error_message&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red;&quot;</span>&gt;</span>&#123;&#123; new_bot.error_message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-success&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;add_bot&quot;</span>&gt;</span>创建<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-secondary&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!-- 用户的 Bot 列表 --&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table table-striped table-hover&quot;</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>创建时间<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;bot in bots&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;bot.id&quot;</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;line-height: 32px;&quot;</span>&gt;</span>&#123;&#123; bot.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;line-height: 32px;&quot;</span>&gt;</span>&#123;&#123; bot.createtime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-outline-primary&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">:data-bs-target</span>=<span class=\"string\">&quot;&#x27;#update_bot_modal_&#x27; + bot.id&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-right: 10px; padding: 3px 10px;&quot;</span>&gt;</span></span><br><span class=\"line\">                          修改</span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-outline-danger&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;modal&quot;</span> <span class=\"attr\">:data-bs-target</span>=<span class=\"string\">&quot;&#x27;#remove_bot_modal_&#x27; + bot.id&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;padding: 3px 10px;&quot;</span>&gt;</span></span><br><span class=\"line\">                          删除</span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 修改 Bot 的模态框 --&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;&#x27;update_bot_modal_&#x27; + bot.id&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog modal-xl&quot;</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #0D6EFD;&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-title fs-5&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: white;&quot;</span>&gt;</span>修改 Bot<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn-close&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>名称<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;bot.title&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;email&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入 Bot 名称&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>简介<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;bot.description&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;3&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;介绍一下你的 Bot 吧~（可以暂时不填）&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>代码<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;bot.content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;在这里编写你的 Bot 代码~&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error_message&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red;&quot;</span>&gt;</span>&#123;&#123; new_bot.error_message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;update_bot(bot)&quot;</span>&gt;</span>保存修改<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-secondary&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 删除 Bot 的确认模态框 --&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;&#x27;remove_bot_modal_&#x27; + bot.id&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog modal-dialog-centered&quot;</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-header&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: #DC3545;&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-title fs-5&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: white;&quot;</span>&gt;</span>警告<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn-close&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 20px;&quot;</span>&gt;</span></span><br><span class=\"line\">                                确认删除？该操作无法撤销哦~</span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-danger&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;remove_bot(bot)&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-secondary&quot;</span> <span class=\"attr\">data-bs-dismiss</span>=<span class=\"string\">&quot;modal&quot;</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;  <span class=\"comment\">// reactive用来让组件绑定对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Modal</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;bootstrap/dist/js/bootstrap&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> bots = <span class=\"title function_\">ref</span>([]);  <span class=\"comment\">// bot列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> new_bot = <span class=\"title function_\">reactive</span>(&#123;  <span class=\"comment\">// 要新创建的bot对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">title</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">description</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">content</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">error_message</span>: <span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">get_bots</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/bot/getlist/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">jwt_token</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          bots.<span class=\"property\">value</span> = resp;  <span class=\"comment\">// 后端返回的就是一个列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">get_bots</span>();  <span class=\"comment\">// 定义完后直接执行一遍</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">add_bot</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      new_bot.<span class=\"property\">error_message</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/bot/add/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">title</span>: new_bot.<span class=\"property\">title</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">description</span>: new_bot.<span class=\"property\">description</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">content</span>: new_bot.<span class=\"property\">content</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">jwt_token</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 需要清空信息防止下次打开创建模态框时还留有上次的信息</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            new_bot.<span class=\"property\">title</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            new_bot.<span class=\"property\">description</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            new_bot.<span class=\"property\">content</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title class_\">Modal</span>.<span class=\"title function_\">getInstance</span>(<span class=\"string\">&quot;#add_bot_modal&quot;</span>).<span class=\"title function_\">hide</span>();  <span class=\"comment\">// 关闭模态框</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">get_bots</span>();  <span class=\"comment\">// 刷新一下Bot列表</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            new_bot.<span class=\"property\">error_message</span> = resp.<span class=\"property\">result</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">remove_bot</span> = (<span class=\"params\">bot</span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/bot/remove/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">bot_id</span>: bot.<span class=\"property\">id</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">jwt_token</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title class_\">Modal</span>.<span class=\"title function_\">getInstance</span>(<span class=\"string\">&quot;#remove_bot_modal_&quot;</span> + bot.<span class=\"property\">id</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">get_bots</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">update_bot</span> = (<span class=\"params\">bot</span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      new_bot.<span class=\"property\">error_message</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/bot/update/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">bot_id</span>: bot.<span class=\"property\">id</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">title</span>: bot.<span class=\"property\">title</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">description</span>: bot.<span class=\"property\">description</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">content</span>: bot.<span class=\"property\">content</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">jwt_token</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title class_\">Modal</span>.<span class=\"title function_\">getInstance</span>(<span class=\"string\">&quot;#update_bot_modal_&quot;</span> + bot.<span class=\"property\">id</span>).<span class=\"title function_\">hide</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">get_bots</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            new_bot.<span class=\"property\">error_message</span> = resp.<span class=\"property\">result</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      bots,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      new_bot,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      add_bot,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      remove_bot,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      update_bot,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意，我们实现了当点击创建 Bot 按钮时弹出一个模态框（Bootstrap 中的 Modal）的效果，然后用户可以在里面编辑 Bot 的信息。但对于每个 Bot 的修改和删除应该都会分别对应一个模态框，而不像创建那样只有一个模态框，因此每个模态框还需要加一个 ID 来对应。</p>\n<h2 id=\"2-POJO时区修改\">2. POJO时区修改</h2>\n<p>现在我们会发现前端页面中显示的 Bot 创建时间和后端数据库中的不一致，需要在 <code>pojo</code> 中的 <code>Bot</code> 类中修改：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Bot</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span>  <span class=\"comment\">// 声明id为自增类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer userId;  <span class=\"comment\">// 注意驼峰命名，userId之后会被解析为user_id，别写成userID，因为这样会解析成user_i_d</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer rating;</span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;, timezone = &quot;Asia/Shanghai&quot;)</span>  <span class=\"comment\">// 注意日期格式和时区的设置</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createtime;</span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;, timezone = &quot;Asia/Shanghai&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date modifytime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-集成代码编辑器\">3. 集成代码编辑器</h2>\n<p>由于 Bot 的内容有代码部分，之前我们用的是 <code>&lt;textarea&gt;</code> 让用户编写代码，这样编写体验不好，因此我们需要集成一个代码编辑器，我们使用的是 Vue Ace Editor（Ace GitHub 官网：<a href=\"https://github.com/ajaxorg/ace/\">Ace (Ajax.org Cloud9 Editor)</a>，Vue 3 版 Ace GitHub 官网：<a href=\"https://github.com/CarterLi/vue3-ace-editor\">vue3-ace-editor</a>）。</p>\n<p>先在 Vue 的控制台中安装以下依赖：</p>\n<ul>\n<li><code>vue3-ace-editor</code></li>\n<li><code>ace-builds</code></li>\n</ul>\n<p>然后就可以用 <code>&lt;VAceEditor&gt;</code> 替代之前的 <code>&lt;textarea&gt;</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card text-bg-secondary&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 20px;&quot;</span>&gt;</span></span><br><span class=\"line\">      ...</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: rgba(255, 255, 255, 0.5);&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row&quot;</span>&gt;</span></span><br><span class=\"line\">          ...</span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-9&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">                ...</span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 创建 Bot 的模态框 --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add_bot_modal&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog modal-xl&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">                      ...</span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                        ...</span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>代码<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">VAceEditor</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model:value</span>=<span class=\"string\">&quot;new_bot.content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            @<span class=\"attr\">init</span>=<span class=\"string\">&quot;editorInit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">lang</span>=<span class=\"string\">&quot;c_cpp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">theme</span>=<span class=\"string\">&quot;textmate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 400px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">:options</span>=<span class=\"string\">&quot;&#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              enableBasicAutocompletion: true,  //启用基本自动完成</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              enableSnippets: true,  // 启用代码段</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              enableLiveAutocompletion: true,  // 启用实时自动完成</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              fontSize: 16,  //设置字号</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              tabSize: 4,  // 标签大小</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              showPrintMargin: false,  //去除编辑器里的竖线</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                              highlightActiveLine: true,  // 选中行高亮显示</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                            &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                          /&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      ...</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"comment\">&lt;!-- 用户的 Bot 列表 --&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;table table-striped table-hover&quot;</span>&gt;</span></span><br><span class=\"line\">                  ...</span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;bot in bots&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;bot.id&quot;</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;line-height: 32px;&quot;</span>&gt;</span>&#123;&#123; bot.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;line-height: 32px;&quot;</span>&gt;</span>&#123;&#123; bot.createtime &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        ...</span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 修改 Bot 的模态框 --&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal fade&quot;</span> <span class=\"attr\">:id</span>=<span class=\"string\">&quot;&#x27;update_bot_modal_&#x27; + bot.id&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;-1&quot;</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-dialog modal-xl&quot;</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-content&quot;</span>&gt;</span></span><br><span class=\"line\">                              ...</span><br><span class=\"line\">                              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;modal-body&quot;</span>&gt;</span></span><br><span class=\"line\">                                ...</span><br><span class=\"line\">                                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;content&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>代码<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                                  <span class=\"tag\">&lt;<span class=\"name\">VAceEditor</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    <span class=\"attr\">v-model:value</span>=<span class=\"string\">&quot;bot.content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    @<span class=\"attr\">init</span>=<span class=\"string\">&quot;editorInit&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    <span class=\"attr\">lang</span>=<span class=\"string\">&quot;c_cpp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    <span class=\"attr\">theme</span>=<span class=\"string\">&quot;textmate&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 400px&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                    <span class=\"attr\">:options</span>=<span class=\"string\">&quot;&#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      enableBasicAutocompletion: true,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      enableSnippets: true,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      enableLiveAutocompletion: true,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      fontSize: 16,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      tabSize: 4,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      showPrintMargin: false,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                      highlightActiveLine: true,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">                                    &#125;&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                  /&gt;</span></span><br><span class=\"line\">                                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                              ...</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"comment\">&lt;!-- 删除 Bot 的确认模态框 --&gt;</span></span><br><span class=\"line\">                        ...</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">...</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">VAceEditor</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue3-ace-editor&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> ace <span class=\"keyword\">from</span> <span class=\"string\">&quot;ace-builds&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;ace-builds/src-noconflict/mode-json&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;ace-builds/src-noconflict/theme-chrome&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;ace-builds/src-noconflict/ext-language_tools&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;ace-builds/src-noconflict/mode-c_cpp&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">VAceEditor</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ace.<span class=\"property\">config</span>.<span class=\"title function_\">set</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;basePath&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/ace-builds@&quot;</span> +</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"built_in\">require</span>(<span class=\"string\">&quot;ace-builds&quot;</span>).<span class=\"property\">version</span> +</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;/src-noconflict/&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/26147.html",
            "url": "https://asanosaki.github.io/posts/26147.html",
            "title": "SpringBoot学习笔记-创建个人中心页面（上）",
            "date_published": "2023-11-18T08:10:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现存储用户 Bot 信息的数据表以及操作 Bot 数据的增删改查 API。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-更新数据库表\">1. 更新数据库表</h2>\n<p>我们需要创建一个表来保存 Bot 的信息，新建一个 <code>bot</code> 表，包含以下几个列：</p>\n<ul>\n<li><code>id: int</code>：非空、自动增加、唯一、主键。</li>\n<li><code>user_id: int</code>：非空。注意：在 <code>pojo</code> 中需要定义成 <code>userId</code>，在 <code>queryWrapper</code> 中的名称仍然为 <code>user_id</code>。</li>\n<li><code>title: varchar(100)</code>。</li>\n<li><code>description: varchar(300)</code>。</li>\n<li><code>content：varchar(10000)</code>。</li>\n<li><code>rating: int</code>：默认值为1500。</li>\n<li><code>createtime: datetime</code>，注意：在 <code>pojo</code> 中定义日期格式的注解：<code>@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</code>。</li>\n<li><code>modifytime: datetime</code>。</li>\n</ul>\n<p>可以使用如下 SQL 语句一键创建好该表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `kob`.`bot` (</span><br><span class=\"line\">    `id` <span class=\"type\">int</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">    `user_id` <span class=\"type\">int</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `title` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `description` <span class=\"type\">varchar</span>(<span class=\"number\">300</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `content` <span class=\"type\">varchar</span>(<span class=\"number\">10000</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `rating` <span class=\"type\">int</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">1500</span>,</span><br><span class=\"line\">    `createtime` datetime <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    `modifytime` datetime <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>创建好数据库表后我们需要创建一个 <code>pojo</code>，在 <code>pojo</code> 目录下创建 <code>Bot</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.annotation.JsonFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Bot</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span>  <span class=\"comment\">// 声明id为自增类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer userId;  <span class=\"comment\">// 注意驼峰命名，userId之后会被解析为user_id，别写成userID，因为这样会解析成user_i_d</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer rating;</span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span>  <span class=\"comment\">// 注意日期格式的设置</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date createtime;</span><br><span class=\"line\">    <span class=\"meta\">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date modifytime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后就可以实现 <code>mapper</code>，在 <code>mapper</code> 目录下创建 <code>BotMapper</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BotMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;Bot&gt; &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-实现后端API\">2. 实现后端API</h2>\n<p>首先在 <code>service.user</code> 包下创建 <code>bot</code> 包存放与 Bot 相关的 Service 代码，然后在 <code>service.impl.user</code> 包下创建 <code>bot</code> 包存放相应的 Service 实现代码，最后在 <code>controller.user</code> 包下创建 <code>bot</code> 包存放 Controller。</p>\n<p>我们需要实现以下四个 API：</p>\n<ul>\n<li><code>/user/bot/add/</code>：创建一个 Bot。</li>\n<li><code>/user/bot/remove/</code>：删除一个 Bot。</li>\n<li><code>/user/bot/update/</code>：修改一个 Bot。</li>\n<li><code>/user/bot/getlist/</code>：查询 Bot 列表。</li>\n</ul>\n<p>在 <code>service.user.bot</code> 包下创建这四个 API 的 Service 接口：</p>\n<p>（1）<code>AddService</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AddService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">add</span><span class=\"params\">(Map&lt;String, String&gt; data)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）<code>RemoveService</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">RemoveService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">remove</span><span class=\"params\">(Map&lt;String, String&gt; data)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>（3）<code>UpdateService</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UpdateService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">update</span><span class=\"params\">(Map&lt;String, String&gt; data)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）<code>GetListService</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">GetListService</span> &#123;</span><br><span class=\"line\">    List&lt;Bot&gt; <span class=\"title function_\">getList</span><span class=\"params\">()</span>;  <span class=\"comment\">// 根据用户信息获取Bot，用户信息存放在令牌中，因此不用传参数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来在 <code>service.impl.user.bot</code> 包下创建这四个 Service 接口的实现：</p>\n<p>（1）<code>AddServiceImpl</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.BotMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.AddService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AddService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BotMapper botMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">add</span><span class=\"params\">(Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                (UsernamePasswordAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticationToken.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();  <span class=\"comment\">// 获取当前登录的用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">title</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;title&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;content&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (title == <span class=\"literal\">null</span> || title.isEmpty()) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The title can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (title.length() &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Title length can&#x27;t exceed 100!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (description == <span class=\"literal\">null</span> || description.isEmpty()) &#123;</span><br><span class=\"line\">            description = <span class=\"string\">&quot;这个用户很懒，什么也没留下~&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (description.length() &gt; <span class=\"number\">300</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Description length can&#x27;t exceed 300!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (content == <span class=\"literal\">null</span> || content.isEmpty()) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The code can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (content.length() &gt; <span class=\"number\">10000</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Code length can&#x27;t exceed 10000!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        <span class=\"type\">Bot</span> <span class=\"variable\">bot</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Bot</span>(<span class=\"literal\">null</span>, user.getId(), title, description, content, <span class=\"number\">1500</span>, now, now);</span><br><span class=\"line\">        botMapper.insert(bot);</span><br><span class=\"line\"></span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）<code>RemoveServiceImpl</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.BotMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.RemoveService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RemoveServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RemoveService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BotMapper botMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">remove</span><span class=\"params\">(Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                (UsernamePasswordAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticationToken.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();  <span class=\"comment\">// 需要判断要删除的Bot是不是当前登录用户的Bot</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">bot_id</span> <span class=\"operator\">=</span> Integer.parseInt(data.get(<span class=\"string\">&quot;bot_id&quot;</span>));</span><br><span class=\"line\">        <span class=\"type\">Bot</span> <span class=\"variable\">bot</span> <span class=\"operator\">=</span> botMapper.selectById(bot_id);</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bot == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Bot doesn&#x27;t exist!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!bot.getUserId().equals(user.getId())) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;No permission to delete the bot!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        botMapper.deleteById(bot_id);</span><br><span class=\"line\"></span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）<code>UpdateServiceImpl</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.BotMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.UpdateService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UpdateServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UpdateService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BotMapper botMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">update</span><span class=\"params\">(Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                (UsernamePasswordAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticationToken.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">bot_id</span> <span class=\"operator\">=</span> Integer.parseInt(data.get(<span class=\"string\">&quot;bot_id&quot;</span>));</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">title</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;title&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;content&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (title == <span class=\"literal\">null</span> || title.isEmpty()) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The title can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (title.length() &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Title length can&#x27;t exceed 100!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (description == <span class=\"literal\">null</span> || description.isEmpty()) &#123;</span><br><span class=\"line\">            description = <span class=\"string\">&quot;这个用户很懒，什么也没留下~&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (description.length() &gt; <span class=\"number\">300</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Description length can&#x27;t exceed 300!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (content == <span class=\"literal\">null</span> || content.isEmpty()) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The code can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (content.length() &gt; <span class=\"number\">10000</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Code length can&#x27;t exceed 10000!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Bot</span> <span class=\"variable\">bot</span> <span class=\"operator\">=</span> botMapper.selectById(bot_id);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bot == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;Bot doesn&#x27;t exist!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!bot.getUserId().equals(user.getId())) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;No permission to update the bot!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Bot</span> <span class=\"variable\">new_bot</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Bot</span>(bot.getId(), user.getId(), title, description, content, bot.getRating(), bot.getCreatetime(), <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\">        botMapper.updateById(new_bot);</span><br><span class=\"line\"></span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）<code>GetListServiceImpl</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.BotMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.GetListService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetListServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">GetListService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BotMapper botMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Bot&gt; <span class=\"title function_\">getList</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                (UsernamePasswordAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticationToken.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryWrapper&lt;Bot&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;user_id&quot;</span>, user.getId());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> botMapper.selectList(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在 <code>controller.user.bot</code> 包下创建对应的 Controller：</p>\n<p>（1）<code>AddController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.AddService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AddService addService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/user/bot/add/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">add</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> addService.add(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）<code>RemoveController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.RemoveService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RemoveController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RemoveService removeService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/user/bot/remove/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">remove</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> removeService.remove(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）<code>UpdateController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.UpdateService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UpdateController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UpdateService updateService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/user/bot/update/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> updateService.update(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）<code>GetListController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.bot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.Bot;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.bot.GetListService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetListController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> GetListService getListService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/bot/getlist/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Bot&gt; <span class=\"title function_\">getList</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getListService.getList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/42841.html",
            "url": "https://asanosaki.github.io/posts/42841.html",
            "title": "SpringBoot学习笔记-配置MySQL与实现注册登录模块（下）",
            "date_published": "2023-11-18T01:26:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现登录与注册前端页面，并将 JWT 令牌存储在浏览器的 LocalStorage 中以实现登录状态的持久化。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-实现登录页面\">1. 实现登录页面</h2>\n<p>打开我们的前端项目代码，在 <code>src/views/user</code> 目录下创建 <code>account</code> 目录，然后创建 <code>UserAccountLoginView</code> 和 <code>UserAccountRegisterView</code> 组件。</p>\n<p>我们需要在全局存一些信息，例如每个页面都需要知道当前登录用户的信息，这就需要用到 Vue 的一个特性叫做 <code>vuex</code>。在 <code>src/store</code> 目录下创建 <code>user.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;  <span class=\"comment\">// 存储的信息</span></span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">photo</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">jwt_token</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">is_login</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;  <span class=\"comment\">// 用来修改数据</span></span><br><span class=\"line\">    <span class=\"title function_\">updateUser</span>(<span class=\"params\">state, user</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">id</span> = user.<span class=\"property\">id</span>;</span><br><span class=\"line\">      state.<span class=\"property\">username</span> = user.<span class=\"property\">username</span>;</span><br><span class=\"line\">      state.<span class=\"property\">photo</span> = user.<span class=\"property\">photo</span>;</span><br><span class=\"line\">      state.<span class=\"property\">is_login</span> = user.<span class=\"property\">is_login</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">updateJwtToken</span>(<span class=\"params\">state, jwt_token</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">jwt_token</span> = jwt_token;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">login</span>(<span class=\"params\">context, data</span>) &#123;</span><br><span class=\"line\">      $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/login/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">username</span>: data.<span class=\"property\">username</span>,</span><br><span class=\"line\">          <span class=\"attr\">password</span>: data.<span class=\"property\">password</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span><br><span class=\"line\">            context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateJwtToken&quot;</span>, resp.<span class=\"property\">jwt_token</span>);</span><br><span class=\"line\">            data.<span class=\"title function_\">success</span>(resp);  <span class=\"comment\">// 成功后的回调函数</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          data.<span class=\"title function_\">error</span>(resp);  <span class=\"comment\">// 失败后的回调函数</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getInfo</span>(<span class=\"params\">context, data</span>) &#123;</span><br><span class=\"line\">      $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/info/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 不是固定的，是官方推荐的写法，Authorization是在我们的后端JwtAuthenticationTokenFilter类中设置的</span></span><br><span class=\"line\">          <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + context.<span class=\"property\">state</span>.<span class=\"property\">jwt_token</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span><br><span class=\"line\">            context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateUser&quot;</span>, &#123;</span><br><span class=\"line\">              ...resp,</span><br><span class=\"line\">              <span class=\"attr\">is_login</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            data.<span class=\"title function_\">success</span>(resp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          data.<span class=\"title function_\">error</span>(resp);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>如果使用 Axios 发送 POST 请求可以将参数放在请求体中，也就是第二个参数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.<span class=\"title function_\">post</span>(<span class=\"string\">&quot;http://localhost:3000/user/account/login/&quot;</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">username</span>: data.<span class=\"property\">username</span>,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: data.<span class=\"property\">password</span>,</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resp.<span class=\"property\">data</span>.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;  <span class=\"comment\">// 注意返回的数据内容在data字段中</span></span><br><span class=\"line\">      context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateJwtToken&quot;</span>, resp.<span class=\"property\">jwt_token</span>);</span><br><span class=\"line\">      data.<span class=\"title function_\">success</span>(resp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    data.<span class=\"title function_\">error</span>(resp.<span class=\"property\">data</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>注意如果使用这种方式发送请求需要在后端 Controller 中修改接收参数的方式，从 <code>@RequestParam</code> 修改为 <code>@RequestBody</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping(&quot;/user/account/login/&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Map&lt;String, String&gt; data)</span> &#123; ... &#125;</span><br></pre></td></tr></table></figure>\n<p><code>@RequestParam</code> 和 <code>@RequestBody</code> 都是 Spring MVC 中常用的参数绑定注解，它们在处理 HTTP 请求时有以下区别：</p>\n<ul>\n<li><code>@RequestParam</code> 用于将 HTTP 请求中的参数绑定到方法的参数上，主要用于处理 GET 请求的参数或 POST 请求中的表单参数。</li>\n<li><code>@RequestBody</code> 用于接收整个请求体，并将其转换为方法参数所需的对象或数据类型。它主要用于处理 POST 请求，并且请求体通常是 JSON 格式。</li>\n</ul>\n<p>如果后端继续使用 <code>@RequestParam</code> 来接收参数，那么你可以在 Axios 的 POST 请求中使用 <code>params</code> 对象来传递参数（注意将第二个参数设置为 <code>null</code>）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.<span class=\"title function_\">post</span>(<span class=\"string\">&quot;http://localhost:3000/user/account/login/&quot;</span>, <span class=\"literal\">null</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">params</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: data.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">password</span>: data.<span class=\"property\">password</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>使用 Axios 发送带请求头的 GET 请求方式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;http://localhost:3000/user/account/info/&quot;</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">      <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + context.<span class=\"property\">state</span>.<span class=\"property\">jwt_token</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resp.<span class=\"property\">data</span>.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span><br><span class=\"line\">      context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateUser&quot;</span>, &#123;</span><br><span class=\"line\">        ...resp.<span class=\"property\">data</span>,</span><br><span class=\"line\">        <span class=\"attr\">is_login</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data.<span class=\"title function_\">success</span>(resp.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    data.<span class=\"title function_\">error</span>(resp.<span class=\"property\">data</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>然后需要将其引入到 <code>store</code> 目录下的 <code>index.js</code> 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ModuleUser</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./user&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">createStore</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">user</span>: <span class=\"title class_\">ModuleUser</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>现在就可以实现我们的登录前端页面 <code>UserAccountLoginView</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 20px;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: inline-block;&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float: right; height: 2.5rem; line-height: 2.5rem;&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>还没有账号？<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_account_register&#x27; &#125;&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration: none;&quot;</span>&gt;</span></span><br><span class=\"line\">            去注册 &gt;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;clear: both;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-5&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 6rem auto; box-shadow: 5px 5px 20px #aaa;&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header text-center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>用户登录<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col-md-8&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- @submit后的prevent是阻止掉submit的默认行为，防止组件间的向上或向下传递 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 1rem;&quot;</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;login&quot;</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入用户名&quot;</span> /&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入密码&quot;</span> /&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 1rem; color: red;&quot;</span>&gt;</span></span><br><span class=\"line\">                        &#123;&#123; error_message &#125;&#125;</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%; margin-top: 10px;&quot;</span>&gt;</span></span><br><span class=\"line\">                        登录</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router/index&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> username = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> password = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> error_message = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">login</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      error_message.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;login&quot;</span>, &#123;  <span class=\"comment\">// 使用dispatch调用store的actions中的函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: username.<span class=\"property\">value</span>,  <span class=\"comment\">// ref变量取值用.value</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">password</span>: password.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;  <span class=\"comment\">// actions中的回调函数会返回resp</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;getInfo&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">              <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">              router.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span> &#125;);  <span class=\"comment\">// 跳转至home页面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          error_message.<span class=\"property\">value</span> = <span class=\"string\">&quot;The username or password is wrong!&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      username,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      password,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      error_message,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      login,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我们的导航栏也要根据登录状态显示不同的内容，可以用 <code>v-if</code> 和 <code>v-else</code> 来根据条件决定是否显示内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-brand&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;home&#x27; &#125;&quot;</span>&gt;</span>King of Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarText&quot;</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$store.state.user.is_login&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item dropdown&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link dropdown-toggle&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;dropdown&quot;</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; $store.state.user.username &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_mybots_index&#x27; &#125;&quot;</span>&gt;</span>My Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-divider&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav&quot;</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;route_name == &#x27;user_account_login&#x27; ? &#x27;nav-link active&#x27; : &#x27;nav-link&#x27;&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_account_login&#x27; &#125;&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;route_name == &#x27;user_account_register&#x27; ? &#x27;nav-link active&#x27; : &#x27;nav-link&#x27;&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_account_register&#x27; &#125;&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> route_name = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> route.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      route_name,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>还有别忘了更新路由，即 <code>src/router</code> 目录下的 <code>index.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">PKIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/pk/PKIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RecordIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/record/RecordIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RanklistIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/ranklist/RanklistIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyBotsIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/mybots/MyBotsIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NotFoundView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/error/NotFoundView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountLoginView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountLoginView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountRegisterView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountRegisterView&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/account/login/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">UserAccountLoginView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/account/register/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_register&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">UserAccountRegisterView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-实现退出登录功能\">2. 实现退出登录功能</h2>\n<p>在上一节中我们没有实现退出登录的后端 API，我们的 <code>jwt token</code> 完全是存在用户本地的，令牌中会存有过期时间，服务器端能够判断令牌是否过期，因此不用管后端的退出登录。那么如果用户想自己退出登录也很简单，直接将 <code>jwt token</code> 删除即可，无需向后端发送请求，没有令牌后就无法访问后端服务器了。</p>\n<p>现在我们是将令牌存在浏览器的内存中，一刷新自动就会重置，之后我们会将其存到 LocalStorage 中，这样即使用户刷新或者关闭浏览器都不会自动退出登录状态。</p>\n<p>我们先来实现主动退出登录功能，在 <code>store</code> 目录的 <code>user.js</code> 中添加清空 <code>state</code> 的操作：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;  <span class=\"comment\">// 存储的信息</span></span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">photo</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">jwt_token</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">is_login</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;  <span class=\"comment\">// 用来修改数据</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">clearState</span>(<span class=\"params\">state</span>) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">id</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">      state.<span class=\"property\">username</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">      state.<span class=\"property\">photo</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">      state.<span class=\"property\">jwt_token</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">      state.<span class=\"property\">is_login</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">logout</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">      context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;clearState&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>NavBar</code> 中调用函数：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-brand&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;home&#x27; &#125;&quot;</span>&gt;</span>King of Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarText&quot;</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav&quot;</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$store.state.user.is_login&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item dropdown&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link dropdown-toggle&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;dropdown&quot;</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">              &#123;&#123; $store.state.user.username &#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_mybots_index&#x27; &#125;&quot;</span>&gt;</span>My Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-divider&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;logout&quot;</span>&gt;</span>退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router/index&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> route_name = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> route.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">logout</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;logout&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      router.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span> &#125;);  <span class=\"comment\">// 跳转至home页面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      route_name,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      logout,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-设置前端页面授权机制\">3. 设置前端页面授权机制</h2>\n<p>现在我们的前端页面还没有任何的访问限制，例如在未登录状态下也可以访问任意的页面。当未登录时访问任何页面都应该重定向到登录页面。</p>\n<p>页面的授权控制可以在 <code>router</code> 中通过 <code>beforeEach</code> 函数实现，当我们每次在通过 <code>router</code> 进入某个页面之前都会先调用该函数，函数有三个参数：<code>to</code> 表示要跳转到哪个页面，<code>from</code> 表示从哪个页面跳转过去，<code>next</code> 表示页面执行的下一步跳转操作。</p>\n<p>我们每次在跳转到某个页面之前需要先判断一下该页面是否需要登录，如果需要登录且当前处于未登录状态则跳转至登录页面。因此我们就需要在每个页面中存储是否需要授权的信息，可以定义在任意名字的变量中，一般可以把额外信息放在 <code>meta</code> 域中。</p>\n<p>修改后的 <code>router/index.js</code> 如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">PKIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/pk/PKIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RecordIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/record/RecordIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RanklistIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/ranklist/RanklistIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyBotsIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/mybots/MyBotsIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NotFoundView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/error/NotFoundView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountLoginView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountLoginView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountRegisterView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountRegisterView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/store/index&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/pk/&quot;</span>,  <span class=\"comment\">// 如果是根路径则重定向到对战页面</span></span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/pk/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;pk_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">PKIndexView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/record/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;record_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">RecordIndexView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/ranklist/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;ranklist_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">RanklistIndexView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/mybots/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_mybots_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">MyBotsIndexView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/account/login/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_login&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">UserAccountLoginView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/account/register/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_register&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">UserAccountRegisterView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/404/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;404&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">NotFoundView</span>,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">requestAuth</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/:catchAll(.*)&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;others&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/404/&quot;</span>,  <span class=\"comment\">// 如果不是以上路径之一说明不合法，重定向到404页面</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.<span class=\"property\">meta</span>.<span class=\"property\">requestAuth</span> &amp;&amp; !store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">is_login</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Please login!&quot;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">next</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_login&quot;</span> &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>();  <span class=\"comment\">// 如果不需要授权就直接跳转即可</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-实现注册页面\">4. 实现注册页面</h2>\n<p>注册页面 <code>UserAccountRegisterView</code> 的实现其实就和登录页面基本一致，多加一个确认密码输入框即可。注册时不会修改前端的 <code>state</code> 值，因此也无需将 <code>register</code> 函数实现在 <code>store/user.js</code> 中：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-top: 20px;&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;display: inline-block;&quot;</span>&gt;</span>Login<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;float: right; height: 2.5rem; line-height: 2.5rem;&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>还没有账号？<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_account_login&#x27; &#125;&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-decoration: none;&quot;</span>&gt;</span></span><br><span class=\"line\">            去登录 &gt;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;clear: both;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-md-5&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 6rem auto; box-shadow: 5px 5px 20px #aaa;&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-header text-center&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>用户注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row justify-content-md-center&quot;</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col col-md-8&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- @submit后的prevent是阻止掉submit的默认行为，防止组件间的向上或向下传递 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin: 1rem;&quot;</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;register&quot;</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入用户名&quot;</span> /&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入密码&quot;</span> /&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mb-3&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;confirmedPassword&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-label&quot;</span>&gt;</span>Confirmed Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;confirmedPassword&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;confirmedPassword&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请再次输入密码&quot;</span> /&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 1rem; color: red;&quot;</span>&gt;</span></span><br><span class=\"line\">                        &#123;&#123; error_message &#125;&#125;</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;success_message&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;font-size: 1rem; color: green;&quot;</span>&gt;</span></span><br><span class=\"line\">                        &#123;&#123; success_message &#125;&#125;</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;btn btn-primary&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%; margin-top: 10px;&quot;</span>&gt;</span></span><br><span class=\"line\">                        注册</span><br><span class=\"line\">                      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vuex&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/router/index&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> store = <span class=\"title function_\">useStore</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> username = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> password = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> confirmedPassword = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> error_message = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> success_message = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">register</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      error_message.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      axios.<span class=\"title function_\">post</span>(<span class=\"string\">&quot;http://localhost:3000/user/account/register/&quot;</span>, <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">params</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">username</span>: username.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">password</span>: password.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">confirmedPassword</span>: confirmedPassword.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">data</span>.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            success_message.<span class=\"property\">value</span> = <span class=\"string\">&quot;Success! Go to home page after 3 seconds...&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $(<span class=\"string\">&quot;.success_message&quot;</span>).<span class=\"title function_\">fadeIn</span>();  <span class=\"comment\">// 渐变出现注册成功的提示</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 2秒后将注册成功的提示渐变消去</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">              $(<span class=\"string\">&quot;.success_message&quot;</span>).<span class=\"title function_\">fadeOut</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;  <span class=\"comment\">// 3秒后自动登录并跳转至首页，此处计时与上面同时进行</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">              success_message.<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">              store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;login&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">username</span>: username.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">password</span>: password.<span class=\"property\">value</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">success</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                  store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;getInfo&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">success</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                      router.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span> &#125;);  <span class=\"comment\">// 跳转至home页面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                  &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">              &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"number\">3000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            error_message.<span class=\"property\">value</span> = resp.<span class=\"property\">result</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp.<span class=\"property\">data</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      username,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      password,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      confirmedPassword,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      error_message,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      success_message,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      register,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-登陆状态的持久化\">5. 登陆状态的持久化</h2>\n<p>我们可以将登录后获得的 <code>jwt token</code> 存放在浏览器的一小块硬盘空间 LocalStorage 中，首先在 <code>store/user.js</code> 中修改：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">login</span>(<span class=\"params\">context, data</span>) &#123;</span><br><span class=\"line\">      $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/login/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">username</span>: data.<span class=\"property\">username</span>,</span><br><span class=\"line\">          <span class=\"attr\">password</span>: data.<span class=\"property\">password</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (resp.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;jwt_token&quot;</span>, resp.<span class=\"property\">jwt_token</span>);  <span class=\"comment\">// 将令牌存到LocalStorage中实现登录状态持久化</span></span><br><span class=\"line\">            context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateJwtToken&quot;</span>, resp.<span class=\"property\">jwt_token</span>);</span><br><span class=\"line\">            data.<span class=\"title function_\">success</span>(resp);  <span class=\"comment\">// 成功后的回调函数</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">          data.<span class=\"title function_\">error</span>(resp);  <span class=\"comment\">// 失败后的回调函数</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">getInfo</span>(<span class=\"params\">context, data</span>) &#123;</span><br><span class=\"line\">      $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/info/&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">async</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        ...</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">logout</span>(<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;jwt_token&quot;</span>);</span><br><span class=\"line\">      context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;clearState&quot;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">modules</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>我们在 <code>login</code> 函数中将登录成功后收到的 <code>jwt token</code> 存在 LocalStorage 中，在 <code>logout</code> 函数中清除 LocalStorage 中的 <code>jwt token</code>。需要特别注意的是 <code>getInfo</code> 函数中添加了 <code>async: false</code>，这是表示将该 Ajax 请求变为同步的，具体作用在之后讲解。</p>\n<p>现在当我们要跳转到某个链接前可以先取出 LocalStorage 中的 <code>jwt token</code>，判断是否存在并且未过期，如果有效则在跳转之前直接调用 <code>store/user.js</code> 中的 <code>updateJwtToken</code> 更新浏览器内存中的 <code>jwt token</code>，并通过 <code>getInfo</code> 函数更新用户信息。还是在 <code>router/index.js</code> 中的 <code>router.beforeEach</code> 函数中实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">PKIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/pk/PKIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RecordIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/record/RecordIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RanklistIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/ranklist/RanklistIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyBotsIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/mybots/MyBotsIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NotFoundView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/error/NotFoundView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountLoginView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountLoginView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserAccountRegisterView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/account/UserAccountRegisterView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/store/index&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  ...</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> jwt_token = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;jwt_token&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> jwt_token_valid = <span class=\"literal\">false</span>;  <span class=\"comment\">// jwt_token是否存在且有效</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (jwt_token) &#123;  <span class=\"comment\">// jwt_token存在</span></span><br><span class=\"line\">    store.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateJwtToken&quot;</span>, jwt_token);</span><br><span class=\"line\">    store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;getInfo&quot;</span>, &#123;</span><br><span class=\"line\">      <span class=\"title function_\">success</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// jwt_token有效</span></span><br><span class=\"line\">        jwt_token_valid = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"title function_\">error</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Invalid token! Please login!&quot;</span>);</span><br><span class=\"line\">        store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;logout&quot;</span>);  <span class=\"comment\">// 清除浏览器内存和LocalStorage中的jwt_token</span></span><br><span class=\"line\">        <span class=\"title function_\">next</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_login&quot;</span> &#125;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (to.<span class=\"property\">meta</span>.<span class=\"property\">requestAuth</span> &amp;&amp; !store.<span class=\"property\">state</span>.<span class=\"property\">user</span>.<span class=\"property\">is_login</span> &amp;&amp; !jwt_token_valid) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Please login!&quot;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">next</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_account_login&quot;</span> &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">next</span>();  <span class=\"comment\">// 如果不需要授权就直接跳转即可</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<p>注意，在第一个 <code>if</code> 语句中调用了 <code>store</code> 的 <code>getInfo</code> 函数，由于 Ajax 的回调函数默认是异步的（Axios也是异步），因此第二个 <code>if</code> 语句会在 <code>success</code> 回调函数执行前就被执行了，这会导致 <code>jwt_token_valid</code> 还没被更新，从而被判断成未登录状态，直接跳转至登录页面，所以我们在前面将 <code>getInfo</code> 函数中的 Ajax 设置为同步，保证了以上代码的正确执行逻辑。</p>\n<p>如果使用 Axios，需要结合 <code>async</code> 与 <code>await</code> 关键字实现同步，<code>getInfo</code> 函数如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">getInfo</span>(<span class=\"params\">context, data</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;http://localhost:3000/user/account/info/&quot;</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + context.<span class=\"property\">state</span>.<span class=\"property\">jwt_token</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (resp.<span class=\"property\">data</span>.<span class=\"property\">result</span> === <span class=\"string\">&quot;success&quot;</span>) &#123;  <span class=\"comment\">// 注意返回的数据内容在data字段中</span></span><br><span class=\"line\">        context.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;updateUser&quot;</span>, &#123;</span><br><span class=\"line\">          ...resp.<span class=\"property\">data</span>,</span><br><span class=\"line\">          <span class=\"attr\">is_login</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        data.<span class=\"title function_\">success</span>(resp.<span class=\"property\">data</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">      data.<span class=\"title function_\">error</span>(resp.<span class=\"property\">data</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>router.beforeEach</code> 函数如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"keyword\">async</span> (to, <span class=\"keyword\">from</span>, next) =&gt; &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (jwt_token) &#123;  <span class=\"comment\">// jwt_token存在</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> store.<span class=\"title function_\">dispatch</span>(<span class=\"string\">&quot;getInfo&quot;</span>, &#123; ... &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/61266.html",
            "url": "https://asanosaki.github.io/posts/61266.html",
            "title": "SpringBoot学习笔记-配置MySQL与实现注册登录模块（中）",
            "date_published": "2023-11-17T02:08:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现用适合前后端分离的 JWT 验证替代传统的 Session 验证方式，并实现登录、获取信息以及注册三个后端 API。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-配置JWT验证\">1. 配置JWT验证</h2>\n<p>传统模式是使用 Session 进行验证，但是由于前后端分离后可能会存在跨域问题，因此我们用 JWT（JSON Web Tokens）验证会更加方便。JWT 验证不仅可以很容易地实现跨域，也无需在服务器端存储数据，这样就算我们有很多个服务器，那么只需要获得一次令牌后就可以登录多个服务器。</p>\n<p>我们所有的页面大致可以分为两大类，第一类是无需登录验证就能访问（公开页面），另一类就是登录后才能访问（授权页面）。</p>\n<p>JWT 验证的原理是用户登录后服务器会给用户返回一个 <code>jwt token</code>，且会将一些 ID 之类的用户信息加到 <code>jwt token</code> 里，之后客户端每次向服务器端发送请求的时候都会带上这个令牌，服务器端在访问授权页面时会先验证这个令牌是否合法，如果合法就会根据令牌中的用户信息从数据库中查找出这个用户并将其数据提取至上下文，接着再访问授权页面。</p>\n<p>生成 <code>jwt token</code> 时服务器端会先构建一个字符串，第一段存储用户 ID，第二段存储一个只有服务器能看到的密钥，然后可以通过一些哈希算法将字符串加密（加密算法是固定的），接着会将第一段用户 ID 加上加密后的信息合在一起（即 <code>jwt token</code>）返回给用户，之后服务器端想要验证的话就根据接收到的用户 ID 配合自己的密钥重复一遍这个固定的加密算法，看看加密后的结果是否和接收到的 <code>jwt token</code> 中的加密信息一致。</p>\n<p>现在可能会有几个问题，比如 <code>jwt token</code> 是存在于客户端的，那么如果用户去篡改里面的数据会怎样，比如把用户 ID 换成具有权限的另一个用户的 ID？</p>\n<p>这种情况是不会发生的，因为假如用户修改了 ID，但是由于加密算法的特性是不可逆的，即无法通过加密信息反推回原始字符串的信息，因此用户不知道服务器加密的密钥是什么，就没办法得到修改 ID 后再经过密钥加密的信息。</p>\n<p>首先我们先去 Maven 仓库查找并添加以下依赖：</p>\n<ul>\n<li><code>JetBrains Java Annotations</code></li>\n<li><code>jjwt-api</code></li>\n<li><code>jjwt-impl</code></li>\n<li><code>jjwt-jackson</code></li>\n</ul>\n<p>然后我们要实现 <code>utils.JwtUtil</code> 类（<code>utils</code> 包创建在 <code>com.kob.backend</code> 包下，放在哪个包下其实都是看个人习惯，不一定都要按这样写），为 JWT 工具类，用来创建、解析 <code>jwt token</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.JwtBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Jwts;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.SecretKey;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.UUID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtil</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">JWT_TTL</span> <span class=\"operator\">=</span> <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000L</span> * <span class=\"number\">24</span> * <span class=\"number\">14</span>;  <span class=\"comment\">// token的有效期设置为14天</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">JWT_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;IVK157AXCZSChcwW23AUvayrXYhgcXAHKBMDziw17dW&quot;</span>;  <span class=\"comment\">// 密钥，自己随便打，但是长度要够长，否则会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getUUID</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 生成一个随机的UUID并去掉其中的&quot;-&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> UUID.randomUUID().toString().replaceAll(<span class=\"string\">&quot;-&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SecretKey <span class=\"title function_\">generalKey</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] encodeKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);  <span class=\"comment\">// 使用Base64解码预设的JWT_KEY</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(encodeKey, <span class=\"number\">0</span>, encodeKey.length, <span class=\"string\">&quot;HmacSHA256&quot;</span>);  <span class=\"comment\">// 使用这个解码后的密钥生成一个HmacSHA256算法的SecretKey</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JwtBuilder <span class=\"title function_\">getJwtBuilder</span><span class=\"params\">(String subject, Long ttlMillis, String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">nowMillis</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(nowMillis);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ttlMillis == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ttlMillis = JwtUtil.JWT_TTL;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">expMillis</span> <span class=\"operator\">=</span> nowMillis + ttlMillis;  <span class=\"comment\">// 计算出token的过期时间</span></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">expDate</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(expMillis);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .id(uuid)</span><br><span class=\"line\">                .subject(subject)</span><br><span class=\"line\">                .issuer(<span class=\"string\">&quot;sg&quot;</span>)</span><br><span class=\"line\">                .issuedAt(now)</span><br><span class=\"line\">                .signWith(secretKey)</span><br><span class=\"line\">                .expiration(expDate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject)</span> &#123;  <span class=\"comment\">// 创建一个JWT。</span></span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, <span class=\"literal\">null</span>, getUUID());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();  <span class=\"comment\">// 将其转换为一个紧凑的URL安全的JWT字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span> <span class=\"keyword\">throws</span> Exception &#123;  <span class=\"comment\">// 解析一个JWT</span></span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.parser()</span><br><span class=\"line\">                .verifyWith(secretKey)  <span class=\"comment\">// 使用生成的密钥来验证JWT的签名</span></span><br><span class=\"line\">                .build()</span><br><span class=\"line\">                .parseSignedClaims(jwt)</span><br><span class=\"line\">                .getPayload();  <span class=\"comment\">// 解析JWT并返回其payload（载荷）部分</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个类提供了创建和解析 JWT 的功能，可以用于实现基于 JWT 的身份验证和授权。但是需要注意的是，这个类中的 <code>JWT_KEY</code> 是硬编码的，这在实际的生产环境中是不推荐的，因为这样会导致所有的令牌都使用同一个密钥，一旦这个密钥泄露，所有的令牌都可能会被篡改或伪造。在实际的生产环境中，密钥应该被安全地存储在一个安全的地方，如环境变量或密钥管理服务中。</p>\n<p>在 JWT 中，<code>subject</code>（或称为 <code>sub</code>）是一个预定义的声明，通常用来标识这个 JWT 所关联的主体。这个主体通常是一个<strong>用户的标识符</strong>，比如用户 ID 或用户名。这样，当你从一个 JWT 中解析出 <code>subject</code> 时，你就知道这个 JWT 是属于哪个用户的，从而可以进行相应的授权操作。例如，你可以根据 <code>subject</code> 来查找用户的角色，然后根据角色来决定用户是否有权限访问某个资源。这就是基于 JWT 的身份验证和授权的基本原理。</p>\n<p>UUID（Universally Unique Identifier）是<strong>通用唯一识别码</strong>。它是通过特定的算法生成的一种128位的字符串，用于在全局范围内唯一地标识信息。UUID 的主要目的不是防止重复，而是减少重复的概率，使其小到可以忽略不计。</p>\n<p>代码中 <code>getUUID()</code> 方法生成了一个随机的 UUID，这个 UUID 被用作 JWT 的 <code>id</code>，用于唯一地标识每一个 JWT。这样，即使有两个完全相同的 JWT（即具有相同的 <code>subject</code> 和过期时间），只要它们的 <code>id</code> 不同，就可以被认为是两个不同的 JWT。这对于跟踪和管理 JWT 非常有用。例如，如果一个 JWT 被盗，你可以通过它的 <code>id</code> 找到它，并将其加入到黑名单中，使其无法再被使用。</p>\n<p>接下来还需要实现 <code>config.filter.JwtAuthenticationTokenFilter</code> 类（<code>filter</code> 包创建在之前的 <code>config</code> 包下），用来验证 <code>jwt token</code>，如果验证成功，则将 <code>User</code> 信息注入上下文中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config.filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.utils.JwtUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.jsonwebtoken.Claims;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jetbrains.annotations.NotNull;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.FilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtAuthenticationTokenFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, <span class=\"meta\">@NotNull</span> HttpServletResponse response, <span class=\"meta\">@NotNull</span> FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> request.getHeader(<span class=\"string\">&quot;Authorization&quot;</span>);  <span class=\"comment\">// 从请求头中获取名为&quot;Authorization&quot;的字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!StringUtils.hasText(token) || !token.startsWith(<span class=\"string\">&quot;Bearer &quot;</span>)) &#123;  <span class=\"comment\">// 这个字段应该包含一个以&quot;Bearer &quot;开头的JWT</span></span><br><span class=\"line\">            filterChain.doFilter(request, response);  <span class=\"comment\">// 将请求传递给下一个过滤器或处理器</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        token = token.substring(<span class=\"number\">7</span>);  <span class=\"comment\">// 跳过&quot;Bearer &quot;共7个字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">        String userid;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);  <span class=\"comment\">// 解析JWT，获取JWT的载荷</span></span><br><span class=\"line\">            userid = claims.getSubject();  <span class=\"comment\">// 从载荷中获取&quot;subject&quot;，这个&quot;subject&quot;应该是用户ID</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectById(Integer.parseInt(userid));  <span class=\"comment\">// 查询数据库获取用户信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户未登录&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDetailsImpl</span>(user);</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(loginUser, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        SecurityContextHolder.getContext().setAuthentication(authenticationToken);  <span class=\"comment\">// 将其设置到Spring Security的上下文中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        filterChain.doFilter(request, response);  <span class=\"comment\">// 将请求传递给下一个过滤器或处理器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上是一个基于 Spring Security 的 JWT 认证过滤器。它的主要功能是在每次 HTTP 请求到达时，从请求头中获取 JWT，解析出用户 ID，然后查询数据库获取用户信息，最后将用户信息保存到 Spring Security 的上下文中。这样，后续的处理模块就可以从 Spring Security 的上下文中获取到用户信息，进行相应的授权操作。</p>\n<p>最后我们还需要配置一下之前实现过的 <code>config.SecurityConfig</code> 类，放行登录、注册等接口，因为用户未登录时需要能访问这些页面才能正常登录：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.config.filter.JwtAuthenticationTokenFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;  <span class=\"comment\">// AuthenticationManager用于处理身份验证</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.authenticationManagerBean();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;  <span class=\"comment\">// 配置HttpSecurity</span></span><br><span class=\"line\">        http.csrf().disable()</span><br><span class=\"line\">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .authorizeRequests()</span><br><span class=\"line\">                .antMatchers(<span class=\"string\">&quot;/user/account/login/&quot;</span>, <span class=\"string\">&quot;/user/account/register/&quot;</span>).permitAll()  <span class=\"comment\">// 需要公开的链接在这边写即可</span></span><br><span class=\"line\">                .antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class=\"line\">                .anyRequest().authenticated();</span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码的重点部分在于 <code>configure</code> 方法，这个方法用于配置 <code>HttpSecurity</code>，它是 Spring Security 的核心配置点。在这个方法中，首先禁用了 CSRF（跨站请求伪造）保护，然后设置了会话管理策略为无状态，这意味着 Spring Security 不会创建或使用 HTTP 会话。接着，它配置了 URL 的访问权限，<code>/user/account/login/</code> 和 <code>/user/account/register/</code> 这两个 URL 对所有用户开放，<code>OPTIONS</code> 请求对所有用户开放，此外其他的所有请求都需要身份验证。最后，它在 <code>UsernamePasswordAuthenticationFilter</code> 之前添加了 <code>JwtAuthenticationTokenFilter</code>，这意味着在每次 HTTP 请求到达时，<code>JwtAuthenticationTokenFilter</code> 都会先于 <code>UsernamePasswordAuthenticationFilter</code> 执行。</p>\n<p>较新版本的 Spring Security 5.7 会看到提示说 <code>WebSecurityConfigurerAdapter</code> 已经废除，不过目前对本项目没什么影响，如果一定要改可以参考以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.config.filter.JwtAuthenticationTokenFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.HttpMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.SecurityFilterChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JwtAuthenticationTokenFilter jwtAuthenticationTokenFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AuthenticationManager <span class=\"title function_\">authenticationManagerBean</span><span class=\"params\">(AuthenticationConfiguration authenticationConfiguration)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> authenticationConfiguration.getAuthenticationManager();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SecurityFilterChain <span class=\"title function_\">filterChain</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        http.csrf().disable()</span><br><span class=\"line\">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">                .and()</span><br><span class=\"line\">                .authorizeRequests()</span><br><span class=\"line\">                .antMatchers(<span class=\"string\">&quot;/user/account/login/&quot;</span>, <span class=\"string\">&quot;/user/account/register/&quot;</span>).permitAll()</span><br><span class=\"line\">                .antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class=\"line\">                .anyRequest().authenticated();</span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(jwtAuthenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> http.build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-实现验证登录API\">2. 实现验证登录API</h2>\n<p>配置完成后接下来我们就可以创建后端的 API 了。在这之前我们给数据库的 <code>user</code> 表添加一列 <code>photo</code> 用来存储用户的头像链接（数据库中存储图像都是存的链接），类型为 <code>varchar(1000)</code>，然后还得去 <code>pojo.User</code> 类中添加一个字段：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> String photo;</span><br></pre></td></tr></table></figure>\n<p>现在我们编写第一个 API：<code>/user/account/login/</code>，功能是验证用户名和密码，验证成功后返回 <code>jwt token</code>。</p>\n<p>SpringBoot 中写一个 API 一共要实现三个部分：<code>controller</code> 用来调用 <code>service</code>，<code>service</code> 里面实现一个接口，还需要在 <code>service.impl</code> 中写一个具体的接口的实现。</p>\n<p>在 <code>service</code> 包下创建 <code>user.account</code> 包，表示用户账号相关的 API，然后创建 <code>LoginService</code> 接口（注意不是创建类）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">LoginService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">login</span><span class=\"params\">(String username, String password)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着在 <code>service.impl</code> 包下创建 <code>user.account</code> 包，然后创建 <code>LoginServiceImpl</code> 类用来实现我们之前定义的接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.LoginService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.utils.JwtUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.Authentication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span>  <span class=\"comment\">// 注入到Spring中，未来可以用@Autowired注解将该类注入到某个其他类中</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">LoginService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AuthenticationManager authenticationManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">login</span><span class=\"params\">(String username, String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">UsernamePasswordAuthenticationToken</span>(username, password);  <span class=\"comment\">// 需要先封装一下，因为数据库中存的不是明文</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Authentication</span> <span class=\"variable\">authenticate</span> <span class=\"operator\">=</span> authenticationManager.authenticate(authenticationToken);  <span class=\"comment\">// 验证是否能登录，如果失败会自动处理</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticate.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();  <span class=\"comment\">// 将用户取出来</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jwt_token</span> <span class=\"operator\">=</span> JwtUtil.createJWT(user.getId().toString());  <span class=\"comment\">// 将用户的ID转换成jwt_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;jwt_token&quot;</span>, jwt_token);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后就可以实现 <code>controller</code> 模块了，我们可以先把 <code>controller.user</code> 包下的 <code>UserController</code> 类删了，这是之前学习数据库操作与调试用的，然后创建一个 <code>account</code> 包，在包中创建 <code>LoginController</code> 类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.LoginService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 将接口注入进来，这就是Spring的IoC依赖注入特性</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LoginService loginService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/user/account/login/&quot;)</span>  <span class=\"comment\">// 登录采用POST请求，不是明文传输，较为安全</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">login</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Map&lt;String, String&gt; data)</span> &#123;  <span class=\"comment\">// 将POST参数放在一个Map中</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> loginService.login(username, password);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实现好后我们可以自己调试一下，如果直接从浏览器访问 URL 的话是 GET 请求，尝试访问 <code>http://localhost:3000/user/account/login/</code> 会看到报错状态码为405，表示方法不被允许，可以用 Postman 软件调试也可以自己打开前端调试，我们采用第二种方法。</p>\n<p>直接在前端项目的 <code>App.vue</code> 文件中编写临时调试代码，使用 Ajax 发出 POST 请求：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">NavBar</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">NavBar</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/NavBar.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">NavBar</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/login/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: <span class=\"string\">&quot;AsanoSaki&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">password</span>: <span class=\"string\">&quot;123456&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;@/assets/images/background.png&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后我们在前端页面中打开控制台，一刷新页面即可看到输出结果。我们可以双击并复制下来控制台中的 <code>jwt_token</code> 内容，然后去 <a href=\"https://jwt.io/\">JWT IO</a> 中解析一下，能够得到以下结果，其中的 <code>sub</code> 存储的即为用户 ID：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Header部分，表示加密算法</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;alg&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;HS256&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Payload部分，表示数据</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;jti&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;98d002b0b919404ea0571d815cecf5ba&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;sub&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;iss&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;sg&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;iat&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1700100065</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;exp&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1701309665</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-实现返回信息API\">3. 实现返回信息API</h2>\n<p>现在我们来编写 API：<code>/user/account/info/</code>，功能是根据客户端传来的 <code>jwt_token</code> 获取用户信息。</p>\n<p>首先在 <code>service.user.account</code> 包下创建 <code>InfoService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">InfoService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">getInfo</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>service.impl.user.account</code> 包下创建 <code>InfoServiceImpl</code> 类，来实现 <code>InfoService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.InfoService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InfoServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">InfoService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">getInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将用户信息从上下文中提取出来</span></span><br><span class=\"line\">        <span class=\"type\">UsernamePasswordAuthenticationToken</span> <span class=\"variable\">authenticationToken</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                (UsernamePasswordAuthenticationToken) SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">UserDetailsImpl</span> <span class=\"variable\">loginUser</span> <span class=\"operator\">=</span> (UserDetailsImpl) authenticationToken.getPrincipal();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> loginUser.getUser();</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;id&quot;</span>, user.getId().toString());</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;username&quot;</span>, user.getUsername());</span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;photo&quot;</span>, user.getPhoto());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在 <code>controller.user.account</code> 包下创建 <code>InfoController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.InfoService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InfoController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InfoService infoService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/account/info/&quot;)</span>  <span class=\"comment\">// 此处是获取信息的请求，使用GET</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">getInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> infoService.getInfo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>重启一下后端，然后我们直接访问 <code>http://localhost:3000/user/account/info/</code> 会看到报错代码为403，表示没有权限访问，因为我们还没登录。</p>\n<p>还是和之前一样，我们在前端中测试，将之前登录接收到的 <code>jwt_token</code> 用于之后访问授权链接，此次请求不用传数据，但是需要传一个 <code>headers</code> 表示表头，其中有一个 <code>Authorization</code> 属性，由 <code>Bearer </code>（注意有个空格）加上 <code>jwt_token</code> 组成，我们先直接把前面浏览器控制台输出的 <code>jwt_token</code> 复制过来：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">NavBar</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/NavBar.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">NavBar</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/info/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">headers</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 不是固定的，是官方推荐的写法，Authorization是在我们的后端JwtAuthenticationTokenFilter类中设置的</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Authorization</span>: <span class=\"string\">&quot;Bearer &quot;</span> + <span class=\"string\">&quot;eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0OGNjYjZiY2E0ZTk0YjliODI3ZmM3M2Y0OTg5YjNjOSIsInN1YiI6IjEiLCJpc3MiOiJzZyIsImlhdCI6MTcwMDEwODIyOCwiZXhwIjoxNzAxMzE3ODI4fQ.B_eKTBIxfoiXy4b0tp1sPqy7ZH5GqRFfvYOCk2sx6IY&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>在浏览器控制台可以看到以下输出：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;result&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;success&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;photo&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;https://cdn.acwing.com/media/user/profile/photo/82581_lg_e9bdbcb8aa.jpg&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;AsanoSaki&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-实现注册账号API\">4. 实现注册账号API</h2>\n<p>注册功能就有一些业务逻辑需要判断，代码量会稍微多一些。</p>\n<p>首先在 <code>service.user.account</code> 包下创建 <code>RegisterService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">RegisterService</span> &#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; <span class=\"title function_\">register</span><span class=\"params\">(String username, String password, String confirmedPassword)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>service.impl.user.account</code> 包下创建 <code>RegisterServiceImpl</code> 类，来实现 <code>InfoService</code> 接口：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.RegisterService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RegisterServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">RegisterService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> PasswordEncoder passwordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">register</span><span class=\"params\">(String username, String password, String confirmedPassword)</span> &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (username == <span class=\"literal\">null</span>) &#123;  <span class=\"comment\">// 判断是否存在用户名参数</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The username can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (password == <span class=\"literal\">null</span> || confirmedPassword == <span class=\"literal\">null</span>) &#123;  <span class=\"comment\">// 判断是否存在密码参数</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The password can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        username = username.trim();  <span class=\"comment\">// 删掉用户名首尾的空白字符</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (username.isEmpty()) &#123;  <span class=\"comment\">// 判断删去空格后用户名是否为空</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The username can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (password.isEmpty() || confirmedPassword.isEmpty()) &#123;  <span class=\"comment\">// 判断密码是否为空</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The password can&#x27;t be empty!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (username.length() &gt; <span class=\"number\">100</span> || password.length() &gt; <span class=\"number\">100</span>) &#123;  <span class=\"comment\">// 判断用户名或密码长度是否超过数据库字段的范围</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The username or password can&#x27;t be longer than 100!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!password.equals(confirmedPassword)) &#123;  <span class=\"comment\">// 判断两次输入的密码是否一致</span></span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The inputs of two passwords are different!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;username&quot;</span>, username);  <span class=\"comment\">// 在数据库中查看是否存在用户名相同的用户</span></span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectList(queryWrapper);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!users.isEmpty()) &#123;</span><br><span class=\"line\">            res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;The username already exists!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 执行数据库插入操作</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">encodedPassword</span> <span class=\"operator\">=</span> passwordEncoder.encode(password);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">photo</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;https://cdn.acwing.com/media/user/profile/photo/82581_lg_e9bdbcb8aa.jpg&quot;</span>;  <span class=\"comment\">// 默认头像</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"literal\">null</span>, username, encodedPassword, photo);</span><br><span class=\"line\">        userMapper.insert(user);</span><br><span class=\"line\"></span><br><span class=\"line\">        res.put(<span class=\"string\">&quot;result&quot;</span>, <span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在 <code>controller.user.account</code> 包下创建 <code>RegisterController</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user.account;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.user.account.RegisterService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RegisterController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RegisterService registerService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/user/account/register/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">register</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> Map&lt;String, String&gt; data)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">confirmedPassword</span> <span class=\"operator\">=</span> data.get(<span class=\"string\">&quot;confirmedPassword&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> registerService.register(username, password, confirmedPassword);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同样还是在前端编写调试代码，可以自行尝试数据为空，或者两次密码不一致等不合法操作，然后在浏览器控制台查看结果：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">NavBar</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/NavBar.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">NavBar</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ...</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/user/account/register/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;POST&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">username</span>: <span class=\"string\">&quot;user7&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">password</span>: <span class=\"string\">&quot;123456&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">confirmedPassword</span>: <span class=\"string\">&quot;123456&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">success</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title function_\">error</span>(<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(resp);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>至此我们的后端部分实现完成了，后面就可以开始实现前端部分了。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/23384.html",
            "url": "https://asanosaki.github.io/posts/23384.html",
            "title": "SpringBoot学习笔记-配置MySQL与实现注册登录模块（上）",
            "date_published": "2023-11-14T13:34:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现利用 MyBatis-Plus 配置接入并操作 MySQL 数据库，并集成 Spring Security 进行登录身份的认证。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-SpringBoot配置MySQL\">1. SpringBoot配置MySQL</h2>\n<p>回顾一下项目的流程，客户端（Clinet）可能会有很多个，每个客户端都会和我们的后端服务器进行通信，一般像我们这种的小项目后端只有一个服务器，项目变大后可能还会做负载均衡。</p>\n<p>接下来我们要实现的是用户的注册登录模块，那么在登录的时候就需要将用户的用户名和密码传给服务器，然后服务器再给前端传一些信息回来。显然我们需要将用户的用户名和密码存下来，一般我们会将这些数据存在数据库里，本次项目使用的是 MySQL（安装配置教程可见：<a href=\"/posts/51863.html\">MySQL 安装配置与使用教程</a>）。</p>\n<p>MySQL 也是一个单独的程序，也可以接收很多请求并返回数据，SpringBoot 与 MySQL 之间也有交互关系，例如根据某个用户名向 MySQL 查询对应的密码等信息。</p>\n<p>我们先在终端里登录一下 MySQL：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n<p>然后创建一个数据库 <code>kob</code>：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> database kob;</span><br></pre></td></tr></table></figure>\n<p>IDEA 是可以图形化操作数据库的，在最右边的选项卡中能够看到数据库（Database），点击 <code>+</code>，在数据源（Data Source）中选择 MySQL，在弹出来的对话框中输入用户名 <code>root</code> 和数据库根用户的密码，数据库输入我们刚创建的 <code>kob</code>，然后点击一下测试连接，第一次连接会让我们下载驱动。在架构选项卡（Schemas）中可以勾上默认架构。最后点击确定即可连接上数据库。</p>\n<p>我们创建一个保存用户信息的表 <code>user</code>，然后创建几个字段：<code>id</code>、<code>username</code>、<code>password</code>，其类型分别为 <code>int</code>、<code>varchar(100)</code>、<code>varchar(100)</code>，将 <code>id</code> 设置为自增且非空。创建好后先插入一条数据：<code>(1, &quot;AsanoSaki&quot;, &quot;123456&quot;)</code>。</p>\n<p>接下来我们需要加一些依赖，使得 SpringBoot 能够操作数据库。</p>\n<p>首先前往 <a href=\"https://mvnrepository.com/\">Maven 仓库</a>，搜索并安装以下依赖，一般选择最新版即可，我们将依赖的 Maven 代码复制到 SpringBoot 项目根目录下的 <code>pom.xml</code> 文件的 <code>&lt;dependencies&gt;</code> 代码块中：</p>\n<ul>\n<li><code>Spring Boot Starter JDBC</code></li>\n<li><code>Project Lombok</code></li>\n<li><code>MySQL Connector/J</code></li>\n<li><code>mybatis-plus-boot-starter</code></li>\n<li><code>mybatis-plus-generator</code></li>\n</ul>\n<p>复制好后会看到爆红了，在右侧选项卡中打开 <code>Maven</code>，然后点击上方最左侧的刷新（重新加载所有 Maven 项目）按钮 Reload 一遍就行。</p>\n<p>然后在 <code>application.properties</code> 文件中添加数据库配置信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.datasource.username=root</span><br><span class=\"line\">spring.datasource.password=&lt;你的数据库根用户密码&gt;</span><br><span class=\"line\">spring.datasource.url=jdbc:mysql://localhost:3306/kob?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8</span><br><span class=\"line\">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-SpringBoot项目模块介绍与构建\">2. SpringBoot项目模块介绍与构建</h2>\n<h3 id=\"2-1-SpringBoot常用模块介绍\">2.1 SpringBoot常用模块介绍</h3>\n<p>SpringBoot 中的常用模块有以下几种：</p>\n<ul>\n<li><code>pojo</code> 层：将数据库中的表对应成 Java 中的 Class。</li>\n<li><code>mapper</code> 层（也叫 <code>Dao</code> 层）：将 <code>pojo</code> 层的 Class 中的操作，映射成 SQL 语句。</li>\n<li><code>service</code> 层：写具体的业务逻辑，组合使用 <code>mapper</code> 中的操作。</li>\n<li><code>controller</code> 层：负责请求转发，接收前端页面传过来的参数，传给 <code>service</code> 处理，接收到返回值后再传给前端页面。</li>\n</ul>\n<p>数据库中的表就类似于 Java 中的 Class，<code>pojo</code> 层就是将表转化成 Class，例如我们有一个类 <code>User</code>，里面有三个变量：<code>id</code>、<code>username</code>、<code>password</code>。Class 中可能还有一些方法，例如增删改查，那么 <code>mapper</code> 层就负责将这些方法转化成 SQL 语句。我们很多业务可能并不会只处理一张表，因此 <code>service</code> 层就可能用到多个不同的 <code>mapper</code> 操作来实现某个业务。<code>controller</code> 层就是将前端的请求及参数选择将其传给哪个 <code>service</code>，相当于实现调度功能，然后再将 <code>service</code> 的返回结果返回给前端。</p>\n<h3 id=\"2-2-构建POJO与Mapper层\">2.2 构建POJO与Mapper层</h3>\n<p>然后在 <code>com.kob.backend</code> 目录下创建 <code>pojo</code> 包，并在 <code>pojo</code> 包下创建 <code>User</code> 类（注意要和数据库表的名字一样）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span>  <span class=\"comment\">// Lombok能够帮我们实现get/set之类的方法</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span>  <span class=\"comment\">// 无参构造函数</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span>  <span class=\"comment\">// 带所有参数的构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span>  <span class=\"comment\">// 声明id为自增类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>继续在 <code>com.kob.backend</code> 目录下创建 <code>mapper</code> 包，并在 <code>mapper</code> 包下创建 <code>UserMapper</code> 类，我们使用的是 MyBatis-Plus，只需要继承其实现好的接口即可：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseMapper</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-MyBatis与MyBatis-Plus介绍\">2.3 MyBatis与MyBatis-Plus介绍</h3>\n<p>MyBatis 官方文档：<a href=\"https://mybatis.org/mybatis-3/zh/index.html\">MyBatis Docs</a>。</p>\n<p>MyBatis-Plus 官网：<a href=\"https://baomidou.com/\">MyBatis-Plus</a>。</p>\n<p>ORM（Object-Relational Mapping），即<strong>对象关系映射</strong>，是一种技术，它允许你使用面向对象的范式来查询和操作数据库中的数据。</p>\n<p>在面向对象编程中，我们操作的是对象，这些对象有各种属性和行为；而在关系型数据库中，我们操作的是表，这些表由行和列组成。这两种技术之间的差异，就是所谓的<strong>对象-关系不匹配</strong>。</p>\n<p>ORM 框架的作用就是在这两者之间做一个映射，可以将 ORM 看作是连接面向对象编程（OOP）和关系数据库表的层，让我们可以用面向对象的方式来操作数据库。例如，我们可以创建一个对象，并将其属性映射到数据库表的列，然后通过操作这个对象，就可以实现对数据库的增删改查。</p>\n<p>MyBatis 是一款用于持久层的、轻量级的半自动化 ORM 框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置查询参数和获取结果集的工作。MyBatis 封装了 JDBC 底层访问数据库的细节，使我们不需要与 JDBC API 打交道就可以访问数据库。</p>\n<p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上做了增强，却不做改变。引入 MyBatis-Plus 不会对现有的 MyBatis 架构产生任何影响。MyBatis-Plus 提供了基本的 CRUD 功能，连 SQL 语句都不需要编写。它还提供了一些很有意思的插件，比如 SQL 性能监控、乐观锁、执行分析等。</p>\n<p>两者的区别主要体现在以下几个方面：</p>\n<ul>\n<li>SQL 语句：在 MyBatis 中，所有 SQL 语句都需要自己编写；而在 MyBatis-Plus 中，由于内置了通用 Mapper 和通用 Service，因此可以实现单表的大部分 CRUD 操作，甚至无需编写 SQL 语句。</li>\n<li>实体关系映射：在 MyBatis 中，需要手动解析实体关系映射转换为 MyBatis 内部对象并注入容器；而在 MyBatis-Plus 中，可以自动解析实体关系映射转换为 MyBatis 内部对象并注入容器。</li>\n<li>Lambda 形式调用：MyBatis 不支持 Lambda 形式调用，而 MyBatis-Plus 支持。</li>\n<li>条件构造器：MyBatis-Plus 提供了强大的条件构造器，满足各类使用需求。</li>\n</ul>\n<h3 id=\"2-4-使用MyBatis-Plus操作数据库\">2.4 使用MyBatis-Plus操作数据库</h3>\n<p>我们调试的时候先不把 <code>service</code> 和 <code>controller</code> 分开，直接先在 <code>controller</code> 中实现。</p>\n<p>我们在 <code>controller</code> 包下创建 <code>user</code>、<code>record</code>、<code>ranklist</code> 包，本次实现的注册登录模块在 <code>user</code> 包中实现，因此我们先在 <code>user</code> 包下创建 <code>UserController</code> 类，来看一下如何操作数据库，先实现查询 <code>user</code> 表中的所有数据：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/all/&quot;)</span>  <span class=\"comment\">// 想验证GET/POST类型的请求可以使用GetMapping/PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title function_\">getAllUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectList(<span class=\"literal\">null</span>);  <span class=\"comment\">// null表示查询所有数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这时我们访问 <code>http://localhost:3000/user/all/</code> 即可看到返回结果如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;AsanoSaki&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>然后我们再尝试通过用户的 ID 查询用户信息：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/&#123;id&#125;/&quot;)</span>  <span class=\"comment\">// 根据id查询用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">getUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectById(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>访问 <code>http://localhost:3000/user/1/</code> 即可看到返回结果如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;AsanoSaki&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>我们先理一下执行流程，假设用户访问了链接 <code>http://localhost:3000/user/1/</code>，那么就向后端的 SpringBoot 发出了请求，SpringBoot 根据请求的路径找到所调用的函数 <code>getUser()</code>（由 <code>UserController</code> 类实现），在该函数中使用 <code>UserMapper</code> 类向 MySQL 查询 <code>user</code> 表（由 <code>User</code> 类实现）中 <code>id</code> 为1的用户数据（在这一步操作中会由 MyBatis-Plus 自动转换成类似于 <code>select * from user where id=1;</code> 的 SQL 语句），并将查询结果返回给客户端。</p>\n<p>对于复杂的查询语句需要封装一个条件构造器（QueryWrapper），里面有很多 API 可以使用，我们还是和上一步一样实现根据 ID 查询用户：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/&#123;id&#125;/&quot;)</span>  <span class=\"comment\">// 根据id查询用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">getUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;id&quot;</span>, id);  <span class=\"comment\">// 根据链接传入的id查询用户</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectOne(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了更好地测试查询操作，我们再插入几条数据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(2, &quot;user2&quot;, &quot;123&quot;)</span><br><span class=\"line\">(3, &quot;user3&quot;, &quot;123&quot;)</span><br><span class=\"line\">(4, &quot;user4&quot;, &quot;123&quot;)</span><br></pre></td></tr></table></figure>\n<p>然后我们根据 ID 的范围来查询满足条件的所有用户：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/&#123;id_low&#125;-&#123;id_high&#125;/&quot;)</span>  <span class=\"comment\">// 根据id的范围查询用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title function_\">getUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id_low, <span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id_high)</span> &#123;</span><br><span class=\"line\">        QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.ge(<span class=\"string\">&quot;id&quot;</span>, id_low).lt(<span class=\"string\">&quot;id&quot;</span>, id_high);  <span class=\"comment\">// 查询id大于等于id_low且小于id_high的用户</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectList(queryWrapper);  <span class=\"comment\">// 此处会返回多个用户</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这时候我们访问 <code>http://localhost:3000/user/2-4/</code> 即可查询 ID 大于等于2且小于4的所有用户，返回结果如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user2&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>插入与删除数据一般使用 POST，这样就不是明文传输，较为安全，但是为了方便调试我们使用 GET，由于我们的 ID 设置为自增类型，因此我们创建新用户时只需要设置 <code>username</code> 和 <code>password</code> 即可：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/insert/&#123;username&#125;/&#123;password&#125;/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">insertUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String username, <span class=\"meta\">@PathVariable</span> String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        user.setUsername(username);</span><br><span class=\"line\">        user.setPassword(password);</span><br><span class=\"line\">        userMapper.insert(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Add User Successfully!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来我们再尝试一下删除用户：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/delete/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">deleteUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        userMapper.deleteById(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Delete User Successfully!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-配置用户认证机制\">3. 配置用户认证机制</h2>\n<h3 id=\"3-1-Spring-Security对接MySQL\">3.1 Spring Security对接MySQL</h3>\n<p>我们未来可能有很多操作不能让用户随便访问，需要登录成功后有授权了才可以访问，因此我们要给网站加上授权机制。比如某个用户想查看一个 Bot 的代码，那么我们需要判断这个用户是不是这个 Bot 的作者，如果不是则没有权限查询。</p>\n<p>SpringBoot 中也具有权限判断模块 <code>Spring Security</code>，我们将其集成过来，先去 Maven 仓库搜索并安装依赖 <code>spring-boot-starter-security</code>，同样还是将其 Maven 配置代码复制到 <code>pom.xml</code> 文件的 <code>&lt;dependencies&gt;</code> 代码块中，然后别忘了重新加载 Maven。</p>\n<p>现在我们再访问之前的 URL 会发现要我们登录，Spring Security 默认的用户名为 <code>user</code>，密码每次启动项目会重新生成，在项目控制台的输出中可以看到 <code>Using generated security password: xxx</code> 的信息，我们登录后即可正常访问之前的那些 URL。</p>\n<p>一般网站的验证方式都是通过 Session 实现，当客户端将用户名和密码传给 SpringBoot 后，SpringBoot 会在数据库中查询是否正确，如果正确那么就会将结果返回给客户端，且会在 Session 中传一串随机字符串 <code>SessionID</code>，在传给客户端之前会先将 <code>SessionID</code> 存下来，可以存到 MySQL 也可以是 Redis 中。客户端拿到 <code>SessionID</code> 后会将其存到浏览器的 Cookie 中，Cookie 可以认为是浏览器自带的一个存储空间，浏览器关闭后仍然存在。未来每次再向后端发送请求时客户端都会默认从 Cookie 中取出 <code>SessionID</code>，然后放到 Session 中传给 SpringBoot，SpringBoot 会看一下数据库中是否存在这个 <code>SessionID</code>，且数据库中除了存放 <code>SessionID</code> 之外还会存放对应的用户名、上一次获取 <code>SessionID</code> 的时间等信息，如果没有过期，那么就表示登录成功，如果过期了或者 <code>SessionID</code> 不存在，那么就会给客户端返回一个登录页面。</p>\n<p>另一种验证方式是 JWT，可以不需要生成 <code>SessionID</code> 且不需要在数据库中存储数据就实现前后端分离验证，在之后会讲到。</p>\n<p>现在来看看如何让 Spring Security 对接我们的 MySQL 数据库，即通过数据库来判断用户是否登录。我们需要配置一下 Spring Security，首先在 <code>com.kob.backend</code> 包下创建一个 <code>service.impl</code> 包（注意有两层），然后在 <code>impl</code> 包下创建一个 <code>UserDetailsServiceImpl</code> 类（类名无所谓，一般习惯这么写），继承自 <code>UserDetailsService</code> 接口。</p>\n<p>在 IDEA 中按 <code>Alt + Insert</code> 键可以方便查找接口中的所有方法，我们要重写（Override）<code>loadUserByUsername</code> 方法，该方法会传入一个 <code>username</code>，然后我们要返回对应的用户信息，因此就涉及到了数据库操作：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.service.impl.utils.UserDetailsImpl;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span>  <span class=\"comment\">// 表示这是一个Service层</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDetailsServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetailsService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDetails <span class=\"title function_\">loadUserByUsername</span><span class=\"params\">(String username)</span> <span class=\"keyword\">throws</span> UsernameNotFoundException &#123;</span><br><span class=\"line\">        QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;username&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.selectOne(queryWrapper);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;用户不存在&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDetailsImpl</span>(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>UserDetailsImpl</code> 类我们定义在 <code>utils</code> 包中（这个包也创建在 <code>impl</code> 包下）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.service.impl.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDetailsImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDetails</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> User user;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">GrantedAuthority</span>&gt; getAuthorities() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getUsername();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonExpired</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 账户是否还没过期</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isAccountNonLocked</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 是否没被锁定</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isCredentialsNonExpired</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 授权是否还有效</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEnabled</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 用户是否被启用</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们就可以根据用户输入的用户名在数据库中查询该用户的用户名和密码，再判断密码是否匹配。但是我们尝试一下登录会发现报错说我们没有 <code>PasswordEncoder</code>，因为我们的密码是明文，如果想要调试的话可以先去数据库中给密码加上 <code>&#123;noop&#125;</code> 前缀表示这个密码没有加密，例如：<code>&#123;noop&#125;123456</code>，然后再尝试登录即可登录成功。</p>\n<h3 id=\"3-2-密码加密存储\">3.2 密码加密存储</h3>\n<p>目前各种各样的加密算法包括之后要讲的 JWT 都有一个特性，就是给我们一个字符串，可以很快地将其变为一个新的字符串，且无法反向求得原始字符串（不可逆），这样假如数据库泄露了也不会将用户的密码泄露出去。</p>\n<p>我们实现一个 <code>config.SecurityConfig</code> 类（<code>config</code> 包是在之前解决跨域问题时创建的），即可实现用户密码的加密存储：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> PasswordEncoder <span class=\"title function_\">passwordEncoder</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// Security会调用该函数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();  <span class=\"comment\">// 返回某种加密方法，我们使用的是BCrypt方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 Spring Security 中，<code>PasswordEncoder</code> 用于在保存用户密码到数据库时对其进行加密，以及在验证用户提供的密码时对其进行比较。</p>\n<p>其中 <code>BCryptPasswordEncoder</code> 常见的有以下几种方法：</p>\n<ul>\n<li><code>encode()</code>：将明文转换成密文。</li>\n<li><code>matches()</code>：判断明文和密文是否匹配。</li>\n</ul>\n<p>现在我们再尝试登录就无法登录了，我们先在测试文件中把数据库中的密码加密一下，然后手动修改数据库中的密码，系统自带的测试文件是 <code>src/test/java/com.kob.backend</code> 中的 <code>BackendApplicationTests.java</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BackendApplicationTests</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">PasswordEncoder</span> <span class=\"variable\">passwordEncoder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">        System.out.println(passwordEncoder.encode(<span class=\"string\">&quot;123456&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// 输出：$2a$10$CxkFyAQ4juS2uxKzEhaQ0e1IOngp4prEUAPVnygXm2SCuzGHnRWuK</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将数据库中的密码改成密文后又可以正常登录了。</p>\n<p>之前在 <code>UserController</code> 中实现的注册用户的功能（<code>insertUser</code> 方法）需要修改为存储加密后的密码，直接放上目前 <code>UserController</code> 的完整代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.user;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.kob.backend.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span>  <span class=\"comment\">// 如果要用到数据库里的Mapper需要加上该注解</span></span><br><span class=\"line\">    UserMapper userMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/all/&quot;)</span>  <span class=\"comment\">// 想验证GET/POST类型的请求可以使用GetMapping/PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title function_\">getAllUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectList(<span class=\"literal\">null</span>);  <span class=\"comment\">// null表示查询所有数据</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/&#123;id&#125;/&quot;)</span>  <span class=\"comment\">// 根据id查询用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">getUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        QueryWrapper&lt;User&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(<span class=\"string\">&quot;id&quot;</span>, id);  <span class=\"comment\">// 根据链接传入的id查询用户</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> userMapper.selectOne(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/insert/&#123;username&#125;/&#123;password&#125;/&quot;)</span>  <span class=\"comment\">// 添加用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">insertUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> String username, <span class=\"meta\">@PathVariable</span> String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (password.length() &lt; <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;The length of password should greater than 6!&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">PasswordEncoder</span> <span class=\"variable\">passwordEncoder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BCryptPasswordEncoder</span>();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">encodedPassword</span> <span class=\"operator\">=</span> passwordEncoder.encode(password);</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        user.setUsername(username);</span><br><span class=\"line\">        user.setPassword(encodedPassword);</span><br><span class=\"line\">        userMapper.insert(user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Add User Successfully!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/delete/&#123;id&#125;&quot;)</span>  <span class=\"comment\">// 删除用户</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">deleteUser</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        userMapper.deleteById(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Delete User Successfully!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/10262.html",
            "url": "https://asanosaki.github.io/posts/10262.html",
            "title": "SpringBoot学习笔记-创建菜单与游戏页面（下）",
            "date_published": "2023-11-12T14:25:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现两名玩家即两条蛇的绘制与人工操作移动功能。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-地图优化改进\">1. 地图优化改进</h2>\n<p>之前我们设计的地图尺寸是13×13，两名玩家的起点横纵坐标之和均为偶数，因此可能在同一时刻走到同一个格子上，为了避免这种情况，可以将地图改为13×14的大小（即将 <code>GameMap.js</code> 中的 <code>this.cols</code> 改为14），这样两名玩家就不会在同一时刻走到同一个格子上。这样修改完之后就不能用轴对称了，需要改为中心对称：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加地图内部的随机障碍物，需要有对称性因此枚举一半即可，另一半对称生成</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">inner_walls_count</span> / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10000</span>; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> r = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (g[r][c] || g[<span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">1</span> - r][<span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">1</span> - c]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (r == <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">2</span> &amp;&amp; c == <span class=\"number\">1</span> || r == <span class=\"number\">1</span> &amp;&amp; c == <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">2</span>) <span class=\"keyword\">continue</span>;  <span class=\"comment\">// 判断是否覆盖到出生地</span></span><br><span class=\"line\">    g[r][c] = g[<span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">1</span> - r][<span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">1</span> - c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-绘制玩家的起始位置\">2. 绘制玩家的起始位置</h2>\n<p>刚开始玩家占一个格子，我们可以规定一下前七步的每一步将蛇的长度加一，之后改为每三步长度加一。每条蛇其实就是一堆格子的序列，我们可以将一个格子定义成一个 <code>Cell</code> 对象，在 <code>scripts</code> 目录下创建 <code>Cell.js</code> 记录格子的坐标。</p>\n<p>我们在每个格子中绘制的是一个圆，若格子的左上角坐标为 <code>(x, y)</code> 则圆的圆心坐标应该是 <code>(x + 0.5, y + 0.5)</code>，<code>Cell.js</code> 如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Cell</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">r, c</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> = r;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">c</span> = c;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> = c + <span class=\"number\">0.5</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> = r + <span class=\"number\">0.5</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此外每条蛇也可以定义成一个对象 <code>Snake.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">info, gamemap</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = info.<span class=\"property\">id</span>; <span class=\"comment\">// 每条蛇有唯一的id进行区分</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = info.<span class=\"property\">color</span>; <span class=\"comment\">// 颜色</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span> = gamemap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span> = [<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(info.<span class=\"property\">r</span>, info.<span class=\"property\">c</span>)];  <span class=\"comment\">// 初始化时只有一个点即cells[0]表示蛇头</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> L = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">L</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ctx = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">ctx</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> cell <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>) &#123;</span><br><span class=\"line\">      ctx.<span class=\"title function_\">beginPath</span>();</span><br><span class=\"line\">      ctx.<span class=\"title function_\">arc</span>(cell.<span class=\"property\">x</span> * L, cell.<span class=\"property\">y</span> * L, L / <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>);  <span class=\"comment\">// 半径为半个单元格</span></span><br><span class=\"line\">      ctx.<span class=\"title function_\">fill</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们在 <code>GameMap.js</code> 中创建两条蛇：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Snake</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Snake&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span> = ctx;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">parent</span> = parent;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 一个单位的绝对长度</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> = <span class=\"number\">13</span>;  <span class=\"comment\">// 地图的行数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> = <span class=\"number\">14</span>;  <span class=\"comment\">// 地图的列数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">inner_walls_count</span> = <span class=\"number\">20</span>;  <span class=\"comment\">// 地图内部的随机障碍物数量，需要是偶数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walls</span> = [];  <span class=\"comment\">// 所有的障碍物</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">snakes</span> = [</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Snake</span>(&#123; <span class=\"attr\">id</span>: <span class=\"number\">0</span>, <span class=\"attr\">color</span>: <span class=\"string\">&quot;#4876EC&quot;</span>, <span class=\"attr\">r</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">2</span>, <span class=\"attr\">c</span>: <span class=\"number\">1</span> &#125;, <span class=\"variable language_\">this</span>),</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Snake</span>(&#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">color</span>: <span class=\"string\">&quot;#F94848&quot;</span>, <span class=\"attr\">r</span>: <span class=\"number\">1</span>, <span class=\"attr\">c</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">2</span> &#125;, <span class=\"variable language_\">this</span>),</span><br><span class=\"line\">    ];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_connectivity</span>(<span class=\"params\">g, sx, sy, tx, ty</span>) &#123;  <span class=\"comment\">// 用flood fill算法判断两名玩家是否连通</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">create_walls</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_size</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 每一帧更新地图大小</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-实现玩家移动\">3. 实现玩家移动</h2>\n<p>为了实现蛇移动的连续性，我们不对每个格子进行更新，只更新头部和尾部，头部创建一个新的点往前动，尾部直接往前动。首先在 <code>Snake</code> 对象中设置一些移动的属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">info, gamemap</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = info.<span class=\"property\">id</span>; <span class=\"comment\">// 每条蛇有唯一的id进行区分</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = info.<span class=\"property\">color</span>; <span class=\"comment\">// 颜色</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span> = gamemap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span> = [<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(info.<span class=\"property\">r</span>, info.<span class=\"property\">c</span>)];  <span class=\"comment\">// 初始化时只有一个点即cells[0]表示蛇头</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> = <span class=\"number\">2</span>;  <span class=\"comment\">// 蛇每秒走2个格子</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 下一步移动的指令，-1表示没有指令，0、1、2、3分别表示上、右、下、左</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 蛇的状态，idle表示静止，move表示正在移动，die表示死亡</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;  <span class=\"comment\">// 下一步的目标位置</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 回合数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span> = [-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span> = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将蛇的状态变为走下一步</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> d = <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">r</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span>[d], <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">c</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span>[d]);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 复原</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;move&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span>++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">set_direction</span>(<span class=\"params\">d</span>) &#123;  <span class=\"comment\">// 由于未来不一定只会从键盘获取输入，因此实现一个接口修改direction</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_move</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&quot;move&quot;</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_move</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由于游戏是回合制的，因此移动的判定条件应该是获取到了两名玩家的指示后才能移动一次，且该指令既可以由键盘输入也可以由 AI 代码输入，判定两条蛇是否准备好执行下一步不能各自判断，需要由上层也就是 <code>GameMap</code> 判定，判定条件是两条蛇都处于静止状态且都已经获取到了下一步指令：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Snake</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Snake&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_connectivity</span>(<span class=\"params\">g, sx, sy, tx, ty</span>) &#123;  <span class=\"comment\">// 用flood fill算法判断两名玩家是否连通</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">create_walls</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_size</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 每一帧更新地图大小</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_ready</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 判断两条蛇是否都准备好下一回合了</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> snake <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">snakes</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (snake.<span class=\"property\">status</span> !== <span class=\"string\">&#x27;idle&#x27;</span> || snake.<span class=\"property\">direction</span> === -<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 让两条蛇进入下一回合</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> snake <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">snakes</span>) &#123;</span><br><span class=\"line\">      snake.<span class=\"title function_\">next_step</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_ready</span>()) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">next_step</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们只能从前端获得用户的操作，即获取用户的键盘输入。为了能够让 Canvas 获取键盘输入，需要添加一个 <code>tabindex</code> 属性，在 <code>GameMap.vue</code> 中进行修改：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;parent&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;gamemap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;canvas&quot;</span> <span class=\"attr\">tabindex</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样我们就能够在 <code>GameMap.js</code> 中绑定键盘的监听事件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Snake</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Snake&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">add_listening_events</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"title function_\">focus</span>();  <span class=\"comment\">// 使Canvas聚焦</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> [snake0, snake1] = <span class=\"variable language_\">this</span>.<span class=\"property\">snakes</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"function\"><span class=\"params\">e</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;w&quot;</span>) snake0.<span class=\"title function_\">set_direction</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;d&quot;</span>) snake0.<span class=\"title function_\">set_direction</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;s&quot;</span>) snake0.<span class=\"title function_\">set_direction</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;a&quot;</span>) snake0.<span class=\"title function_\">set_direction</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;ArrowUp&quot;</span>) snake1.<span class=\"title function_\">set_direction</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;ArrowRight&quot;</span>) snake1.<span class=\"title function_\">set_direction</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;ArrowDown&quot;</span>) snake1.<span class=\"title function_\">set_direction</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">key</span> === <span class=\"string\">&quot;ArrowLeft&quot;</span>) snake1.<span class=\"title function_\">set_direction</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;  <span class=\"comment\">// 暴力枚举直至生成合法的地图</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">create_walls</span>())</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">add_listening_events</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们即可在 <code>Snake.js</code> 中实现蛇的移动：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">info, gamemap</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = info.<span class=\"property\">id</span>; <span class=\"comment\">// 每条蛇有唯一的id进行区分</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = info.<span class=\"property\">color</span>; <span class=\"comment\">// 颜色</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span> = gamemap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span> = [<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(info.<span class=\"property\">r</span>, info.<span class=\"property\">c</span>)];  <span class=\"comment\">// 初始化时只有一个点即cells[0]表示蛇头</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> = <span class=\"number\">2</span>;  <span class=\"comment\">// 蛇每秒走2个格子</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 下一步移动的指令，-1表示没有指令，0、1、2、3分别表示上、右、下、左</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 蛇的状态，idle表示静止，move表示正在移动，die表示死亡</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;  <span class=\"comment\">// 下一步的目标位置</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 回合数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span> = [-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span> = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span> = <span class=\"number\">0.01</span>;  <span class=\"comment\">// 误差</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将蛇的状态变为走下一步</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> d = <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">r</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span>[d], <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">c</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span>[d]);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 复原</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;move&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> k = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = k; i &gt; <span class=\"number\">0</span>; i--) &#123;  <span class=\"comment\">// 将所有节点向后移动一位，因为要在头节点前面插入新的头节点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i] = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i - <span class=\"number\">1</span>]));  <span class=\"comment\">// 注意要深层复制一份，还有一个细节是JS的数组越界不会出错</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">set_direction</span>(<span class=\"params\">d</span>) &#123;  <span class=\"comment\">// 由于未来不一定只会从键盘获取输入，因此实现一个接口修改direction</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_move</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将头节点cells[0]向目标节点next_cell移动</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dx = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span>;  <span class=\"comment\">// 在x方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dy = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span>;  <span class=\"comment\">// 在y方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> distance = <span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(dx * dx + dy * dy);  <span class=\"comment\">// 与目的地的距离</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (distance &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 已经走到目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 状态变为静止</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>] = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>;  <span class=\"comment\">// 将头部更新为目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> move_length = <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">timedelta</span> / <span class=\"number\">1000</span>;  <span class=\"comment\">// 每一帧移动的距离</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> cos_theta = dx / distance;  <span class=\"comment\">// cos值</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> sin_theta = dy / distance;  <span class=\"comment\">// sin值</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> += move_length * cos_theta;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> += move_length * sin_theta;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&quot;move&quot;</span>) &#123;  <span class=\"comment\">// 只有移动状态才执行update_move函数</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_move</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着我们还需要实现蛇尾的移动，如果蛇的长度增加了一个单位，那么尾部不用动即可，否则尾部需要向前一个节点移动，且当移动完成后需要将尾部节点对象删去：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_tail_increasing</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 检测当前回合蛇的长度是否增加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">step</span> &lt;= <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  <span class=\"comment\">// 前7回合每一回合长度都增加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">step</span> % <span class=\"number\">3</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  <span class=\"comment\">// 之后每3回合增加一次长度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_move</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将头节点cells[0]向目标节点next_cell移动</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dx = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span>;  <span class=\"comment\">// 在x方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dy = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span>;  <span class=\"comment\">// 在y方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> distance = <span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(dx * dx + dy * dy);  <span class=\"comment\">// 与目的地的距离</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (distance &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 已经走到目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 状态变为静止</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>] = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>;  <span class=\"comment\">// 将头部更新为目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_tail_increasing</span>()) &#123;  <span class=\"comment\">// 尾部没有变长则移动完成后要删去尾部</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> move_length = <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">timedelta</span> / <span class=\"number\">1000</span>;  <span class=\"comment\">// 每一帧移动的距离</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> cos_theta = dx / distance;  <span class=\"comment\">// cos值</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> sin_theta = dy / distance;  <span class=\"comment\">// sin值</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> += move_length * cos_theta;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> += move_length * sin_theta;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_tail_increasing</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> k = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[k - <span class=\"number\">1</span>], tail_target = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[k - <span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail_dx = tail_target.<span class=\"property\">x</span> - tail.<span class=\"property\">x</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail_dy = tail_target.<span class=\"property\">y</span> - tail.<span class=\"property\">y</span>;</span><br><span class=\"line\">        tail.<span class=\"property\">x</span> += move_length * tail_dx / distance;  <span class=\"comment\">// 此处就不分开计算cos和sin了</span></span><br><span class=\"line\">        tail.<span class=\"property\">y</span> += move_length * tail_dy / distance;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&quot;move&quot;</span>) &#123;  <span class=\"comment\">// 只有移动状态才执行update_move函数</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_move</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-优化蛇的身体效果\">4. 优化蛇的身体效果</h2>\n<p>现在我们蛇的身体还是分开的若干个圆球，没有连续感。我们可以在两个相邻的圆球中间绘制一个矩形覆盖一遍即可。然后我们这边再做个小优化，将蛇的半径缩小一点，不然贴在一起时就会融合在一起不好看：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">info, gamemap</span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> = <span class=\"number\">0.4</span>;  <span class=\"comment\">// 蛇中每个节点的半径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> L = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">L</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ctx = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">ctx</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> cell <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>) &#123;</span><br><span class=\"line\">      ctx.<span class=\"title function_\">beginPath</span>();</span><br><span class=\"line\">      ctx.<span class=\"title function_\">arc</span>(cell.<span class=\"property\">x</span> * L, cell.<span class=\"property\">y</span> * L, L * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>);</span><br><span class=\"line\">      ctx.<span class=\"title function_\">fill</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将相邻的两个球连在一起</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> a = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i - <span class=\"number\">1</span>], b = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">y</span> - b.<span class=\"property\">y</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 上下排列，即x相同，左上角的点的y值为两者的最小值，因为越往上y越小</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">fillRect</span>((a.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>) * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(a.<span class=\"property\">y</span>, b.<span class=\"property\">y</span>) * L, <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">y</span> - b.<span class=\"property\">y</span>) * L);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 左右排列，画法同理</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">fillRect</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(a.<span class=\"property\">x</span>, b.<span class=\"property\">x</span>) * L, (a.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>) * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) * L, <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * L);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-碰撞检测实现\">5. 碰撞检测实现</h2>\n<p>我们只要在每一轮判断一下玩家下一步移动的目标格子是不是合法的即可，如果不是两条蛇的身体或障碍物说明是合法的，同理需要在 <code>GameMap</code> 中判断而不能由玩家自己判断，这边需要注意如果在追蛇尾的话需要判断蛇尾是否有移动，如果没有移动则不合法：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Snake</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Snake&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_next_valid</span>(<span class=\"params\">cell</span>) &#123;  <span class=\"comment\">// 检测目标格子是否合法</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> wall <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">walls</span>) &#123;  <span class=\"comment\">// 枚举障碍物</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (wall.<span class=\"property\">r</span> == cell.<span class=\"property\">r</span> &amp;&amp; wall.<span class=\"property\">c</span> == cell.<span class=\"property\">c</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> snake <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">snakes</span>) &#123;  <span class=\"comment\">// 枚举蛇的身体</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> k = snake.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!snake.<span class=\"title function_\">check_tail_increasing</span>()) &#123;  <span class=\"comment\">// 蛇尾会前进时不检测碰撞蛇尾</span></span><br><span class=\"line\">        k--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; k; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (snake.<span class=\"property\">cells</span>[i].<span class=\"property\">r</span> === cell.<span class=\"property\">r</span> &amp;&amp; snake.<span class=\"property\">cells</span>[i].<span class=\"property\">c</span> === cell.<span class=\"property\">c</span>)</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在 <code>Snake</code> 中每次进入下一步时进行合法性判断，如果不合法则将状态更新为 <code>die</code>，且颜色变白：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将蛇的状态变为走下一步</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> d = <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">r</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span>[d], <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">c</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span>[d]);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 复原</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;move&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> k = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = k; i &gt; <span class=\"number\">0</span>; i--) &#123;  <span class=\"comment\">// 将所有节点向后移动一位，因为要在头节点前面插入新的头节点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i] = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i - <span class=\"number\">1</span>]));  <span class=\"comment\">// 注意要深层复制一份，还有一个细节是JS的数组越界不会出错</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"title function_\">check_next_valid</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>)) &#123;  <span class=\"comment\">// 下一步不合法</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;die&quot;</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = <span class=\"string\">&quot;white&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-绘制蛇的眼睛\">6. 绘制蛇的眼睛</h2>\n<p>绘制眼睛时需要考虑蛇头的朝向，即上一步移动的方向，对于不同方向的眼睛偏移量打个表记录即可，完善后 <code>Snake.js</code> 的完整代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Cell</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Cell&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Snake</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">info, gamemap</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">id</span> = info.<span class=\"property\">id</span>; <span class=\"comment\">// 每条蛇有唯一的id进行区分</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = info.<span class=\"property\">color</span>; <span class=\"comment\">// 颜色</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span> = gamemap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span> = [<span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(info.<span class=\"property\">r</span>, info.<span class=\"property\">c</span>)];  <span class=\"comment\">// 初始化时只有一个点即cells[0]表示蛇头</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> = <span class=\"number\">0.4</span>;  <span class=\"comment\">// 蛇中每个节点的半径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> = <span class=\"number\">2</span>;  <span class=\"comment\">// 蛇每秒走2个格子</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 下一步移动的指令，-1表示没有指令，0、1、2、3分别表示上、右、下、左</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 蛇的状态，idle表示静止，move表示正在移动，die表示死亡</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;  <span class=\"comment\">// 下一步的目标位置</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 回合数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span> = [-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span> = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span> = <span class=\"number\">0.01</span>;  <span class=\"comment\">// 误差</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_color</span> = <span class=\"string\">&quot;black&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_radius</span> = <span class=\"number\">0.05</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_direction</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 蛇头朝向的方向，默认左下角的蛇朝上，右上角的蛇朝下</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">id</span> === <span class=\"number\">1</span>) <span class=\"variable language_\">this</span>.<span class=\"property\">eye_direction</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_dx</span> = [  <span class=\"comment\">// 四个方向蛇眼睛的偏移量，x是横轴</span></span><br><span class=\"line\">      [-<span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">      [<span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">      [<span class=\"number\">1</span>, -<span class=\"number\">1</span>],</span><br><span class=\"line\">      [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>],</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_dy</span> = [</span><br><span class=\"line\">      [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>],</span><br><span class=\"line\">      [-<span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">      [<span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">      [<span class=\"number\">1</span>, -<span class=\"number\">1</span>],</span><br><span class=\"line\">    ];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next_step</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将蛇的状态变为走下一步</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> d = <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cell</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">r</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dr</span>[d], <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">c</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">dc</span>[d]);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">eye_direction</span> = d;  <span class=\"comment\">// 更新蛇头朝向</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = -<span class=\"number\">1</span>;  <span class=\"comment\">// 复原</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;move&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">step</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> k = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = k; i &gt; <span class=\"number\">0</span>; i--) &#123;  <span class=\"comment\">// 将所有节点向后移动一位，因为要在头节点前面插入新的头节点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i] = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i - <span class=\"number\">1</span>]));  <span class=\"comment\">// 注意要深层复制一份，还有一个细节是JS的数组越界不会出错</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"title function_\">check_next_valid</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>)) &#123;  <span class=\"comment\">// 下一步不合法</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;die&quot;</span>;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = <span class=\"string\">&quot;white&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">set_direction</span>(<span class=\"params\">d</span>) &#123;  <span class=\"comment\">// 由于未来不一定只会从键盘获取输入，因此实现一个接口修改direction</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">direction</span> = d;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_tail_increasing</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 检测当前回合蛇的长度是否增加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">step</span> &lt;= <span class=\"number\">7</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  <span class=\"comment\">// 前7回合每一回合长度都增加</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">step</span> % <span class=\"number\">3</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  <span class=\"comment\">// 之后每3回合增加一次长度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_move</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将头节点cells[0]向目标节点next_cell移动</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dx = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span>;  <span class=\"comment\">// 在x方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dy = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span>;  <span class=\"comment\">// 在y方向上与目的地的偏移量</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> distance = <span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(dx * dx + dy * dy);  <span class=\"comment\">// 与目的地的距离</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (distance &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 已经走到目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&quot;idle&quot;</span>;  <span class=\"comment\">// 状态变为静止</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>] = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>;  <span class=\"comment\">// 将头部更新为目标点</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_tail_increasing</span>()) &#123;  <span class=\"comment\">// 尾部没有变长则移动完成后要删去尾部</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> move_length = <span class=\"variable language_\">this</span>.<span class=\"property\">speed</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">timedelta</span> / <span class=\"number\">1000</span>;  <span class=\"comment\">// 每一帧移动的距离</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> cos_theta = dx / distance;  <span class=\"comment\">// cos值</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> sin_theta = dy / distance;  <span class=\"comment\">// sin值</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> += move_length * cos_theta;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> += move_length * sin_theta;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_tail_increasing</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> k = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[k - <span class=\"number\">1</span>], tail_target = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[k - <span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail_dx = tail_target.<span class=\"property\">x</span> - tail.<span class=\"property\">x</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> tail_dy = tail_target.<span class=\"property\">y</span> - tail.<span class=\"property\">y</span>;</span><br><span class=\"line\">        tail.<span class=\"property\">x</span> += move_length * tail_dx / distance;  <span class=\"comment\">// 此处就不分开计算cos和sin了</span></span><br><span class=\"line\">        tail.<span class=\"property\">y</span> += move_length * tail_dy / distance;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&quot;move&quot;</span>) &#123;  <span class=\"comment\">// 只有移动状态才执行update_move函数</span></span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_move</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> L = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">L</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> ctx = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">ctx</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> cell <span class=\"keyword\">of</span> <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>) &#123;</span><br><span class=\"line\">      ctx.<span class=\"title function_\">beginPath</span>();</span><br><span class=\"line\">      ctx.<span class=\"title function_\">arc</span>(cell.<span class=\"property\">x</span> * L, cell.<span class=\"property\">y</span> * L, L * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>);</span><br><span class=\"line\">      ctx.<span class=\"title function_\">fill</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将相邻的两个球连在一起</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> a = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i - <span class=\"number\">1</span>], b = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span> &amp;&amp; <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">y</span> - b.<span class=\"property\">y</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 上下排列，即x相同，左上角的点的y值为两者的最小值，因为越往上y越小</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">fillRect</span>((a.<span class=\"property\">x</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>) * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(a.<span class=\"property\">y</span>, b.<span class=\"property\">y</span>) * L, <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">y</span> - b.<span class=\"property\">y</span>) * L);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">// 左右排列，画法同理</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">fillRect</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(a.<span class=\"property\">x</span>, b.<span class=\"property\">x</span>) * L, (a.<span class=\"property\">y</span> - <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span>) * L, <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(a.<span class=\"property\">x</span> - b.<span class=\"property\">x</span>) * L, <span class=\"number\">2</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * L);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">eye_color</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++) &#123;  <span class=\"comment\">// 绘制两个眼睛</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> eye_x = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">eye_dx</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">eye_direction</span>][i] * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * <span class=\"number\">0.4</span>;  <span class=\"comment\">// 偏移距离为半径长度的0.4倍</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> eye_y = <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">eye_dy</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">eye_direction</span>][i] * <span class=\"variable language_\">this</span>.<span class=\"property\">radius</span> * <span class=\"number\">0.4</span>;</span><br><span class=\"line\">      ctx.<span class=\"title function_\">beginPath</span>();</span><br><span class=\"line\">      ctx.<span class=\"title function_\">arc</span>(eye_x * L, eye_y * L, <span class=\"variable language_\">this</span>.<span class=\"property\">eye_radius</span> * L, <span class=\"number\">0</span>, <span class=\"title class_\">Math</span>.<span class=\"property\">PI</span> * <span class=\"number\">2</span>);</span><br><span class=\"line\">      ctx.<span class=\"title function_\">fill</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们可以将 <code>next_step()</code> 中的 <code>this.direction = -1;</code> 还有 <code>update_move()</code> 中的 <code>this.status = &quot;idle&quot;;</code> 注释掉，并在 <code>update_move()</code> 中的 <code>if (distance &lt; this.eps)</code> 判断中添加一行 <code>this.next_step();</code>，这样就可以从回合制改为连续移动：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (distance &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">eps</span>) &#123;  <span class=\"comment\">// 已经走到目标点</span></span><br><span class=\"line\">  <span class=\"comment\">// this.status = &quot;idle&quot;;  // 状态变为静止</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>[<span class=\"number\">0</span>] = <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span>;  <span class=\"comment\">// 将头部更新为目标点</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">next_cell</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">next_step</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_tail_increasing</span>()) &#123;  <span class=\"comment\">// 尾部没有变长则移动完成后要删去尾部</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cells</span>.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/54295.html",
            "url": "https://asanosaki.github.io/posts/54295.html",
            "title": "SpringBoot学习笔记-创建菜单与游戏页面（上）",
            "date_published": "2023-11-11T11:19:00.000Z",
            "content_html": "<blockquote>\n<p>本节内容为实现游戏界面的导航栏功能以及游戏地图的随机生成功能。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-页面创建与导航栏实现\">1. 页面创建与导航栏实现</h2>\n<p>首先我们解除一下 Vue 的文件驼峰命名检查，在前端的根目录 <code>web</code> 下的 <code>package.json</code> 文件的 <code>rules</code> 中添加一行代码，然后重启前端项目：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;vue/multi-word-component-names&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;off&quot;</span></span><br></pre></td></tr></table></figure>\n<p>我们先在 <code>src/views</code> 目录下创建每个页面的组件存放的目录：<code>pk</code>、<code>record</code>、<code>ranklist</code>、<code>user/mybots</code>、<code>error</code>，分别表示对战页面、对战记录页面、排行榜页面、我的 Bots 页面、报错页面。然后在这些目录中分别创建对应的索引页面组件：<code>PKIndexView.vue</code>、<code>RecordIndexView.vue</code>、<code>RanklistIndexView.vue</code>、<code>MyBotsIndexView.vue</code>、<code>NotFoundView.vue</code>（之后组件称呼也可能不带 <code>.vue</code> 后缀），每个页面参照以下代码先初始化：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Card</span>&gt;</span></span><br><span class=\"line\">    对战</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Card</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">Card</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/Card.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Card</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>其中 <code>Card</code> 组件我们创建在 <code>src/components</code> 目录下，实现的效果是将内容包裹在一个卡片中，内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;card-body&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接下来我们需要设置路由，即根据不同的 URL 渲染不同的组件，Vue 的路由在 <code>src/router</code> 目录下的 <code>index.js</code> 文件中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">PKIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/pk/PKIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RecordIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/record/RecordIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RanklistIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/ranklist/RanklistIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">MyBotsIndexView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/user/mybots/MyBotsIndexView&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">NotFoundView</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/views/error/NotFoundView&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/pk/&quot;</span>,  <span class=\"comment\">// 如果是根路径则重定向到对战页面</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/pk/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;pk_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">PKIndexView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/record/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;record_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">RecordIndexView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/ranklist/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;ranklist_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">RanklistIndexView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/user/mybots/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;user_mybots_index&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">MyBotsIndexView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/404/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;404&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">component</span>: <span class=\"title class_\">NotFoundView</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&quot;/:catchAll(.*)&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;others&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">redirect</span>: <span class=\"string\">&quot;/404/&quot;</span>,  <span class=\"comment\">// 如果不是以上路径之一说明不合法，重定向到404页面</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<p>在 <code>src/components</code> 目录下创建导航栏组件 <code>NavBar</code>，然后可以通过 Bootstrap 快速构建一个导航栏。</p>\n<p>首先在根 JS 文件 <code>src/main.js</code> 中引入 Bootstrap：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./App.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;./router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./store&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;bootstrap/dist/css/bootstrap.css&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;bootstrap/dist/js/bootstrap&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>).<span class=\"title function_\">use</span>(store).<span class=\"title function_\">use</span>(router).<span class=\"title function_\">mount</span>(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>这时候会报错，提示我们没有找到模块 <code>@popperjs/core</code>，这时我们需要去项目管理页面的依赖页面中安装 <code>@popperjs/core</code> 依赖。</p>\n<p>然后我们实现导航栏 <code>NavBar</code>，其中我们使用 <code>&lt;router-link&gt;</code> 标签替代 <code>&lt;a&gt;</code> 标签可以将后端渲染改成前端渲染：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-brand&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;home&#x27; &#125;&quot;</span>&gt;</span>King of Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarText&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav me-auto mb-2 mb-lg-0&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">aria-current</span>=<span class=\"string\">&quot;page&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;pk_index&#x27; &#125;&quot;</span>&gt;</span>对战<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;record_index&#x27; &#125;&quot;</span>&gt;</span>对局列表<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;ranklist_index&#x27; &#125;&quot;</span>&gt;</span>排行榜<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item dropdown&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-link dropdown-toggle&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">data-bs-toggle</span>=<span class=\"string\">&quot;dropdown&quot;</span> <span class=\"attr\">aria-expanded</span>=<span class=\"string\">&quot;false&quot;</span>&gt;</span></span><br><span class=\"line\">              AsanoSaki</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;user_mybots_index&#x27; &#125;&quot;</span>&gt;</span>My Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-divider&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-item&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>退出<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-导航栏高亮功能\">2. 导航栏高亮功能</h2>\n<p>我们可以判断当前在哪个页面，将对应的导航栏图标高亮，高亮的实现是在对应的标签中添加 <code>active</code> 类。因此我们需要取得当前页面，可以用 <code>vue-router</code> 中的 <code>useRoute</code> 实现，然后通过 <code>computed</code> 实时计算其 <code>name</code> 是什么。在 HTML 标签中如果我们想让某个属性的值是一个表达式可以加一个 <code>:</code>，例如将 <code>class</code> 改成 <code>:class</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-brand&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;home&#x27; &#125;&quot;</span>&gt;</span>King of Bots<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;collapse navbar-collapse&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;navbarText&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navbar-nav me-auto mb-2 mb-lg-0&quot;</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;route_name == &#x27;pk_index&#x27; ? &#x27;nav-link active&#x27; : &#x27;nav-link&#x27;&quot;</span> <span class=\"attr\">aria-current</span>=<span class=\"string\">&quot;page&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;pk_index&#x27; &#125;&quot;</span>&gt;</span>对战<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;route_name == &#x27;record_index&#x27; ? &#x27;nav-link active&#x27; : &#x27;nav-link&#x27;&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;record_index&#x27; &#125;&quot;</span>&gt;</span>对局列表<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav-item&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;route_name == &#x27;ranklist_index&#x27; ? &#x27;nav-link active&#x27; : &#x27;nav-link&#x27;&quot;</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123; name: &#x27;ranklist_index&#x27; &#125;&quot;</span>&gt;</span>排行榜<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; useRoute &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> route = <span class=\"title function_\">useRoute</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> route_name = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> route.<span class=\"property\">name</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      route_name,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-运动目标基类实现\">3. 运动目标基类实现</h2>\n<p>看过 Django 或者 Web 笔记应该对这个概念不陌生了，游戏中运动的目标实现原理是利用浏览器每秒的刷新机制绘制若干帧图片，假设浏览器每秒钟刷新60次也就是60帧，那么 JS 的 <code>requestAnimationFrame(func)</code> 函数会在浏览器渲染下一帧前执行一遍 <code>func</code> 函数，然后我们在 <code>func</code> 函数内递归调用 <code>requestAnimationFrame</code> 函数即可实现每一帧执行一遍。</p>\n<p>我们在 <code>src/assets</code> 目录下创建 <code>scripts</code> 目录存放脚本文件，然后在该目录下创建 <code>AcGameObject.js</code> 文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">AC_GAME_OBJECTS</span> = []; <span class=\"comment\">// 存储所有运动对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable constant_\">AC_GAME_OBJECTS</span>.<span class=\"title function_\">push</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">timedelta</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 当前帧距离上一帧的时间间隔，浏览器每一帧时间间隔可能有误差不一样因此需要记录</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">has_called_start</span> = <span class=\"literal\">false</span>;  <span class=\"comment\">// 是否执行过start函数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 只在对象创建时执行一次</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 除了第一帧外每一帧执行一次</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">on_destroy</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 在删除对象之前可能需要执行的某些操作</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">destroy</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 将当前对象删除，即从AC_GAME_OBJECTS中移除</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">on_destroy</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> <span class=\"variable constant_\">AC_GAME_OBJECTS</span>) &#123;  <span class=\"comment\">// 用in遍历下标</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> obj = <span class=\"variable constant_\">AC_GAME_OBJECTS</span>[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (obj == <span class=\"variable language_\">this</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">AC_GAME_OBJECTS</span>.<span class=\"title function_\">splice</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> last_timestamp;  <span class=\"comment\">// 上一帧执行的时刻</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">step</span> = (<span class=\"params\">timestamp</span>) =&gt; &#123;  <span class=\"comment\">// 每次调用会传入当前时刻</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> obj <span class=\"keyword\">of</span> <span class=\"variable constant_\">AC_GAME_OBJECTS</span>) &#123;  <span class=\"comment\">// 用of遍历值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj.<span class=\"property\">has_called_start</span>) &#123;</span><br><span class=\"line\">      obj.<span class=\"title function_\">start</span>();</span><br><span class=\"line\">      obj.<span class=\"property\">has_called_start</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      obj.<span class=\"property\">timedelta</span> = timestamp - last_timestamp;</span><br><span class=\"line\">      obj.<span class=\"title function_\">update</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  last_timestamp = timestamp;</span><br><span class=\"line\">  <span class=\"title function_\">requestAnimationFrame</span>(step);  <span class=\"comment\">// 递归调用</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">requestAnimationFrame</span>(step);</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-游戏地图随机生成\">4. 游戏地图随机生成</h2>\n<p>我们设置一个正方形的游戏地图，最外围一圈为障碍物，中间的区域随机生成几个障碍物，因为需要具备公平性因此障碍物需要对称设计，左下角和右上角为两名玩家的起始位置。</p>\n<p>地图和障碍物每帧都需要渲染（render）一遍，首先在 <code>scripts</code> 目录下创建 <code>GameMap.js</code> 表示游戏地图的对象，我们在设计的时候需要用相对距离，要能够根据网页的变化动态调整画布的大小，假设我们的地图是13*13个单位的大小，可以用 <code>L</code> 表示一个单位的长度：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span> = ctx;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">parent</span> = parent;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 一个单位的绝对长度</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>PKIndexView</code> 中需要存一个东西叫做游戏区域，我们也可以将其写成一个组件，在 <code>components</code> 目录下创建 <code>PlayGround</code> 组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;playground&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">GameMap</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/components/GameMap.vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">components</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">GameMap</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.playground</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">width</span>: <span class=\"number\">60vw</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">height</span>: <span class=\"number\">70vh</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">margin</span>: <span class=\"number\">40px</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>由于游戏区域可能不仅只有地图，还可能有记分板之类的组件，因此我们再创建一个单独的地图组件 <code>GameMap</code>，地图是绘制在 Canvas 上的，可以使用 HTML 标签 <code>&lt;canvas&gt;</code> 实现，然后我们要引入之前创建的 <code>GameMap.js</code> 中的对象，在标签中使用 <code>ref</code> 属性可以让标签和我们定义的对象关联在一起，组件挂载完后我们需要创建游戏地图对象，可以用 <code>onMounted</code> 实现，表示组件挂载完后需要执行的操作：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;parent&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;gamemap&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;canvas&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref, onMounted &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">GameMap</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;@/assets/scripts/GameMap&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> parent = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> canvas = <span class=\"title function_\">ref</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">onMounted</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">new</span> <span class=\"title class_\">GameMap</span>(canvas.<span class=\"property\">value</span>.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>), parent.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      parent,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      canvas,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.gamemap</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样在 <code>GameMap.js</code> 中我们就可以动态计算画布区域的大小了，我们需要求出 <code>PlayGround</code> 组件的区域中面积最大的正方形区域（该组件的长宽会随浏览器大小的变化而变化）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span> = ctx;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">parent</span> = parent;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> = <span class=\"number\">0</span>;  <span class=\"comment\">// 一个单位的绝对长度</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> = <span class=\"number\">13</span>;  <span class=\"comment\">// 地图的行数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> = <span class=\"number\">13</span>;  <span class=\"comment\">// 地图的列数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_size</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 每一帧更新地图大小</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">parent</span>.<span class=\"property\">clientWidth</span> / <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">parent</span>.<span class=\"property\">clientHeight</span> / <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>));</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"property\">width</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"property\">height</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">L</span> * <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">update_size</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">fillStyle</span> = <span class=\"string\">&quot;green&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"title function_\">fillRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"property\">width</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">canvas</span>.<span class=\"property\">height</span>);  <span class=\"comment\">// 参数分别表示左上角横纵坐标和边长</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们要绘制地图的每一个格子，相邻的格子采用深浅不一样的绿色绘制，可以判断格子的横纵坐标相加的奇偶来区分：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_size</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 每一帧更新地图大小</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> color_even = <span class=\"string\">&quot;#AAD752&quot;</span>, color_odd = <span class=\"string\">&quot;#A2D048&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r = <span class=\"number\">0</span>; r &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>; r++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((r + c) % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">fillStyle</span> = color_even;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"property\">fillStyle</span> = color_odd;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// canvas坐标系横轴是x，纵轴是y，与数组坐标系不同</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">ctx</span>.<span class=\"title function_\">fillRect</span>(c * <span class=\"variable language_\">this</span>.<span class=\"property\">L</span>, r * <span class=\"variable language_\">this</span>.<span class=\"property\">L</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">L</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">L</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们创建障碍物对象，在 <code>scripts</code> 目录下创建 <code>Wall.js</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Wall</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">r, c, gamemap</span>) &#123;  <span class=\"comment\">// 需要传入第几行第几列以及GameMap</span></span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> = r;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">c</span> = c;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span> = gamemap;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = <span class=\"string\">&quot;#B47226&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">render</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> L = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">L</span>, ctx = <span class=\"variable language_\">this</span>.<span class=\"property\">gamemap</span>.<span class=\"property\">ctx</span>;</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">    ctx.<span class=\"title function_\">fillRect</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">c</span> * L, <span class=\"variable language_\">this</span>.<span class=\"property\">r</span> * L, L, L);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接着我们在 <code>GameMap.js</code> 中即可将障碍物绘制出来，我们创建 <code>Wall</code> 对象是在创建完 <code>GameMap</code> 对象之后进行的，根据 <code>AcGameObject</code> 的定义，<code>Wall</code> 每次会在 <code>GameMap</code> 之后刷新，因此会覆盖 <code>GameMap</code>。此处我们还需要判断两名玩家的出生地即左下角和右上角不能被障碍物覆盖，且两名玩家必须要连通：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AcGameObject</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./AcGameObject&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Wall</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Wall&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameMap</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AcGameObject</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">ctx, parent</span>) &#123;  <span class=\"comment\">// ctx表示画布，parent表示画布的父元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">super</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">inner_walls_count</span> = <span class=\"number\">20</span>;  <span class=\"comment\">// 地图内部的随机障碍物数量，需要是偶数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">walls</span> = [];  <span class=\"comment\">// 所有的障碍物</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">check_connectivity</span>(<span class=\"params\">g, sx, sy, tx, ty</span>) &#123;  <span class=\"comment\">// 用flood fill算法判断两名玩家是否连通</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sx == tx &amp;&amp; sy == ty) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    g[sx][sy] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dx = [-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>], dy = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nx = sx + dx[i], ny = sy + dy[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!g[nx][ny] &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"title function_\">check_connectivity</span>(g, nx, ny, tx, ty))  <span class=\"comment\">// 地图已经有边界标记了因此无需判断越界</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">create_walls</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> g = [];  <span class=\"comment\">// 表示每个位置是否是障碍物</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 初始化障碍物标记数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r = <span class=\"number\">0</span>; r &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>; r++) &#123;</span><br><span class=\"line\">      g[r] = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>; c++) &#123;</span><br><span class=\"line\">        g[r][c] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 给地图四周加上障碍物</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r = <span class=\"number\">0</span>; r &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>; r++) &#123;</span><br><span class=\"line\">      g[r][<span class=\"number\">0</span>] = g[r][<span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>; c++) &#123;</span><br><span class=\"line\">      g[<span class=\"number\">0</span>][c] = g[<span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">1</span>][c] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 添加地图内部的随机障碍物，需要有对称性因此枚举一半即可，另一半对称生成</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">inner_walls_count</span> / <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10000</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> r = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> c = <span class=\"built_in\">parseInt</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (g[r][c] || g[c][r]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (r == <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">2</span> &amp;&amp; c == <span class=\"number\">1</span> || r == <span class=\"number\">1</span> &amp;&amp; c == <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">2</span>) <span class=\"keyword\">continue</span>;  <span class=\"comment\">// 判断是否覆盖到出生地</span></span><br><span class=\"line\">        g[r][c] = g[c][r] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> g_copy = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(g));  <span class=\"comment\">// 复制一份g，可以先转换成json再转回来就是一份新的了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title function_\">check_connectivity</span>(g_copy, <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span> - <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span> - <span class=\"number\">2</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建障碍物</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> r = <span class=\"number\">0</span>; r &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">rows</span>; r++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> c = <span class=\"number\">0</span>; c &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">cols</span>; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (g[r][c]) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">walls</span>.<span class=\"title function_\">push</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Wall</span>(r, c, <span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;  <span class=\"comment\">// 暴力枚举直至生成合法的地图</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"title function_\">create_walls</span>())</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update_size</span>(<span class=\"params\"></span>) &#123;  <span class=\"comment\">// 每一帧更新地图大小</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">update</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后我们将网页的图标替换一下，将 LOGO 图标命名为 <code>favicon.ico</code> 然后替换掉 <code>public</code> 目录下的 <code>favicon.ico</code> 即可。然后修改一下网页的标题，如果 <code>public</code> 目录下的 <code>index.html</code> 中的标题为 <code>&lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</code>，那么可以通过修改根目录的 <code>vue.config.js</code> 来修改标题，添加 <code>chainWebpack</code> 配置：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; defineConfig &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;@vue/cli-service&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">transpileDependencies</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">chainWebpack</span>: <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    config.<span class=\"title function_\">plugin</span>(<span class=\"string\">&quot;html&quot;</span>).<span class=\"title function_\">tap</span>(<span class=\"function\">(<span class=\"params\">args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      args[<span class=\"number\">0</span>].<span class=\"property\">title</span> = <span class=\"string\">&quot;King of Bots&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> args;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>修改后重启一下 Vue 即可。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/34589.html",
            "url": "https://asanosaki.github.io/posts/34589.html",
            "title": "SpringBoot学习笔记-项目初始化",
            "date_published": "2023-11-10T14:58:00.000Z",
            "content_html": "<blockquote>\n<p>本文记录 SpringBoot 的学习过程。<br>\nSpringBoot 官方文档：<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\">Spring Boot Reference Documentation</a>。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-概念与项目介绍\">1. 概念与项目介绍</h2>\n<p>本次开发的项目名称为 King of Bots，在本地采用 IDEA 开发，项目前后端分离，可以部署在不同的服务器上，前端使用 Vue 开发，后端使用 SpringBoot 开发。</p>\n<p>用户通过客户端（Client）向服务器端（Server）发送一个 URL 请求，服务器端接收到请求后会向客户端返回一个 Web 页面（本质上是返回一个 HTML 字符串，浏览器会将这个字符串解析成网页）。</p>\n<p>前后端分离是指客户端第一次访问项目时就从 Web 服务器端获取到所有静态文件，然后每次给后端发送请求时后端只返回数据，然后由前端根据数据进行渲染（动态拼接字符串）页面。</p>\n<p>MVC，全称为 Model-View-Controller（模型-视图-控制器），是一种软件架构模式，其目标是将软件的用户界面（即前台页面）和业务逻辑分离，使代码具有更高的可扩展性、可复用性、可维护性以及灵活性。以下是对 MVC 各部分的详细解释：</p>\n<ul>\n<li>模型（Model）：模型是应用程序中用于处理应用程序<strong>数据逻辑</strong>的部分。通常模型对象负责在数据库中存取数据。模型就是业务流程/状态的处理以及业务规则的制定。</li>\n<li>视图（View）：视图是应用程序中处理<strong>数据显示</strong>的部分。通常视图是依据模型数据创建的。视图代表用户交互界面，对于 Web 应用来说，可以概括为 HTML 界面，但有可能为 XHTML、XML 和 Applet。</li>\n<li>控制器（Controller）：控制器是应用程序中处理<strong>用户交互</strong>的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。控制可以理解为从用户接收请求，将模型与视图匹配在一起，共同完成用户的请求。</li>\n</ul>\n<h2 id=\"2-创建SpringBoot项目后端\">2. 创建SpringBoot项目后端</h2>\n<p>首先我们创建项目的主目录 <code>king_of_bots</code>，然后可以初始化一下 Git。</p>\n<p>然后使用 IDEA 在 <code>king_of_bots</code> 目录下创建项目的后端，在新建项目的界面中可以在左侧看到 <code>Spring Initializr</code>，里面提供了一个官方网址：<a href=\"https://start.spring.io/\">Spring Initializr</a>，但是这个网站有时候可能不稳定连不上，如果连不上可以换成 <code>https://start.aliyun.com</code>，但是可能版本会稍微旧一点。</p>\n<p>项目配置内容中的组（Group）名设置为 <code>com.kob</code>，工件（Artifact）名设置为 <code>backend</code>，即表示我们项目的后端，使用 JDK 1.8 的版本，类型（Type）处选择 <code>Maven</code> 管理项目。点击下一步后选择 SpringBoot 版本为 2.7.X，如果用 SpringBoot 3 需要 Java 17，依赖选上 Web 中的 Spring Web 即可，然后可以再选上 Template Engines 中的 Thymeleaf（只是用于演示前后端不分离的写法）。最后点击创建即可。</p>\n<p>第一次创建好项目后还需要一段时间安装相关的环境，<code>src/main/java/com.kob.backend</code> 中即可看到我们后端项目的入口文件 <code>BackendApplication</code>，运行后可以看到输出显示将服务启动到了本地的8080端口，这时我们访问 <code>http://localhost:8080/</code>，看到 <code>Whitelabel Error Page</code> 页面说明启动成功了。</p>\n<h2 id=\"3-前后端不分离开发方式\">3. 前后端不分离开发方式</h2>\n<p>我们之前说过客户端的一个 URL 请求一般就是对应后端的一个函数调用，我们在 <code>com.kob.backend</code> 包下新建一个 <code>controller</code> 包，用来存储我们所有的后端函数。</p>\n<p>假设我们现在要创建一个对战页面，我们就在 <code>controller</code> 包中继续创建一个 <code>pk</code> 包，然后在该包下创建 <code>IndexController.java</code> 文件。如果需要将函数变成 URL 对应的函数需要加上 <code>@Controller</code> 注解，我们这个 Controller 的所有函数应该都在 <code>http://localhost:8080/pk/</code> 链接下，因此我们可以加上 <code>@RequestMapping</code> 注解设置父目录：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/pk/&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IndexController</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果我们的函数想要返回一个页面，需要把页面创建在 <code>/src/main/resources/templates</code> 目录下，我们先在该目录下创建 <code>pk</code> 目录，然后进去创建一个 <code>index.html</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我们每个函数都可以返回一个 HTML 文件的路径，这个路径从 <code>templates</code> 目录后开始写，对于每个函数都可以指定 <code>@RequestMapping</code> 注解，例如  <code>@RequestMapping(&quot;index/&quot;)</code> 就表示访问 <code>http://localhost:8080/pk/index/</code> 会调用这个函数，我们实现不加任何子目录的链接返回 <code>index.html</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/pk/&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IndexController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">index</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;pk/index.html&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们重启一下项目，然后访问 <code>http://localhost:8080/pk/</code> 即可看到我们的页面。</p>\n<p>假设我们有一张图片 <code>logo.png</code> 存放在 <code>resources</code> 目录下的 <code>static/image</code> 目录中，那么我们可以在 <code>index.html</code> 中使用（注意路径从 <code>static</code> 目录后开始写）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/image/logo.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-前后端分离开发方式\">4. 前后端分离开发方式</h2>\n<p>如果是前后端分离的开发方式，那么后端就不再是返回一个 HTML 页面了，而是返回一些数据。</p>\n<p>在 <code>pk</code> 包下创建一个 <code>BotInfoController</code> 类，表示返回 Bot 信息，这时我们需要用的是 <code>@RestController</code> 注解：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/pk/&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BotInfoController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;getbotinfo/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getBotInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Bot 1&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在访问链接 <code>http://localhost:8080/pk/getbotinfo/</code> 即可看到网页显示的字符串信息。</p>\n<p>在 <code>resources</code> 目录下可以看到一个 <code>application.properties</code> 文件，如果是用 Spring 的默认网址创建的项目，这个文件内容是空的，如果是用阿里云的网址创建项目那么这个文件会自带一些内容，其中有个 <code>server.port=8080</code> 表示项目启动的端口号，我们可以修改这个端口号，防止和 Vue 的默认端口冲突。现在我们的该文件是空的，因此直接加一行 <code>server.port=3000</code> 即可。</p>\n<h2 id=\"5-创建Vue项目前端\">5. 创建Vue项目前端</h2>\n<p>我们的前端使用 Vue 在 VS Code 中开发，Vue 的安装配置以及基本教程可见：<a href=\"/posts/54619.html\">Web 学习笔记-Vue3（环境配置、概念、整体布局设计）</a>。</p>\n<p>我们通过 Vue UI 在项目根目录下创建 Vue 前端项目，我们先创建 Web 端名为 <code>web</code>，创建好后记得装上插件 <code>vue-router</code> 和 <code>vuex</code> 以及依赖 <code>bootstrap</code> 和 <code>jquery</code>。然后再创建 AcApp 端名为 <code>acapp</code>，AcApp 端只需要安装一个 <code>vuex</code> 插件即可。</p>\n<p>使用 VS Code 打开 <code>web</code> 目录，先将 <code>src/router/index.js</code> 中的 <code>createWebHashHistory</code> 改成 <code>createWebHistory</code>，这样网页的链接就可以不用加上 <code>#</code>。然后我们删去没用的代码，将 <code>src/views</code> 以及 <code>src/components</code> 目录下的文件删去，<code>App.vue</code> 改成以下内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后将 <code>src/router/index.js</code> 改成以下内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title function_\">createWebHistory</span>(),</span><br><span class=\"line\">  routes,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<p>现在运行一下 Web 端代码（在 Vue UI 中的 Tasks 选项卡中）即可成功运行。</p>\n<h2 id=\"6-前后端通信\">6. 前后端通信</h2>\n<p>我们在 <code>BotInfoController</code> 中返回一个 <code>Map</code> 对象的信息：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.controller.pk;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/pk/&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BotInfoController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;getbotinfo/&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Map&lt;String, String&gt; <span class=\"title function_\">getBotInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; bot = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        bot.put(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;tiger&quot;</span>);</span><br><span class=\"line\">        bot.put(<span class=\"string\">&quot;rating&quot;</span>, <span class=\"string\">&quot;1500&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后我们在前端 <code>App.vue</code> 中使用 Ajax 向这个链接发起请求，获得数据后显示出来：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Bot 名字：&#123;&#123; bot_name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>Bot 战斗力：&#123;&#123; bot_rating &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> $ <span class=\"keyword\">from</span> <span class=\"string\">&quot;jquery&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"attr\">name</span>: <span class=\"string\">&quot;App&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> bot_name = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> bot_rating = <span class=\"title function_\">ref</span>(<span class=\"string\">&quot;&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    $.<span class=\"title function_\">ajax</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">url</span>: <span class=\"string\">&quot;http://localhost:3000/pk/getbotinfo/&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">type</span>: <span class=\"string\">&quot;GET&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">resp</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        bot_name.<span class=\"property\">value</span> = resp.<span class=\"property\">name</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        bot_rating.<span class=\"property\">value</span> = resp.<span class=\"property\">rating</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      bot_name,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      bot_rating,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>目前在 Vue3 中，与后端进行通信的主流方式是使用 Axios。Axios 是基于 Promise 的（JS 中的一个对象，用于处理异步操作的结果），可以解决 Ajax 嵌套问题，将原生的 Ajax 的嵌套转换为链式结构，解决了传统的回调地狱（在编写异步 JS 代码时，回调函数嵌套的现象越来越深，导致代码的可读性变差、维护性变差、复杂度增加、错误率增加等问题）。因此，你可以认为 Axios 是一种更先进的 Ajax 替代方案，在前后端项目中使用 Axios 来执行异步请求是一个很好的选择。</p>\n<p>要使用 Axios 需要先安装 <code>axios</code> 依赖，然后按如下方式发送请求：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">axios.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;http://localhost:3000/pk/getbotinfo/&quot;</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span> &#123;</span><br><span class=\"line\">    bot_name.<span class=\"property\">value</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">name</span>;</span><br><span class=\"line\">    bot_rating.<span class=\"property\">value</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rating</span>;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>这时候我们打开浏览器的控制台，应该会看到出现了跨域问题：<code>Access to XMLHttpRequest at 'http://localhost:3000/pk/getbotinfo/' ......</code>，这是因为我们的前端在8080端口，而后端在3000端口，因此两个域名不一样导致跨域问题。</p>\n<p>在后端的根包 <code>com.kob.backend</code> 下创建一个 <code>config</code> 包，然后在这个包中创建一个 <code>CorsConfig</code> 类，内容如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Filter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest req, ServletResponse res, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">        <span class=\"type\">HttpServletResponse</span> <span class=\"variable\">response</span> <span class=\"operator\">=</span> (HttpServletResponse) res;</span><br><span class=\"line\">        <span class=\"type\">HttpServletRequest</span> <span class=\"variable\">request</span> <span class=\"operator\">=</span> (HttpServletRequest) req;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">origin</span> <span class=\"operator\">=</span> request.getHeader(<span class=\"string\">&quot;Origin&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (origin != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>, origin);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">headers</span> <span class=\"operator\">=</span> request.getHeader(<span class=\"string\">&quot;Access-Control-Request-Headers&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (headers != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Access-Control-Allow-Headers&quot;</span>, headers);</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Access-Control-Expose-Headers&quot;</span>, headers);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        response.setHeader(<span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">        response.setHeader(<span class=\"string\">&quot;Access-Control-Max-Age&quot;</span>, <span class=\"string\">&quot;3600&quot;</span>);</span><br><span class=\"line\">        response.setHeader(<span class=\"string\">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        chain.doFilter(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此时重启一下后端即可在前端接收数据并在网页中显示出来。</p>\n<p>如果添加了以上代码无法解决跨域问题可以尝试改成以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kob.backend.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CorsConfig</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CorsFilter <span class=\"title function_\">corsFilter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">UrlBasedCorsConfigurationSource</span> <span class=\"variable\">urlBasedCorsConfigurationSource</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UrlBasedCorsConfigurationSource</span>();</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">CorsConfiguration</span> <span class=\"variable\">corsConfiguration</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CorsConfiguration</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        corsConfiguration.setAllowCredentials(<span class=\"literal\">true</span>);  <span class=\"comment\">// 是否允许请求带有验证信息</span></span><br><span class=\"line\">        corsConfiguration.addAllowedOriginPattern(<span class=\"string\">&quot;*&quot;</span>);  <span class=\"comment\">// 允许访问的客户端域名</span></span><br><span class=\"line\">        corsConfiguration.addAllowedHeader(<span class=\"string\">&quot;*&quot;</span>);  <span class=\"comment\">// 允许服务端访问的客户端请求头</span></span><br><span class=\"line\">        corsConfiguration.addAllowedMethod(<span class=\"string\">&quot;*&quot;</span>);  <span class=\"comment\">// 允许访问的方法名，如GET、POST等</span></span><br><span class=\"line\"></span><br><span class=\"line\">        urlBasedCorsConfigurationSource.registerCorsConfiguration(<span class=\"string\">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CorsFilter</span>(urlBasedCorsConfigurationSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后我们再理一下运行流程，首先用户访问 <code>http://localhost:8080/</code> 进入前端的 Web 页面，这时候浏览器就会将 Vue 的所有前端静态文件缓存下来，然后浏览器就会执行到 Ajax/Axios 请求的代码，向后端发送一个请求，后端根据请求的地址 <code>http://localhost:3000/pk/getbotinfo/</code> 去查找 Controller 所匹配的路径，找到 <code>getBotInfo()</code> 方法后就会返回一个 <code>Map</code> 对象至前端，这个对象包含 <code>name</code> 和 <code>rating</code> 数据，浏览器接收到数据后就会将前端页面的 <code>bot_name</code> 和 <code>bot_rating</code> 更新成传过来的值。</p>\n<p>我们在 <code>web/src/assets</code> 目录下创建 <code>images</code> 目录，弄一个背景图片放进去，然后在 <code>App.vue</code> 中添加背景：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&quot;@/assets/images/background.png&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/62501.html",
            "url": "https://asanosaki.github.io/posts/62501.html",
            "title": "Java字符串与输入输出详解",
            "date_published": "2023-11-04T09:14:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 的反射机制，反射使我们摆脱了只能在编译时执行面向类型操作的限制，并且让我们能够编写一些非常强大的程序。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>本文将讨论 Java 是如何在<strong>运行时</strong>发现对象和类的信息的，这通常有两种形式：简单反射，它假定你在编译时就已经知道了所有可用的类型；以及更复杂的反射，它允许我们在运行时发现和使用类的信息。</p>\n<h2 id=\"1-为什么需要反射\">1. 为什么需要反射</h2>\n<p>面向对象编程的一个基本目标就是，让编写的代码只操纵<strong>基类</strong>的引用。我们来看下面这个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span> + <span class=\"string\">&quot;.draw()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Circle</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;Circle&quot;</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Square</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;Square&quot;</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Triangle</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Shape</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;Triangle&quot;</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Shapes</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Stream.of(<span class=\"keyword\">new</span> <span class=\"title class_\">Circle</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Square</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">Triangle</span>()).forEach(Shape::draw);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Circle.draw()</span></span><br><span class=\"line\"><span class=\"comment\">         * Square.draw()</span></span><br><span class=\"line\"><span class=\"comment\">         * Triangle.draw()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Shape</code> 接口中的方法 <code>draw()</code> 是可以<strong>动态绑定</strong>的，因此客户程序员可以通过泛化的 <code>Shape</code> 引用来调用具体的 <code>draw()</code> 方法。在所有子类中，<code>draw()</code> 都被重写，并且因为它是一个动态绑定的方法，即使通过泛化的 <code>Shape</code> 引用来调用它，也会产生正确的行为，这就是多态。</p>\n<p>基类里包含一个 <code>draw()</code> 方法，它通过将 <code>this</code> 传递给 <code>System.out.println()</code>，间接地使用了 <code>toString()</code> 方法来显示类的标识符（<code>toString()</code> 方法被声明为 <code>abstract</code> 的，这样就可以强制子类重写该方法，并防止没什么内容的 <code>Shape</code> 类被实例化）。</p>\n<p>在此示例中，将一个 <code>Shape</code> 的子类对象放入 <code>Stream&lt;Shape&gt;</code> 时，会发生隐式的向上转型，在向上转型为 <code>Shape</code> 时，这个对象的确切类型信息就丢失了，对于流来说，它们只是 <code>Shape</code> 类的对象。</p>\n<p>从技术上讲，<code>Stream&lt;Shape&gt;</code> 实际上将所有内容都当作 <code>Object</code> 保存。当一个元素被取出时，它会自动转回 <code>Shape</code>，这是反射最基本的形式，在运行时检查了所有的类型转换是否正确，这就是反射的意思：在运行时，确定对象的类型。</p>\n<p>在这里，反射类型转换并不彻底：<code>Object</code> 只是被转换成了 <code>Shape</code>，而没有转换为最终的 <code>Circle</code>、<code>Square</code> 或 <code>Triangle</code>。这是因为我们所能得到的信息就是，<code>Stream&lt;Shape&gt;</code> 里保存的都是 <code>Shape</code>，在编译时，这是由 <code>Stream</code> 和 Java 泛型系统强制保证的，而在运行时，类型转换操作会确保这一点。</p>\n<p>接下来就该多态上场了，<code>Shape</code> 对象实际上执行的代码，取决于引用是属于<code>Circle</code>、<code>Square</code> 还是 <code>Triangle</code>。一般来说，这是合理的：你希望自己的代码尽可能少地知道对象的确切类型信息，而只和这类对象的通用表示（在本例中为<code>Shape</code>）打交道。这样的话我们的代码就更易于编写、阅读和维护，并且设计也更易于实现、理解和更改。所以多态是面向对象编程的一个基本目标。</p>\n<h2 id=\"2-Class对象\">2. Class对象</h2>\n<p>要想了解 Java 中的反射是如何工作的，就必须先了解类型信息在运行时是如何表示的。这项工作是通过叫作 <code>Class</code> 对象的特殊对象来完成的，它包含了与类相关的信息。事实上，<code>Class</code> 对象被用来创建类的所有“常规”对象，Java 使用 <code>Class</code> 对象执行反射，即使是类型转换这样的操作也一样。<code>Class</code> 类还有许多其他使用反射的方式。</p>\n<p>程序中的每个类都有一个 <code>Class</code> 对象，也就是说，每次编写并编译一个新类时，都会生成一个 <code>Class</code> 对象（并被相应地存储在同名的 <code>.class</code> 文件中）。为了生成这个对象，Java 虚拟机（JVM）使用被称为<strong>类加载器</strong>（class loader）的子系统。</p>\n<p>类加载器子系统实际上可以包含一条类加载器链，但里面只会有一个原始类加载器，它是 JVM 实现的一部分。原始类加载器通常从本地磁盘加载所谓的可信类，包括 Java API 类。</p>\n<p>类在<strong>首次使用</strong>时才会被<strong>动态加载</strong>到 JVM 中。当程序第一次引用该类的<strong>静态成员</strong>时，就会触发这个类的加载（构造器是类的一个静态方法，尽管没有明确使用 <code>static</code> 关键字）。因此，使用 <code>new</code> 操作符创建类的新对象也算作对该类静态成员的引用，构造器的初次使用会导致该类的加载。</p>\n<p>所以，Java 程序在运行前并不会被完全加载，而是在必要时加载对应的部分，这与许多传统语言不同，这种动态加载能力使得 Java 可以支持很多行为。</p>\n<p>类加载器首先检查是否加载了该类型的 <code>Class</code> 对象，如果没有，默认的类加载器会定位到具有该名称的 <code>.class</code> 文件（例如，某个附加类加载器可能会在数据库中查找对应的字节码）。当该类的字节数据被加载时，它们会被<strong>验证</strong>，以确保没有被损坏，并且不包含恶意的 Java 代码（这是 Java 的众多安全防线里的一条）。</p>\n<p>一旦该类型的 <code>Class</code> 对象加载到内存中，它就会用于创建该类型的所有对象：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cookie</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Loading Cookie&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Gum</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Loading Gum&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Candy</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Loading Candy&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SweetShop</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Inside main&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;After creating Cookie&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class&lt;?&gt; c = Class.forName(<span class=\"string\">&quot;reflection.Gum&quot;</span>);  <span class=\"comment\">// 一定要完整类名，即包名+类名</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;c.getName(): &quot;</span> + c.getName());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;After Class.forName(reflection.Gum)&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Candy</span>();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;After creating Candy&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside main</span></span><br><span class=\"line\"><span class=\"comment\">         * Loading Cookie</span></span><br><span class=\"line\"><span class=\"comment\">         * After creating Cookie</span></span><br><span class=\"line\"><span class=\"comment\">         * Loading Gum</span></span><br><span class=\"line\"><span class=\"comment\">         * c.getName(): reflection.Gum</span></span><br><span class=\"line\"><span class=\"comment\">         * After Class.forName(reflection.Gum)</span></span><br><span class=\"line\"><span class=\"comment\">         * Loading Candy</span></span><br><span class=\"line\"><span class=\"comment\">         * After creating Candy</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们创建了三个具有静态代码块的类，该静态代码块会在第一次加载类时执行，输出的信息会告诉我们这个类是什么时候加载的。输出结果显示了 <code>Class</code> 对象仅在需要时才加载，并且静态代码块的初始化是在类加载时执行的。</p>\n<p>所有的 <code>Class</code> 对象都属于 <code>Class</code> 类，<code>Class</code> 对象和其他对象一样，因此你可以获取并操作它的引用（这也是加载器所做的）。静态的 <code>forName()</code> 方法可以获得 <code>Class</code> 对象的引用，该方法接收了一个包含所需类的文本名称（注意拼写和大小写，且需要是类的完全限定名称，即包括包名称）的字符串，并返回了一个 <code>Class</code> 引用。</p>\n<p>不管什么时候，只要在运行时用到类型信息，就必须首先获得相应的 <code>Class</code> 对象的引用，这时 <code>Class.forName()</code> 方法用起来就很方便了，因为不需要对应类型的对象就能获取 <code>Class</code> 引用。但是，如果已经有了一个你想要的类型的对象，就可以通过 <code>getClass()</code> 方法来获取 <code>Class</code> 引用，这个方法属于 <code>Object</code> 根类，它返回的 <code>Class</code> 引用表示了这个对象的实际类型。</p>\n<p><code>Class</code> 类有很多方法，下面是其中的一部分：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Waterproof</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Shoots</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Toy</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Toy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating Toy&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Toy</span><span class=\"params\">(<span class=\"type\">int</span> i)</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FancyToy</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Toy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Waterproof</span>, Shoots &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">FancyToy</span><span class=\"params\">()</span> &#123; <span class=\"built_in\">super</span>(<span class=\"number\">1</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassMethods</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printInfo</span><span class=\"params\">(Class c)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getName(): &quot;</span> + c.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isInterface(): &quot;</span> + c.isInterface());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getSimpleName(): &quot;</span> + c.getSimpleName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getCanonicalName(): &quot;</span> + c.getCanonicalName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Class&lt;?&gt; c = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            c = Class.forName(<span class=\"string\">&quot;reflection.FancyToy&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        printInfo(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Class iface: c.getInterfaces()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\">            printInfo(iface);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> c.getSuperclass();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">obj</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            obj = sc.newInstance();  <span class=\"comment\">// 对应类要有public的无参构造器</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;Can&#x27;t instantiate&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        printInfo(obj.getClass());  <span class=\"comment\">// obj.getClass()即为sc</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * getName(): reflection.FancyToy</span></span><br><span class=\"line\"><span class=\"comment\">         * isInterface(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * getSimpleName(): FancyToy</span></span><br><span class=\"line\"><span class=\"comment\">         * getCanonicalName(): reflection.FancyToy</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * getName(): reflection.Waterproof</span></span><br><span class=\"line\"><span class=\"comment\">         * isInterface(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * getSimpleName(): Waterproof</span></span><br><span class=\"line\"><span class=\"comment\">         * getCanonicalName(): reflection.Waterproof</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * getName(): reflection.Shoots</span></span><br><span class=\"line\"><span class=\"comment\">         * isInterface(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * getSimpleName(): Shoots</span></span><br><span class=\"line\"><span class=\"comment\">         * getCanonicalName(): reflection.Shoots</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating Toy</span></span><br><span class=\"line\"><span class=\"comment\">         * getName(): reflection.Toy</span></span><br><span class=\"line\"><span class=\"comment\">         * isInterface(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * getSimpleName(): Toy</span></span><br><span class=\"line\"><span class=\"comment\">         * getCanonicalName(): reflection.Toy</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>printInfo()</code> 方法使用 <code>getName()</code> 来生成完全限定的类名，使用 <code>getSimpleName()</code> 和 <code>getCanonicalName()</code> 分别生成不带包的名称和完全限定的名称，<code>isInterface()</code> 可以告诉你这个 <code>Class</code> 对象是否表示一个接口，<code>getInterfaces()</code> 方法返回了一个 <code>Class</code> 对象数组，它们表示所调用的 <code>Class</code> 对象的所有接口。还可以使用 <code>getSuperclass()</code> 来查询 <code>Class</code> 对象的直接基类，它将返回一个 <code>Class</code> 引用，而你可以对它做进一步查询。</p>\n<p><code>Class</code> 的 <code>newInstance()</code> 方法是实现<strong>虚拟构造器</strong>的一种途径，这相当于声明：我不知道你的确切类型，但无论如何你都要正确地创建自己。<code>sc</code> 只是一个 <code>Class</code> 引用，它在编译时没有更多的类型信息，当创建一个新实例时，你会得到一个 <code>Object</code> 引用，但该引用指向了一个 <code>Toy</code> 对象，你可以给它发送 <code>Object</code> 能接收的消息，但如果想要发送除此之外的其他消息，就必须进一步了解它，并进行某种类型转换。此外，使用 <code>Class.newInstance()</code> 创建的类必须有一个无参构造器。</p>\n<p>注意，此示例中的 <code>newInstance()</code> 在 Java 8 中还是正常的，但在更高版本中已被弃用，Java 推荐使用 <code>Constructor.newInstance()</code> 来代替。</p>\n<h3 id=\"2-1-类字面量\">2.1 类字面量</h3>\n<p>Java 还提供了另一种方式来生成 <code>Class</code> 对象的引用：类字面量。它看起来像这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FancyToy.class</span><br></pre></td></tr></table></figure>\n<p>这更简单也更安全，因为它会进行编译时检查（因此不必放在 <code>try</code> 块中），另外它还消除了对 <code>forName()</code> 方法的调用，所以效率也更高。</p>\n<p>注意，使用 <code>.class</code> 的形式创建 <code>Class</code> 对象的引用时，该 <code>Class</code> 对象不会自动初始化。实际上，在使用一个类之前，需要先执行以下三个步骤：</p>\n<ul>\n<li>加载：这是由类加载器执行的，该步骤会先找到字节码（通常在类路径中的磁盘上，但也不一定），然后从这些字节码中创建一个 <code>Class</code> 对象。</li>\n<li>链接：链接阶段会验证类中的字节码，为静态字段分配存储空间，并在必要时解析该类对其他类的所有引用。</li>\n<li>初始化：如果有基类的话，会先初始化基类，执行静态初始化器和静态初始化块。</li>\n</ul>\n<p>其中，初始化会被延迟到首次引用<strong>静态方法</strong>（构造器是隐式静态的）或<strong>非常量静态字段</strong>时：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">STATIC_FINAL</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initializing A&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initializing B&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassInitialization</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Inside main&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> A.class;  <span class=\"comment\">// 不会初始化</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;After creating A ref&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A.STATIC_FINAL: &quot;</span> + A.STATIC_FINAL);  <span class=\"comment\">// 还是不会初始化</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A.x: &quot;</span> + A.x);  <span class=\"comment\">// 初始化</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;reflection.B&quot;</span>);  <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;After creating B ref&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside main</span></span><br><span class=\"line\"><span class=\"comment\">         * After creating A ref</span></span><br><span class=\"line\"><span class=\"comment\">         * A.STATIC_FINAL: 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Initializing A</span></span><br><span class=\"line\"><span class=\"comment\">         * A.x: 2</span></span><br><span class=\"line\"><span class=\"comment\">         * Initializing B</span></span><br><span class=\"line\"><span class=\"comment\">         * After creating B ref</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>仅使用 <code>.class</code> 语法来获取对类的引用不会导致初始化，而 <code>Class.forName()</code> 会立即初始化类以产生 <code>Class</code> 引用。如果一个 <code>static final</code> 字段的值是<strong>编译时常量</strong>，比如 <code>A.STATIC_FINAL</code>，那么这个值不需要初始化 <code>A</code> 类就能读取。</p>\n<h3 id=\"2-2-泛型类的引用\">2.2 泛型类的引用</h3>\n<p><code>Class</code> 引用指向的是一个 <code>Class</code> 对象，该对象可以生成类的实例，并包含了这些实例所有方法的代码，它还包含该类的静态字段和静态方法，所以一个 <code>Class</code> 引用表示的就是它所指向的确切类型：<code>Class</code> 类的一个对象。</p>\n<p>我们可以使用泛型语法来限制 <code>Class</code> 引用的类型：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GenericClassReferences</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> <span class=\"type\">int</span>.class;</span><br><span class=\"line\">        c1 = <span class=\"type\">double</span>.class;  <span class=\"comment\">// 合法</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Class&lt;Integer&gt; c2 = <span class=\"type\">int</span>.class;</span><br><span class=\"line\">        c2 = Integer.class;  <span class=\"comment\">// 合法</span></span><br><span class=\"line\">        c2 = Double.class;  <span class=\"comment\">// 不合法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>泛化的类引用 <code>c2</code> 只能分配给其声明的类型，通过使用泛型语法，可以让编译器强制执行额外的类型检查。</p>\n<p>如果想放松使用泛化的 <code>Class</code> 引用时的限制，需要使用通配符 <code>?</code>，它是 Java 泛型的一部分，表示任何事物：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GenericClassReferences</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Class&lt;?&gt; c = Integer.class;</span><br><span class=\"line\">        c = Double.class;  <span class=\"comment\">// 合法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们不能这么写：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class&lt;Number&gt; c = Integer.class;</span><br></pre></td></tr></table></figure>\n<p>即使 <code>Integer</code> 继承自 <code>Number</code>，但是 <code>Integer</code> 的 <code>Class</code> 对象不是 <code>Number</code> 的 <code>Class</code> 对象的子类。</p>\n<p>如果想创建一个 <code>Class</code>引用，并将其限制为某个类型或<strong>任意子类型</strong>，可以将通配符与 <code>extends</code> 关键字组合来创建一个<strong>界限</strong>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GenericClassReferences</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Number</span>&gt; c = Integer.class;</span><br><span class=\"line\">        c = Double.class;  <span class=\"comment\">// 合法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将泛型语法添加到 <code>Class</code> 引用的一个原因是提供<strong>编译时的类型检查</strong>，这样的话，如果你做错了什么，那么很快就能发现。</p>\n<p>下面是一个使用了泛型类语法的示例，它存储了一个类引用，然后使用 <code>newInstance()</code> 来生成对象：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Supplier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">long</span> counter;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> counter++;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">People</span><span class=\"params\">()</span> &#123;&#125;  <span class=\"comment\">// 需要有public的无参构造器才能调用newInstance()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;People &quot;</span> + id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DynamicSupplier</span>&lt;T&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">Supplier</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Class&lt;T&gt; c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">DynamicSupplier</span><span class=\"params\">(Class&lt;T&gt; c)</span> &#123; <span class=\"built_in\">this</span>.c = c; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> T <span class=\"title function_\">get</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> c.getConstructor().newInstance();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Stream.generate(<span class=\"keyword\">new</span> <span class=\"title class_\">DynamicSupplier</span>&lt;&gt;(People.class))</span><br><span class=\"line\">            .skip(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * People 5</span></span><br><span class=\"line\"><span class=\"comment\">         * People 6</span></span><br><span class=\"line\"><span class=\"comment\">         * People 7</span></span><br><span class=\"line\"><span class=\"comment\">         * People 8</span></span><br><span class=\"line\"><span class=\"comment\">         * People 9</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>DynamicSupplier</code> 会强制要求它使用的任何类型都有一个 <code>public</code> 的无参构造器，如果不符合条件，就会抛出一个异常。在上面的例子中，<code>People</code> 类自动生成的无参构造器不是 <code>public</code> 的，因为 <code>People</code> 类不是 <code>public</code> 的，所以我们必须显式定义它。</p>\n<p>对 <code>Class</code> 对象使用泛型语法时，<code>newInstance()</code> 会返回对象的<strong>确切类型</strong>，而不仅仅是简单的 <code>Object</code>，但它也会受到一些限制：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Cat</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Kitty</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Cat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Kitty</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GenericCat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        Class&lt;Kitty&gt; kittyClass = Kitty.class;</span><br><span class=\"line\">        <span class=\"type\">Kitty</span> <span class=\"variable\">kitty</span> <span class=\"operator\">=</span> kittyClass.getConstructor().newInstance();</span><br><span class=\"line\">        System.out.println(kitty.getClass().getName());  <span class=\"comment\">// reflection.Kitty</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        Class&lt;Cat&gt; kittySuper = kittyClass.getSuperclass();  // 不合法</span></span><br><span class=\"line\">        Class&lt;? <span class=\"built_in\">super</span> Kitty&gt; kittySuper = kittyClass.getSuperclass();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">obj</span> <span class=\"operator\">=</span> kittySuper.getConstructor().newInstance();</span><br><span class=\"line\">        System.out.println(obj.getClass().getName());  <span class=\"comment\">// reflection.Cat</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你得到了 <code>Kitty</code> 的基类，那么编译器只允许你声明这个基类引用是 <code>Kitty</code> 的<strong>某个</strong>基类，即 <code>Class&lt;? super Kitty&gt;</code>，而不能被声明成 <code>Class&lt;Cat&gt;</code>，因为 <code>getSuperclass()</code> 返回了基类（不是接口），而编译器在编译时就知道这个基类是什么，在这里就是 <code>Cat.class</code>，而不仅仅是 <code>Kitty</code> 的某个基类。因为存在这种模糊性，所以 <code>kittySuper.getConstructor().newInstance()</code> 的返回值不是一个确切的类型，而只是一个 <code>Object</code>。</p>\n<h3 id=\"2-3-cast-方法\">2.3 cast()方法</h3>\n<p><code>cast()</code> 方法是用于 <code>Class</code> 引用的类型转换：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> reflection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">House</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BigHouse</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">House</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassCast</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">House</span> <span class=\"variable\">h</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BigHouse</span>();</span><br><span class=\"line\">        Class&lt;BigHouse&gt; bigHouseClass = BigHouse.class;</span><br><span class=\"line\">        <span class=\"type\">BigHouse</span> <span class=\"variable\">bh</span> <span class=\"operator\">=</span> bigHouseClass.cast(h);</span><br><span class=\"line\"><span class=\"comment\">//        BigHouse bh = (BigHouse)h;  // 这种方式更简洁</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>cast()</code> 方法接收参数对象并将其转换为 <code>Class</code> 引用的类型，在你不能使用普通类型转换（最后一行）的情况下很有用，如果你正在编写泛型代码并且存储了一个用于转型的 <code>Class</code> 引用，就可能会遇到这种情况，不过这很罕见。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/62502.html",
            "url": "https://asanosaki.github.io/posts/62502.html",
            "title": "Java字符串与输入输出详解",
            "date_published": "2023-11-02T08:09:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 中的字符串类以及输入输出的方式。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-不可变字符串String\">1. 不可变字符串String</h2>\n<p><code>String</code> 类的对象是不可变的，该类中每个看起来似乎会修改 <code>String</code> 值的方法，实际上都创建并返回了一个全新的 <code>String</code> 对象，该对象包含了修改的内容。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StringDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">upcase</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s.toUpperCase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Hello&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> upcase(s);</span><br><span class=\"line\">        System.out.println(s);  <span class=\"comment\">// Hello</span></span><br><span class=\"line\">        System.out.println(t);  <span class=\"comment\">// HELLO</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当 <code>s</code> 被传递给 <code>upcase()</code> 时，实际上传递的是 <code>s</code> 对象引用的一个<strong>副本</strong>，此引用所指向的对象只存在于单一的物理位置中，在传递时被复制的只是引用。</p>\n<p>在 <code>upcase()</code> 里，参数 <code>s</code> 只存活于这个方法的方法体里，当 <code>upcase()</code> 运行完成后，局部引用 <code>s</code> 就会消失。<code>upcase()</code> 返回执行的结果：一个指向新字符串的引用。</p>\n<h2 id=\"2-重载加法运算符与StringBuilder\">2. 重载加法运算符与StringBuilder</h2>\n<p>不变性可能会带来效率问题，一个典型的例子是操作符 <code>+</code>，它针对 <code>String</code> 对象做了重载（<code>String</code> 的 <code>+</code> 和 <code>+=</code> 是 Java 中仅有的被重载的操作符，Java 不允许程序员重载其他操作符，这与 C++ 不同）。操作符重载意味着在与特定类一起使用时，相应的操作具有额外的意义。</p>\n<p>假设我们有以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StringConcat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Hello&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> s + <span class=\"string\">&quot; world&quot;</span>;</span><br><span class=\"line\">        System.out.println(t);  <span class=\"comment\">// Hello world</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们可以使用 JDK 自带的 <code>javap</code> 工具反编译上述代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javap -c StringConcat</span><br></pre></td></tr></table></figure>\n<p>也可以在 IDEA 中编译代码后通过 <code>View -&gt; Show Bytecode</code> 选项查看，内容如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// class version 52.0 (52)</span></span><br><span class=\"line\"><span class=\"comment\">// access flags 0x21</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">string</span>/StringConcat &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// compiled from: StringConcat.java</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// access flags 0x1</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> &lt;init&gt;()V</span><br><span class=\"line\">   L0</span><br><span class=\"line\">    LINENUMBER <span class=\"number\">3</span> L0</span><br><span class=\"line\">    ALOAD <span class=\"number\">0</span></span><br><span class=\"line\">    INVOKESPECIAL java/lang/Object.&lt;init&gt; ()V</span><br><span class=\"line\">    RETURN</span><br><span class=\"line\">   L1</span><br><span class=\"line\">    LOCALVARIABLE <span class=\"built_in\">this</span> Lstring/StringConcat; L0 L1 <span class=\"number\">0</span></span><br><span class=\"line\">    MAXSTACK = <span class=\"number\">1</span></span><br><span class=\"line\">    MAXLOCALS = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// access flags 0x9</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title function_\">main</span><span class=\"params\">([Ljava/lang/String;)</span>V</span><br><span class=\"line\">   L0</span><br><span class=\"line\">    LINENUMBER <span class=\"number\">5</span> L0</span><br><span class=\"line\">    LDC <span class=\"string\">&quot;Hello&quot;</span></span><br><span class=\"line\">    ASTORE <span class=\"number\">1</span></span><br><span class=\"line\">   L1</span><br><span class=\"line\">    LINENUMBER <span class=\"number\">6</span> L1</span><br><span class=\"line\">    NEW java/lang/StringBuilder</span><br><span class=\"line\">    DUP</span><br><span class=\"line\">    INVOKESPECIAL java/lang/StringBuilder.&lt;init&gt; ()V</span><br><span class=\"line\">    ALOAD <span class=\"number\">1</span></span><br><span class=\"line\">    INVOKEVIRTUAL java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;</span><br><span class=\"line\">    LDC <span class=\"string\">&quot; world&quot;</span></span><br><span class=\"line\">    INVOKEVIRTUAL java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;</span><br><span class=\"line\">    INVOKEVIRTUAL java/lang/StringBuilder.toString ()Ljava/lang/String;</span><br><span class=\"line\">    ASTORE <span class=\"number\">2</span></span><br><span class=\"line\">   L2</span><br><span class=\"line\">    LINENUMBER <span class=\"number\">7</span> L2</span><br><span class=\"line\">    GETSTATIC java/lang/System.out : Ljava/io/PrintStream;</span><br><span class=\"line\">    ALOAD <span class=\"number\">2</span></span><br><span class=\"line\">    INVOKEVIRTUAL java/io/PrintStream.println (Ljava/lang/String;)V</span><br><span class=\"line\">   L3</span><br><span class=\"line\">    LINENUMBER <span class=\"number\">8</span> L3</span><br><span class=\"line\">    RETURN</span><br><span class=\"line\">   L4</span><br><span class=\"line\">    LOCALVARIABLE args [Ljava/lang/String; L0 L4 <span class=\"number\">0</span></span><br><span class=\"line\">    LOCALVARIABLE s Ljava/lang/String; L1 L4 <span class=\"number\">1</span></span><br><span class=\"line\">    LOCALVARIABLE t Ljava/lang/String; L2 L4 <span class=\"number\">2</span></span><br><span class=\"line\">    MAXSTACK = <span class=\"number\">2</span></span><br><span class=\"line\">    MAXLOCALS = <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>像 <code>DUP</code> 和 <code>INVOKEVIRTUAL</code> 这样的语句相当于 JVM 的汇编语言。这边不用看懂是什么意思，需要重点注意的是编译器对 <code>java.lang.StringBuilder</code> 类的引入，我们的代码中没有用到 <code>StringBuilder</code>，但编译器还是决定使用它，因为它的效率更高。</p>\n<p>在这里，编译器创建了一个 <code>StringBuilder</code> 对象来构建字符串，并为每个字符串调用了一次 <code>append()</code>，总共两次。最后，它调用了 <code>toString()</code> 来生成结果，并将其存为 <code>t</code>（使用 <code>ASTORE 2</code> 语句实现）。</p>\n<p>你或许会认为可以随意使用 <code>String</code>，反正编译器会对字符串的使用进行优化。当创建 <code>toString()</code> 方法时，如果操作很简单，通常可以依赖编译器，让它以合理的方式自行构建结果。但是如果涉及<strong>循环</strong>，并且对<strong>性能</strong>也有一定要求，那就需要显式使用 <code>StringBuilder</code> 了。来看一个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UsingStringBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">getString1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            res.append(rand.nextInt(<span class=\"number\">10</span>));</span><br><span class=\"line\">            res.append(<span class=\"string\">&quot;, &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.delete(res.length() - <span class=\"number\">2</span>, res.length());  <span class=\"comment\">// 删除最后一个逗号和空格</span></span><br><span class=\"line\">        res.append(<span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">getString2</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>)</span><br><span class=\"line\">            .ints(<span class=\"number\">5</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">            .mapToObj(Integer::toString)</span><br><span class=\"line\">            .collect(Collectors.joining(<span class=\"string\">&quot;, &quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;[&quot;</span> + res + <span class=\"string\">&quot;]&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(getString1());  <span class=\"comment\">// [8, 5, 3, 1, 1]</span></span><br><span class=\"line\">        System.out.println(getString2());  <span class=\"comment\">// [8, 5, 3, 1, 1]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>getString1()</code> 中，最终的结果是用 <code>append()</code> 语句对每一部分分别进行拼接而成的，如果你想走捷径，执行诸如 <code>append(rand.nextInt(10) + &quot;, &quot;)</code> 之类的操作，编译器就会介入，并开始创建更多的 <code>StringBuilder</code> 对象，影响性能。</p>\n<p><code>getString2()</code> 使用了 <code>Stream</code>，生成的代码更加赏心悦目。实际上，<code>Collectors.joining()</code> 内部使用 <code>StringBuilder</code> 实现，所以使用这种方式不会有任何性能损失。</p>\n<p><code>StringBuilder</code> 是在 Java 5 中引入的，在此之前，Java 使用 <code>StringBuffer</code>，它是线程安全的，因此成本也更高，使用 <code>StringBuilder</code> 进行字符串操作会更快。</p>\n<h2 id=\"3-无意识的递归\">3. 无意识的递归</h2>\n<p>和其他类一样，Java 的标准集合最终也是从 <code>Object</code> 继承而来的，所以它们也包含了一个 <code>toString()</code> 方法，这个方法在集合中被重写，这样它生成的结果字符串就能表示容器自身，以及该容器持有的所有对象。以 <code>ArrayList.toString()</code> 为例，它会遍历 <code>ArrayList</code> 的元素并为每个元素调用 <code>toString()</code> 方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    Cat() &#123;</span><br><span class=\"line\">        id = rand.nextInt(<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Cat &quot;</span> + id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrayListDisplay</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Cat&gt; cats = Stream.generate(Cat::<span class=\"keyword\">new</span>)</span><br><span class=\"line\">            .limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(cats);  <span class=\"comment\">// [Cat 8, Cat 5, Cat 3, Cat 1, Cat 1]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你希望 <code>toString()</code> 打印对象的内存地址，不能使用 <code>this</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Cat &quot;</span> + <span class=\"built_in\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样会得到一个很长的异常栈，因为编译器看到 <code>String</code> 后面加上了一个非 <code>String</code> 的内容，会尝试调用 <code>toString()</code> 方法自动转换，而这样就会递归调用自身的 <code>toString()</code>。因此我们需要直接调用 <code>Object</code> 的 <code>toString()</code> 方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> &#123;</span><br><span class=\"line\">    Cat() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Cat &quot;</span> + <span class=\"built_in\">super</span>.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrayListDisplay</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Cat&gt; cats = Stream.generate(Cat::<span class=\"keyword\">new</span>)</span><br><span class=\"line\">            .limit(<span class=\"number\">3</span>)</span><br><span class=\"line\">            .collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(cats);  <span class=\"comment\">// [Cat string.Cat@5fd0d5ae, Cat string.Cat@2d98a335, Cat string.Cat@16b98e56]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-格式化输出\">4. 格式化输出</h2>\n<h3 id=\"4-1-printf-与format\">4.1 printf()与format()</h3>\n<p>有 C 语言基础的肯定对 <code>printf()</code> 很熟悉，<code>printf()</code> 使用特殊的占位符来表示数据的位置。Java 5 引入的 <code>format()</code> 方法可用于 <code>PrintStream</code> 或 <code>PrintWriter</code> 对象，因此也可以直接用于 <code>System.out</code>。</p>\n<p><code>format()</code> 和 <code>printf()</code> 是等价的，它们都只需要一个格式化字符串，后面跟着参数，其中每个参数都对应一个格式说明符。<code>String</code> 类也有一个静态的 <code>format()</code> 方法，它会产生一个格式化字符串，之后我们会看到。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrintfAndFormat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%d, %f]%n&quot;</span>, x, y);  <span class=\"comment\">// %n同C语言中的\\n</span></span><br><span class=\"line\">        System.out.format(<span class=\"string\">&quot;[%d, %f]%n&quot;</span>, x, y);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * [2, 3.140000]</span></span><br><span class=\"line\"><span class=\"comment\">         * [2, 3.140000]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-Formatter类\">4.2 Formatter类</h3>\n<p>Java 中所有的格式化功能都由 <code>java.util</code> 包里的 <code>Formatter</code> 类处理，你可以将 <code>Formatter</code> 视为一个转换器，将格式化字符串和数据转换为想要的结果。当创建一个 <code>Formatter</code> 对象时，你可以将信息传递给构造器，来表明希望将结果输出到哪里：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Formatter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FormatterDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">PrintStream</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> System.out;</span><br><span class=\"line\">        <span class=\"type\">Formatter</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Formatter</span>(out);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span>;</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;[%d, %f]%n&quot;</span>, x, y);  <span class=\"comment\">// [2, 3.140000]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-格式说明符\">4.3 格式说明符</h3>\n<p>如果想要在插入数据时控制间距和对齐方式，你需要更详细的格式说明符。一般我们会控制字段的最小长度，或者控制浮点数的小数位数，设置长度后默认是右对齐的，可以使用 <code>-</code> 来设置成左对齐，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%<span class=\"number\">.2f</span> %<span class=\"number\">6d</span> %-15s</span><br></pre></td></tr></table></figure>\n<p>我们来看一下简单的示例，它使用了生成器模式，你可以创建一个起始对象，然后向其中添加内容，最后使用 <code>build()</code> 方法来生成最终结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Formatter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReceiptBuilder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Formatter</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Formatter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ReceiptBuilder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;%-10s %8s %8s%n&quot;</span>, <span class=\"string\">&quot;Fruit&quot;</span>, <span class=\"string\">&quot;Quantity&quot;</span>, <span class=\"string\">&quot;Price&quot;</span>);</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;%-10s %8s %8s%n&quot;</span>, <span class=\"string\">&quot;-----&quot;</span>, <span class=\"string\">&quot;--------&quot;</span>, <span class=\"string\">&quot;-----&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(String name, <span class=\"type\">int</span> quantity, <span class=\"type\">double</span> price)</span> &#123;</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;%-10s %8d %8.2f%n&quot;</span>, name, quantity, price);</span><br><span class=\"line\">        total += price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">build</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;%-10s %8s %8s%n&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;-----&quot;</span>);</span><br><span class=\"line\">        f.format(<span class=\"string\">&quot;%-10s %8s %8.2f%n&quot;</span>, <span class=\"string\">&quot;Total&quot;</span>, <span class=\"string\">&quot;&quot;</span>, total);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ReceiptBuilder</span> <span class=\"variable\">receiptBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReceiptBuilder</span>();</span><br><span class=\"line\">        receiptBuilder.add(<span class=\"string\">&quot;Apple&quot;</span>, <span class=\"number\">3</span>, <span class=\"number\">2.4</span>);</span><br><span class=\"line\">        receiptBuilder.add(<span class=\"string\">&quot;Banana&quot;</span>, <span class=\"number\">1</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">        receiptBuilder.add(<span class=\"string\">&quot;Orange&quot;</span>, <span class=\"number\">2</span>, <span class=\"number\">3.45</span>);</span><br><span class=\"line\">        System.out.println(receiptBuilder.build());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Fruit      Quantity    Price</span></span><br><span class=\"line\"><span class=\"comment\">         * -----      --------    -----</span></span><br><span class=\"line\"><span class=\"comment\">         * Apple             3     2.40</span></span><br><span class=\"line\"><span class=\"comment\">         * Banana            1     6.00</span></span><br><span class=\"line\"><span class=\"comment\">         * Orange            2     3.45</span></span><br><span class=\"line\"><span class=\"comment\">         *                        -----</span></span><br><span class=\"line\"><span class=\"comment\">         * Total                  11.85</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>将 <code>StringBuilder</code> 传递给 <code>Formatter</code> 构造器后，它就有了一个构建 <code>String</code> 的地方，还可以使用构造器参数将其发送到标准输出甚至文件里。</p>\n<p>注意：如果格式化输出参数 <code>%b</code> 用于输出非 <code>boolean</code> 基本类型或 <code>Boolean</code> 对象，那么只要参数类型不是 <code>null</code>，格式化结果总是 <code>true</code>，即使是数值0输出也为 <code>true</code>，这和 C 语言是不一样的。</p>\n<h3 id=\"4-4-String-format\">4.4 String.format()</h3>\n<p>Java 5 还借鉴了 C 语言中用来创建字符串的 <code>sprintf()</code>，提供了 <code>String.format()</code> 方法。它是一个静态方法，参数与 <code>Formatter</code> 类的 <code>format()</code> 方法完全相同，但返回一个 <code>String</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DatabaseException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Exception</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">DatabaseException</span><span class=\"params\">(<span class=\"type\">int</span> transactionID, <span class=\"type\">int</span> queryID, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(String.format(<span class=\"string\">&quot;(t%d, q%d) %s&quot;</span>, transactionID, queryID, msg));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatabaseException</span>(<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;Write failed&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(e);  <span class=\"comment\">// string.DatabaseException: (t3, q7) Write failed</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-扫描输入\">5. 扫描输入</h2>\n<p>到目前为止，从人类可读的文件或标准输入中读取数据还是比较痛苦的，一般的解决方案是读入一行文本，对其进行分词解析，然后使用 <code>Integer</code>、<code>Double</code> 等类里的各种方法来解析数据：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SimpleRead</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">BufferedReader</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Integer[] inputs = Stream.of(in.readLine().split(<span class=\"string\">&quot; &quot;</span>)).mapToInt(Integer::parseInt).boxed().toArray(Integer[]::<span class=\"keyword\">new</span>);  <span class=\"comment\">// 转换成包装类型数组</span></span><br><span class=\"line\">            <span class=\"comment\">// int [] inputs = Stream.of(in.readLine().split(&quot; &quot;)).mapToInt(Integer::parseInt).toArray();  // 转换成基本类型数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Arrays.asList(inputs));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * input: 3 1 4 7 6</span></span><br><span class=\"line\"><span class=\"comment\">         * output: [3, 1, 4, 7, 6]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>BufferedReader</code> 有一个 <code>readLine()</code> 方法，每次可以从输入对象（此处是标准输入的 <code>InputStreamReader</code>）里读取一行，<code>readLine()</code> 方法将读入的每一行转为 <code>String</code> 对象，我们使用 <code>split()</code> 方法用空格将这个字符串分割成一个 <code>String[]</code>，然后使用 <code>Stream</code> 将数组中的每个字符串转换成整型后重新构建成一个整型数组。</p>\n<p>Java 5 中添加的 <code>Scanner</code> 类大大减轻了扫描输入的负担：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BetterRead</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        List&lt;Integer&gt; inputs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNextInt())</span><br><span class=\"line\">            inputs.add(sc.nextInt());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(inputs);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * input: 1 2 33 5 end 1 2</span></span><br><span class=\"line\"><span class=\"comment\">         * output: [1, 2, 33, 5]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Scanner</code> 的构造器可以接受任何类型的输入对象，包括 <code>File</code> 对象、<code>InputStream</code>、<code>String</code>，或者 <code>Readable</code> 接口。</p>\n<p>在 <code>Scanner</code> 中，输入、分词和解析这些操作都被包含在各种不同类型的 <code>next()</code> 方法中。一个普通的 <code>next()</code> 返回下一个 <code>String</code>，所有的基本类型（Char 除外）以及 <code>BigDecimal</code> 和 <code>BigInteger</code> 都有对应的 <code>next()</code> 方法。所有的 <code>next()</code> 方法都是<strong>阻塞</strong>的，这意味着它们只有在输入流能提供一个完整可用的数据分词时才会返回。你也可以根据相应的 <code>hasNext()</code> 方法是否返回 <code>true</code> 来判断下一个输入分词的类型是否正确。</p>\n<p><code>Scanner</code> 会假设 <code>IOException</code> 表示输入结束，因此 <code>Scanner</code> 会把 <code>IOException</code> 隐藏起来。</p>\n<h3 id=\"5-1-Scanner分隔符\">5.1 Scanner分隔符</h3>\n<p>默认情况下，<code>Scanner</code> 通过空格分割输入数据，但也可以用正则表达式的形式来指定：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDelimite</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(<span class=\"string\">&quot;3, 12,  7 , 6, 9&quot;</span>);</span><br><span class=\"line\">        sc.useDelimiter(<span class=\"string\">&quot;\\\\s*,\\\\s*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Integer&gt; inputs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNextInt())</span><br><span class=\"line\">            inputs.add(sc.nextInt());</span><br><span class=\"line\">        System.out.println(inputs);  <span class=\"comment\">// [3, 12, 7, 6, 9]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此示例使用逗号（由任意数量的空白符包围）作为分隔符，来处理读取的给定字符串，同样的技术也可以用来读取逗号分隔的文件：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDelimite</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(Files.lines(Paths.get(<span class=\"string\">&quot;src/file/numbers.txt&quot;</span>)).collect(Collectors.joining(<span class=\"string\">&quot;,&quot;</span>)));</span><br><span class=\"line\">        sc.useDelimiter(<span class=\"string\">&quot;\\\\s*,\\\\s*&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Integer&gt; inputs = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNextInt())</span><br><span class=\"line\">            inputs.add(sc.nextInt());</span><br><span class=\"line\">        System.out.println(inputs);  <span class=\"comment\">// [3, 12, 7, 6, 9, 5, 1]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>numbers.txt</code> 文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3, 12,  7 , 6, 9</span><br><span class=\"line\">5, 1</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-使用正则表达式扫描\">5.2 使用正则表达式扫描</h3>\n<p>除了扫描预定义的基本类型，你还可以用自己定义的正则表达式模式来扫描，这在扫描更复杂的数据时非常有用。下面这个示例扫描防火墙日志中的威胁数据：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> string;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.regex.MatchResult;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThreatAnalyzer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">threatData</span> <span class=\"operator\">=</span></span><br><span class=\"line\">        <span class=\"string\">&quot;12.124.52.163@03/11/2023\\n&quot;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;23.141.61.192@01/11/2023\\n&quot;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;Over&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(threatData);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">pattern</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;(\\\\d+[.]\\\\d+[.]\\\\d+[.]\\\\d+)@&quot;</span> + <span class=\"string\">&quot;(\\\\d&#123;2&#125;/\\\\d&#123;2&#125;/\\\\d&#123;4&#125;)&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sc.hasNext(pattern)) &#123;</span><br><span class=\"line\">            sc.next(pattern);</span><br><span class=\"line\">            <span class=\"type\">MatchResult</span> <span class=\"variable\">match</span> <span class=\"operator\">=</span> sc.match();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> match.group(<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> match.group(<span class=\"number\">2</span>);</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;Threat on %s from %s%n&quot;</span>, date, ip);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Threat on 03/11/2023 from 12.124.52.163</span></span><br><span class=\"line\"><span class=\"comment\">         * Threat on 01/11/2023 from 23.141.61.192</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>next()</code> 与特定模式一起使用时，该模式会和下一个输入分词进行匹配，结果由 <code>match()</code> 方法提供。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/29756.html",
            "url": "https://asanosaki.github.io/posts/29756.html",
            "title": "Java文件操作详解",
            "date_published": "2023-11-01T14:22:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 处理文件与目录的方式。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-文件和目录路径\">1. 文件和目录路径</h2>\n<p><code>Path</code> 对象代表的是一个文件或目录的路径，它是在不同的操作系统和文件系统之上的抽象。它的目的是，在构建路径时，我们不必注意底层的操作系统，我们的代码不需要重写就能在不同的操作系统上工作。</p>\n<p><code>java.nio.file.Paths</code> 类包含了重载的 <code>static get()</code> 方法，可以接受一个 <code>String</code> 序列，或一个<strong>统一资源标识符</strong>（Uniform Resource Identifier，URI），然后将其转化为一个 <code>Path</code> 对象：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URI;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PathInfo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">showInfo</span><span class=\"params\">(Path p)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;toString(): &quot;</span> + p);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;exists(): &quot;</span> + Files.exists(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isRegularFile(): &quot;</span> + Files.isRegularFile(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isDirectory(): &quot;</span> + Files.isDirectory(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isAbsolute(): &quot;</span> + p.isAbsolute());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getFileName(): &quot;</span> + p.getFileName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getParent(): &quot;</span> + p.getParent());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getRoot(): &quot;</span> + p.getRoot());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(System.getProperty(<span class=\"string\">&quot;os.name&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/test.txt&quot;</span>);</span><br><span class=\"line\">        showInfo(filePath);</span><br><span class=\"line\">        showInfo(filePath.toAbsolutePath());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">dirPath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src&quot;</span>, <span class=\"string\">&quot;file&quot;</span>);</span><br><span class=\"line\">        showInfo(dirPath);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">invalidPath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src&quot;</span>, <span class=\"string\">&quot;file&quot;</span>, <span class=\"string\">&quot;invalid.txt&quot;</span>);</span><br><span class=\"line\">        showInfo(invalidPath);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">URI</span> <span class=\"variable\">fileURI</span> <span class=\"operator\">=</span> filePath.toUri();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;URI: &quot;</span> + fileURI);</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">fileFromURI</span> <span class=\"operator\">=</span> Paths.get(fileURI);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Files.exists(fileFromURI): &quot;</span> + Files.exists(fileFromURI));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Windows 11</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * toString(): src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * exists(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isRegularFile(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isDirectory(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isAbsolute(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * getFileName(): test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * getParent(): src\\file</span></span><br><span class=\"line\"><span class=\"comment\">         * getRoot(): null</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * toString(): D:\\IDEA Project\\JavaStudy\\src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * exists(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isRegularFile(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isDirectory(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isAbsolute(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * getFileName(): test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * getParent(): D:\\IDEA Project\\JavaStudy\\src\\file</span></span><br><span class=\"line\"><span class=\"comment\">         * getRoot(): D:\\</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * toString(): src\\file</span></span><br><span class=\"line\"><span class=\"comment\">         * exists(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isRegularFile(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isDirectory(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isAbsolute(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * getFileName(): file</span></span><br><span class=\"line\"><span class=\"comment\">         * getParent(): src</span></span><br><span class=\"line\"><span class=\"comment\">         * getRoot(): null</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * toString(): src\\file\\invalid.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * exists(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isRegularFile(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isDirectory(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isAbsolute(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * getFileName(): invalid.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * getParent(): src\\file</span></span><br><span class=\"line\"><span class=\"comment\">         * getRoot(): null</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * URI: file:///D:/IDEA%20Project/JavaStudy/src/file/test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * Files.exists(fileFromURI): true</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>虽然 <code>toString()</code> 生成的是路径的完整表示，但是可以看到 <code>getFileName()</code> 总是会生成文件的名字。使用 <code>Files</code> 工具类（后面会看到更多），我们可以测试文件是否存在，是否为“普通”文件，是否为目录等等。</p>\n<p>在这里，我们看到了文件的 URI 是什么样子的，但 URI 可以用来描述大多数事物，不仅限于文件，然后我们成功地将 URI 转回到了一个 <code>Path</code> 之中。</p>\n<h3 id=\"1-1-获取Path的片段\">1.1 获取Path的片段</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PartsOfPaths</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/test.txt&quot;</span>).toAbsolutePath();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Path: &quot;</span> + p);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;endsWith(.txt): &quot;</span> + p.endsWith(<span class=\"string\">&quot;.txt&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; p.getNameCount(); i++)</span><br><span class=\"line\">            System.out.print(p.getName(i) + (i == p.getNameCount() - <span class=\"number\">1</span> ? <span class=\"string\">&quot;&quot;</span> : <span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Path pName: p) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;p.startsWith(&quot;</span> + pName + <span class=\"string\">&quot;): &quot;</span> + p.startsWith(pName));</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;p.endsWith(&quot;</span> + pName + <span class=\"string\">&quot;): &quot;</span> + p.endsWith(pName));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;p.startsWith(&quot;</span> + p.getRoot() + <span class=\"string\">&quot;): &quot;</span> + p.startsWith(p.getRoot()));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Path: D:\\IDEA Project\\JavaStudy\\src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * endsWith(.txt): false</span></span><br><span class=\"line\"><span class=\"comment\">         * IDEA Project/JavaStudy/src/file/test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(IDEA Project): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.endsWith(IDEA Project): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(JavaStudy): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.endsWith(JavaStudy): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(src): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.endsWith(src): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(file): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.endsWith(file): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(test.txt): false</span></span><br><span class=\"line\"><span class=\"comment\">         * p.endsWith(test.txt): true</span></span><br><span class=\"line\"><span class=\"comment\">         * p.startsWith(D:\\): true</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>getNameCount()</code> 界定的上限之内，我们可以结合索引使用 <code>getName()</code>，得到一个 <code>Path</code> 的各个部分。<code>Path</code> 也可以生成 <code>Iterator</code>，所以我们也可以使用 <code>for-in</code> 来遍历。</p>\n<p>注意，尽管这里的路径确实是以 <code>.txt</code> 结尾的，但 <code>endsWith()</code> 的结果是 <code>false</code>。这是因为该方法比较的是整个路径组件（即用 <code>/</code> 分开的每个整体部分，如 <code>test.txt</code>），而不是名字中的一个字串。</p>\n<p>还可以看到我们在对 <code>Path</code> 进行遍历时，并没有包含根目录，只有当我们用根目录来检查 <code>startsWith()</code> 时才会得到 <code>true</code>。</p>\n<h3 id=\"1-2-获取Path信息\">1.2 获取Path信息</h3>\n<p><code>Files</code> 工具类中包含了一整套用于检查 <code>Path</code> 的各种信息的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PathAnalysis</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/test.txt&quot;</span>).toAbsolutePath();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;exists(): &quot;</span> + Files.exists(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isDirectory(): &quot;</span> + Files.isDirectory(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isExecutable(): &quot;</span> + Files.isExecutable(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isReadable(): &quot;</span> + Files.isReadable(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isRegularFile(): &quot;</span> + Files.isRegularFile(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isWritable(): &quot;</span> + Files.isWritable(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;notExists(): &quot;</span> + Files.notExists(p));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 以下方法会抛出IOException</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isHidden(): &quot;</span> + Files.isHidden(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;size(): &quot;</span> + Files.size(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getFileStore(): &quot;</span> + Files.getFileStore(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getLastModifiedTime(): &quot;</span> + Files.getLastModifiedTime(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;getOwner(): &quot;</span> + Files.getOwner(p));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;probeContentType(): &quot;</span> + Files.probeContentType(p));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * exists(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isDirectory(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isExecutable(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isReadable(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isRegularFile(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * isWritable(): true</span></span><br><span class=\"line\"><span class=\"comment\">         * notExists(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * isHidden(): false</span></span><br><span class=\"line\"><span class=\"comment\">         * size(): 30</span></span><br><span class=\"line\"><span class=\"comment\">         * getFileStore(): Asano (D:)</span></span><br><span class=\"line\"><span class=\"comment\">         * getLastModifiedTime(): 2023-10-20T02:58:25.335851Z</span></span><br><span class=\"line\"><span class=\"comment\">         * getOwner(): LAPTOP-23NEHV3U\\AsanoSaki (User)</span></span><br><span class=\"line\"><span class=\"comment\">         * probeContentType(): text/plain</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-添加或删除路径片段\">1.3 添加或删除路径片段</h3>\n<p>我们必须能够通过对自己的 <code>Path</code> 对象添加和删除某些路径片段来构建 <code>Path</code> 对象。若想去掉某个基准路径可以使用 <code>relativize()</code>，想在一个 <code>Path</code> 对象的后面添加路径片段可以使用 <code>resolve()</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddAndSubPaths</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">base</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src&quot;</span>).toAbsolutePath();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;base: &quot;</span> + base);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/test.txt&quot;</span>).toAbsolutePath();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;filePath: &quot;</span> + filePath);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePathWithoutBase</span> <span class=\"operator\">=</span> base.relativize(filePath);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;filePathWithoutBase: &quot;</span> + filePathWithoutBase);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePathWithBase</span> <span class=\"operator\">=</span> base.resolve(<span class=\"string\">&quot;file/test.txt&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;filePathWithBase: &quot;</span> + filePathWithBase);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">workspacePath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;workspacePath: &quot;</span> + workspacePath);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;workspacePath.toRealPath(): &quot;</span> + workspacePath.toRealPath());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * base: D:\\IDEA Project\\JavaStudy\\src</span></span><br><span class=\"line\"><span class=\"comment\">         * filePath: D:\\IDEA Project\\JavaStudy\\src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * filePathWithoutBase: file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * filePathWithBase: D:\\IDEA Project\\JavaStudy\\src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * workspacePath:</span></span><br><span class=\"line\"><span class=\"comment\">         * workspacePath.toRealPath(): D:\\IDEA Project\\JavaStudy</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只有 <code>Path</code> 为绝对路径时，才能将其用作 <code>relativize()</code> 方法的参数。此外还增加了对 <code>toRealPath()</code> 的进一步测试，除了路径不存在的情况下会抛出 <code>IOException</code> 异常，它总是会对 <code>Path</code> 进行扩展和规范化。</p>\n<h2 id=\"2-文件系统\">2. 文件系统</h2>\n<p>为了完整起见，我们需要一种方式来找出文件系统的其他信息。在这里，我们可以使用静态的 <code>FileSystems</code> 工具来获得默认的文件系统，也可以在一个 <code>Path</code> 对象上调用 <code>getFileSystem()</code> 来获得创建这个路径对象的文件系统。我们可以通过给定的 URI 获得一个文件系统，也可以构建一个新的文件系统（如果操作系统支持的话）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.FileStore;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.FileSystem;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.FileSystems;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileSystemDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">FileSystem</span> <span class=\"variable\">fs</span> <span class=\"operator\">=</span> FileSystems.getDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (FileStore s: fs.getFileStores())</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;File Store: &quot;</span> + s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Path p: fs.getRootDirectories())</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Root Directory: &quot;</span> + p);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Separator: &quot;</span> + fs.getSeparator());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isOpen: &quot;</span> + fs.isOpen());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;isReadOnly: &quot;</span> + fs.isReadOnly());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;File Attribute Views: &quot;</span> + fs.supportedFileAttributeViews());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * File Store: OS (C:)</span></span><br><span class=\"line\"><span class=\"comment\">         * File Store: Asano (D:)</span></span><br><span class=\"line\"><span class=\"comment\">         * File Store: Saki (E:)</span></span><br><span class=\"line\"><span class=\"comment\">         * Root Directory: C:\\</span></span><br><span class=\"line\"><span class=\"comment\">         * Root Directory: D:\\</span></span><br><span class=\"line\"><span class=\"comment\">         * Root Directory: E:\\</span></span><br><span class=\"line\"><span class=\"comment\">         * Separator: \\</span></span><br><span class=\"line\"><span class=\"comment\">         * isOpen: true</span></span><br><span class=\"line\"><span class=\"comment\">         * isReadOnly: false</span></span><br><span class=\"line\"><span class=\"comment\">         * File Attribute Views: [owner, dos, acl, basic, user]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查找文件\">3. 查找文件</h2>\n<p><code>java.nio.file</code> 中有一个用于查找文件的类 <code>PathMatcher</code>，可以通过在 <code>FileSystem</code> 对象上调用 <code>getPathMatcher()</code> 来获得一个 <code>PathMatcher</code> 对象，并传入我们感兴趣的查找模式。模式有两个选项：<code>glob</code> 和 <code>regex</code>。<code>glob</code> 更简单，但实际上非常强大，可以解决很多问题，如果问题更为复杂，可以使用 <code>regex</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FindFiles</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">PathMatcher</span> <span class=\"variable\">matcher1</span> <span class=\"operator\">=</span> FileSystems.getDefault().getPathMatcher(<span class=\"string\">&quot;glob:**/*.&#123;txt,tmp&#125;&quot;</span>);</span><br><span class=\"line\">        Files.walk(filePath)  <span class=\"comment\">// 会抛出IOException</span></span><br><span class=\"line\">            .filter(matcher1::matches)</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">PathMatcher</span> <span class=\"variable\">matcher2</span> <span class=\"operator\">=</span> FileSystems.getDefault().getPathMatcher(<span class=\"string\">&quot;glob:*.txt&quot;</span>);</span><br><span class=\"line\">        Files.walk(filePath)</span><br><span class=\"line\">            .map(Path::getFileName)  <span class=\"comment\">// 不加这行代码将不会产生任何输出</span></span><br><span class=\"line\">            .filter(matcher2::matches)</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * src\\file\\FileToWordsBuilder.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * src\\file\\test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * FileToWordsBuilder.txt</span></span><br><span class=\"line\"><span class=\"comment\">         * test.txt</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>matcher1</code> 中，<code>glob</code> 表达式开头的 <code>**/</code> 表示所有子目录，如果你想匹配的不仅仅是以基准目录为结尾的 <code>Path</code>，那么它是必不可少的，因为它匹配的是完整路径，直到找到想要的结果。单个的 <code>*</code> 表示任何东西，后面的花括号表示的是一系列的可能性，即查找任何以 <code>.txt</code> 或 <code>.tmp</code> 结尾的东西。</p>\n<p>注意在 <code>matcher2</code> 中我们只匹配 <code>*.txt</code>，而我们的 <code>filePath</code> 并不在基准目录下，因此需要先用 <code>map()</code> 将文件的完整路径改为只剩最后一段 <code>Path</code> 片段，即 <code>xxx.txt</code> 这种形式，这样才能匹配上。</p>\n<h2 id=\"4-读写文件\">4. 读写文件</h2>\n<p>目前为止，我们可以做的只是对路径和目录的操作，现在来看看如何操作文件本身的内容。</p>\n<p><code>java.nio.file.Files</code> 类包含了方便读写文本文件和二进制文件的工具函数。<code>Files.readAllLines()</code> 可以一次性读入整个文件，生成一个 <code>List&lt;String&gt;</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReadAllLines</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/test.txt&quot;</span>);</span><br><span class=\"line\">        List&lt;String&gt; lines = Files.readAllLines(p);  <span class=\"comment\">// 会抛出IOException</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String line: lines)</span><br><span class=\"line\">            System.out.println(line);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Files.readAllLines(p)</span><br><span class=\"line\">            .stream()</span><br><span class=\"line\">            .map(line -&gt; line.substring(<span class=\"number\">0</span>, line.length() / <span class=\"number\">2</span>))</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello world</span></span><br><span class=\"line\"><span class=\"comment\">         * Java is a nice language</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * Java is a n</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Files.write()</code> 也被重载了，可以将 <code>byte</code> 数组或任何实现了 <code>Iterable</code> 接口的类的对象写入文件：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FilesWrite</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">        rand.nextBytes(bytes);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">bytesPath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/bytes.txt&quot;</span>);</span><br><span class=\"line\">        Files.write(bytesPath, bytes);  <span class=\"comment\">// 会抛出IOException</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">byte</span> b: Files.readAllBytes(bytesPath))</span><br><span class=\"line\">            System.out.print(b + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;The size of bytes.txt: &quot;</span> + Files.size(bytesPath));</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;String&gt; contents = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;Hello world&quot;</span>, <span class=\"string\">&quot;Hello java&quot;</span>, <span class=\"string\">&quot;Hello AsanoSaki&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Path</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> Paths.get(<span class=\"string\">&quot;src/file/contents.txt&quot;</span>);</span><br><span class=\"line\">        Files.write(filePath, contents);</span><br><span class=\"line\"></span><br><span class=\"line\">        Files.readAllLines(filePath).stream().forEach(System.out::println);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;The size of contents.txt: &quot;</span> + Files.size(filePath));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * -107 66 36 -70 22 5 91 102 -85 10</span></span><br><span class=\"line\"><span class=\"comment\">         * The size of bytes.txt: 10</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello world</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello java</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * The size of contents.txt: 42</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们读取文件时都是将文件全部一次性读入，这可能会有以下的问题：</p>\n<ul>\n<li>这个文件非常大，如果一次性读取整个文件，可能会耗尽内存。</li>\n<li>我们只需要文件的一部分就能得到想要的结果，所以读取整个文件是在浪费时间。</li>\n</ul>\n<p><code>Files.lines()</code> 可以很方便地将一个文件变为一个由行组成的 <code>Stream</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReadLineStream</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        Files.lines(Paths.get(<span class=\"string\">&quot;src/file/contents.txt&quot;</span>))  <span class=\"comment\">// 会抛出IOException</span></span><br><span class=\"line\">            .skip(<span class=\"number\">1</span>)</span><br><span class=\"line\">            .map(String::toUpperCase)</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * HELLO JAVA</span></span><br><span class=\"line\"><span class=\"comment\">         * HELLO ASANOSAKI</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果把文件当作一个由行组成的输入流来处理，那么 <code>Files.lines()</code> 非常有用，但是如果我们想在一个流中完成读取、处理和写入，那该怎么办呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> file;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamInAndOut</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (Stream&lt;String&gt; in = Files.lines(Paths.get(<span class=\"string\">&quot;src/file/contents.txt&quot;</span>));</span><br><span class=\"line\">             <span class=\"type\">PrintWriter</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PrintWriter</span>(<span class=\"string\">&quot;src/file/uppercaseContents.txt&quot;</span>)) &#123;</span><br><span class=\"line\">            in.map(String::toUpperCase).forEachOrdered(out::println);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught IOException&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因为我们是在同一个块中执行的所有操作，所以两个文件可以在相同的 <code>try-with-resources</code> 块中打开。<code>PrintWriter</code> 是一个旧式的 <code>java.io</code> 类，允许我们“打印”到—个文件，所以它是这个应用的理想选择。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/10258.html",
            "url": "https://asanosaki.github.io/posts/10258.html",
            "title": "Java异常（Exception）详解",
            "date_published": "2023-10-31T07:51:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 的异常处理机制，Java 使用异常（Exception）提供了一个一致的错误报告模型，从而使组件可以将问题可靠地传达给客户代码。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>改进错误恢复机制是增加代码稳健性的最强有力的方法之一。捕捉错误的理想时机是在编译时，也就是在你试图运行程序之前。然而，并不是所有的错误都能在编译时发现。其他问题必须在运行时通过某种正规手段来处理，这种手段应该支持这个错误的源头将适当的信息传递给知道如何正确处理该难题的某个接收者。</p>\n<h2 id=\"1-异常处理程序\">1. 异常处理程序</h2>\n<p>如果我们正处于一个方法之中，并抛出了异常（或者在该方法中调用的另一个方法抛出了异常），该方法将在抛出异常的过程中退出，如果不希望退出，可以在其中设置一个特殊的块来捕捉这个异常。因为要在这里“尝试”各种方法调用，所以它称为 <code>try</code> 块。</p>\n<p>被抛出的异常总是要在某个地方结束，这个地方就是异常处理程序，我们可以为每种异常类型编写一个。异常处理程序紧跟在 <code>try</code> 块之后，用关键字 <code>catch</code> 来表示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 可能会产生异常的代码</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (ExceptionType1 e1) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理ExceptionType1类型的异常</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (ExceptionType2 e2) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理ExceptionType2类型的异常</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>每个 <code>catch</code> 子句（异常处理程序）就像一个小方法，接受且只接受一个特定类型的参数。标识符（<code>e1</code>、<code>e2</code> 等）可以在处理程序中使用，就像方法参数一样。有时候我们从不使用这个标识符，因为异常的类型已经为处理该异常提供了足够多的信息，但是这个标识符必须放在这里。</p>\n<p>异常处理程序必须紧跟在 <code>try</code> 块的后面，如果一个异常被抛出，异常处理机制会去查找参数与异常类型相匹配的第一个处理程序，然后进入 <code>catch</code> 子句，我们就认为这个异常被处理了。一旦 <code>catch</code> 子句完成，对异常处理程序的搜索就会停止，只有匹配的 <code>catch</code> 子句才会执行，它不像 <code>switch</code> 语句那样每个 <code>case</code> 之后都需要一个 <code>break</code>，以避免执行其余的 <code>case</code>。</p>\n<h2 id=\"2-创建异常与日志记录\">2. 创建异常与日志记录</h2>\n<h3 id=\"2-1-自定义异常\">2.1 自定义异常</h3>\n<p>要创建自己的异常类，可以继承现有的异常类，异常类型的基类是 <code>Exception</code>，我们可以直接使用无参构造器，也可以创建一个接受 <code>String</code> 参数的构造器：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Exception</span> &#123;</span><br><span class=\"line\">    MyException() &#123;&#125;</span><br><span class=\"line\">    MyException(String msg) &#123; <span class=\"built_in\">super</span>(msg); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestMyException</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> MyException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">g</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> MyException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyException</span>(<span class=\"string\">&quot;Exception from g()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            f();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (MyException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            g();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (MyException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * exception.MyException</span></span><br><span class=\"line\"><span class=\"comment\">         * exception.MyException: Exception from g()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-日志记录\">2.2 日志记录</h3>\n<p>我们可以使用 <code>java.util.logging</code> 工具将输出记录到日志中，常见的情况是捕捉别人的异常，并将其记录到日志中，所以我们必须在异常处理程序中生成日志信息：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.StringWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.logging.Logger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoggingExceptions</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> Logger.getLogger(<span class=\"string\">&quot;LoggingExceptions&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">logException</span><span class=\"params\">(Exception e)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">StringWriter</span> <span class=\"variable\">trace</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringWriter</span>();</span><br><span class=\"line\">        e.printStackTrace(<span class=\"keyword\">new</span> <span class=\"title class_\">PrintWriter</span>(trace));</span><br><span class=\"line\">        logger.severe(trace.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;NullPointerException thrown by main()&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NullPointerException e) &#123;</span><br><span class=\"line\">            logException(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* 标准错误流输出</span></span><br><span class=\"line\"><span class=\"comment\">         * 十月 31, 2023 1:01:46 下午 exception.LoggingExceptions logException</span></span><br><span class=\"line\"><span class=\"comment\">         * 严重: java.lang.NullPointerException: NullPointerException thrown by main()</span></span><br><span class=\"line\"><span class=\"comment\">         *    at exception.LoggingExceptions.main(LoggingExceptions.java:18)</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-异常说明\">3. 异常说明</h2>\n<p>Java 鼓励人们将其方法中可能会抛出的异常告知调用该方法的客户程序员。这就是异常说明（exception specification）。它是方法声明的组成部分，出现在参数列表之后。</p>\n<p>异常规范使用了一个额外的关键字 <code>throws</code>，后面跟着所有可能被抛出的异常的列表，所以我们的方法定义看起来就像下面这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception1, Exception2 &#123; <span class=\"comment\">// ... &#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果没有 <code>throws</code> 参数，意味着这个方法不会抛出异常（除了从 <code>RuntimeException</code> 继承而来的异常，这样的异常可以从任何地方抛出而不需要异常说明，后面会介绍）。</p>\n<p>异常说明必须和实际情况匹配，如果方法中的代码引发了异常，但是这个方法并没有处理，编译器就会检测到并提醒我们：要么处理这个异常，要么用异常说明指出这个异常可能会从该方法中抛出。</p>\n<p>这种在编译时被检查并强制实施的异常叫作<strong>检查型异常</strong>（checked exception）。</p>\n<h2 id=\"4-捕捉任何异常\">4. 捕捉任何异常</h2>\n<p>通过捕捉异常类型的基类 <code>Exception</code>，可以创建一个能捕捉任何类型异常的处理程序。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这会捕捉任何异常，所以如果使用它的话，请把它放在处理程序列表的<strong>最后</strong>，以避免它抢在其他任何异常处理程序之前捕获了异常。</p>\n<h3 id=\"4-1-Exception类的方法\">4.1 Exception类的方法</h3>\n<p><code>Exception</code> 类是所有对程序员很重要的异常类的基类，所以通过它我们不会得到关于异常的很多具体信息，但是我们可以调用来自其基类 <code>Throwable</code> 的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ExceptionMethods</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>(<span class=\"string\">&quot;My Exception&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;e.getMessage(): &quot;</span> + e.getMessage());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;e.getLocalizedMessage(): &quot;</span> + e.getLocalizedMessage());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;e.toString(): &quot;</span> + e);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;e.printStackTrace(): &quot;</span>);</span><br><span class=\"line\">            e.printStackTrace(System.out);  <span class=\"comment\">// 默认会打印到标准错误流</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * e.getMessage(): My Exception</span></span><br><span class=\"line\"><span class=\"comment\">         * e.getLocalizedMessage(): My Exception</span></span><br><span class=\"line\"><span class=\"comment\">         * e.toString(): java.lang.Exception: My Exception</span></span><br><span class=\"line\"><span class=\"comment\">         * e.printStackTrace(): </span></span><br><span class=\"line\"><span class=\"comment\">         * java.lang.Exception: My Exception</span></span><br><span class=\"line\"><span class=\"comment\">         *    at exception.ExceptionMethods.main(ExceptionMethods.java:6)</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以发现每个方法都比前一个方法提供了更多信息，实际上每个方法都是前一个方法的超集。</p>\n<h3 id=\"4-2-多重捕捉\">4.2 多重捕捉</h3>\n<p>如果我们想以同样的方式处理一组异常，并且它们有一个共同的基类，那么直接捕捉这个基类即可。但是如果它们没有共同的基类，在 Java 7 之前，必须为每一个异常写一个 <code>catch</code> 子句。</p>\n<p>利用 Java 7 提供的多重捕捉（multi-catch）处理程序，我们可以在一个 <code>catch</code> 子句中用 <code>|</code> 操作符把不同类型的异常连接起来：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MultiCatch</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ArithmeticException | NullPointerException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Catch ArithmeticException or NullPointerException&quot;</span>);</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Catch ArithmeticException or NullPointerException</span></span><br><span class=\"line\"><span class=\"comment\">         * java.lang.NullPointerException</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-栈轨迹\">4.3 栈轨迹</h3>\n<p><code>printStackTrace()</code> 提供的信息也可以使用 <code>getStackTrace()</code> 直接访问，这个方法会返回一个由栈轨迹元素组成的数组，每个元素表示一个栈帧。第一个元素是栈顶，即序列中的最后一个方法调用（这个 <code>Throwable</code> 被创建和抛出的位置）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StackTrace</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">g</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        f();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            f();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (StackTraceElement s: e.getStackTrace())</span><br><span class=\"line\">                System.out.println(s.getMethodName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            g();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (StackTraceElement s: e.getStackTrace())</span><br><span class=\"line\">                System.out.println(s.getMethodName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * f</span></span><br><span class=\"line\"><span class=\"comment\">         * main</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * f</span></span><br><span class=\"line\"><span class=\"comment\">         * g</span></span><br><span class=\"line\"><span class=\"comment\">         * main</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-重新抛出异常\">4.4 重新抛出异常</h3>\n<p>有时我们要重新抛出刚捕获的异常，特别是当使用 <code>Exception</code> 来捕捉任何异常的时候我们已经有指向当前异常的引用，所以可以重新抛出它：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果重新抛出当前的异常，在 <code>printStackTrace()</code> 中打印的关于异常的信息，仍将是原来的异常抛出点的信息，而不是重新抛出异常的地方的信息，要加入新的栈轨迹信息可以调用 <code>fillInStackTrace()</code>，它会返回一个 <code>Throwable</code> 对象，这个对象是它通过将当前栈的信息塞到原来的异常对象中而创建的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Rethrowing</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Originating Exception in f()&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>(<span class=\"string\">&quot;Thrown from f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">g</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            f();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside g(), e.printStackTrace():&quot;</span>);</span><br><span class=\"line\">            e.printStackTrace(System.out);</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> (Exception)e.fillInStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            g();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside main(), e.printStackTrace():&quot;</span>);</span><br><span class=\"line\">            e.printStackTrace(System.out);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside g(), e.printStackTrace():</span></span><br><span class=\"line\"><span class=\"comment\">         * java.lang.Exception: Thrown from f()</span></span><br><span class=\"line\"><span class=\"comment\">         *     at exception.Rethrowing.f(Rethrowing.java:6)</span></span><br><span class=\"line\"><span class=\"comment\">         *     at exception.Rethrowing.g(Rethrowing.java:11)</span></span><br><span class=\"line\"><span class=\"comment\">         *     at exception.Rethrowing.main(Rethrowing.java:21)</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside main(), e.printStackTrace():</span></span><br><span class=\"line\"><span class=\"comment\">         * java.lang.Exception: Thrown from f()</span></span><br><span class=\"line\"><span class=\"comment\">         *     at exception.Rethrowing.g(Rethrowing.java:15)</span></span><br><span class=\"line\"><span class=\"comment\">         *     at exception.Rethrowing.main(Rethrowing.java:21)</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到在 <code>main()</code> 中输出异常的栈轨迹时没有 <code>f()</code> 的信息。<code>fillInStackTrace()</code> 被调用的那一行，成为这个异常的新起点。</p>\n<p>重新抛出一个与所捕获的异常不同的异常也是可以的，这样做会得到与使用 <code>fillInStackTrace()</code> 类似的效果，关于这个异常的原始调用点的信息会丢失，剩下的是与新的 <code>throw</code> 有关的信息。</p>\n<h2 id=\"5-使用finally块执行清理\">5. 使用finally块执行清理</h2>\n<p>往往会出现这样的情况：不管 <code>try</code> 块中是否抛出异常，都有一段代码必须执行，这通常是内存恢复之外的操作，因为内存恢复操作由垃圾收集器处理。</p>\n<p>我们可以在所有异常处理程序的末尾使用一个 <code>finally</code> 子句，所以异常处理的全貌就是这样的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 被守护区域，可能会抛出异常</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception1 e1) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理Exception1类型的异常</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception2 e2) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理Exception2类型的异常</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 无论哪种情况都会执行的活动</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们来看一下下面这个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FinallyWorks</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (count++ == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;No Exception&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Caught Exception&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Inside finally&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (count == <span class=\"number\">2</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Caught Exception</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside finally</span></span><br><span class=\"line\"><span class=\"comment\">         * No Exception</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside finally</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>从输出可以看出，无论是否抛出异常，<code>finally</code> 子句都执行了。还可以看出另一事实：Java 中的异常不允许我们回退到异常被抛出的地方。</p>\n<h3 id=\"5-1-finally的作用\">5.1 finally的作用</h3>\n<p>在没有垃圾收集并且不会自动调用析构函数的语言中，<code>finally</code> 非常重要，这是因为不管在 <code>try</code> 块中发生了什么，它都使得程序员可以确保内存的释放。但是 Java 提供了垃圾收集器，且无需调用析构函数，那么 <code>finally</code> 在 Java 中什么时候需要用到？</p>\n<p>要清理内存之外的某些东西时，<code>finally</code> 子句是必要的，例如打开的文件或网络连接，画在屏幕上的东西等。</p>\n<h3 id=\"5-2-不同异常处理层及方法返回时的finally执行机制\">5.2 不同异常处理层及方法返回时的finally执行机制</h3>\n<p>即使抛出的异常没有被当前的这组 <code>catch</code> 子句捕获，在异常处理机制向更高一层中继续搜索异常处理程序之前，<code>finally</code> 也会执行：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AlwaysFinally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside outer try&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Inside inner try&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Inside inner finally&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught Exception in outer catch&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside outer finally&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside outer try</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside inner try</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside inner finally</span></span><br><span class=\"line\"><span class=\"comment\">         * Caught Exception in outer catch</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside outer finally</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因为 <code>finally</code> 子句总会执行，所以在一个方法中，我们可以从多个点返回，并且仍然能够确保重要的清理工作得到执行：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MultiReturns</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">(<span class=\"type\">int</span> i)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Point 1&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Point 2&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == <span class=\"number\">2</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;End&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Do something cleanup&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">            f(i);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Point 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Do something cleanup</span></span><br><span class=\"line\"><span class=\"comment\">         * Point 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Point 2</span></span><br><span class=\"line\"><span class=\"comment\">         * Do something cleanup</span></span><br><span class=\"line\"><span class=\"comment\">         * Point 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Point 2</span></span><br><span class=\"line\"><span class=\"comment\">         * End</span></span><br><span class=\"line\"><span class=\"comment\">         * Do something cleanup</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出表明，方法从哪里返回并不重要，<code>finally</code> 子句中的内容总会运行。</p>\n<h2 id=\"6-try-with-resources语句\">6. try-with-resources语句</h2>\n<p>有时有些对象会出现如下的情况：</p>\n<ul>\n<li>需要清理；</li>\n<li>需要在特定时刻清理，例如当走出某个作用域的时候（通过正常方式或通过异常）。</li>\n</ul>\n<p>一个常见的例子是 <code>java.io.FileInputStream</code>，传统方式下我们需要编写棘手的代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">InputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    in = <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;Something.txt&quot;</span>));</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> in.read();</span><br><span class=\"line\">    <span class=\"comment\">// 处理内容</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理异常</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (in != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            in.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 处理close()异常</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Java 7 引入了 <code>try-with-resources</code> 语法，可以很好地简化上述代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> (<span class=\"type\">InputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;Something.txt&quot;</span>))) &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> in.read();</span><br><span class=\"line\">    <span class=\"comment\">// 处理内容</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理异常</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>try</code> 后面可以跟一个括号定义，我们在这里创建了 <code>FileInputstream</code> 对象。括号中的内容叫作<strong>资源说明头</strong>（resource specification header）。现在对象 <code>in</code> 在这个 <code>try</code> 块的其余部分都是可用的。更重要的是，不管如何退出 <code>try</code> 块（无论是正常方式还是通过异常），都会执行与上一个示例中的 <code>finally</code> 子句等同的操作，无需编写复杂棘手的代码了。</p>\n<p>它是如何工作的呢？在 <code>try-with-resources</code> 定义子句中（也就是括号内）创建的对象必须实现 <code>java.lang.AutoCloseable</code> 接口，该接口只有一个方法：<code>close()</code>。</p>\n<p>资源说明头可以包含多个定义，用分号隔开，在这个头部定义的每个对象都将在 <code>try</code> 块的末尾调用其 <code>close()</code>。</p>\n<h3 id=\"6-1-底层细节\">6.1 底层细节</h3>\n<p>为了研究 <code>try-with-resources</code> 的底层机制，可以创建自己的实现了 <code>AutoCloseable</code> 接口的类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Reporter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AutoCloseable</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">    Reporter() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Closing &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FirstReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SecondReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoCloseableDetails</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">FirstReporter</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FirstReporter</span>();</span><br><span class=\"line\">             <span class=\"type\">SecondReporter</span> <span class=\"variable\">sr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecondReporter</span>()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside try&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating SecondReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside try</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing SecondReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在退出 <code>try</code> 块时会调用两个对象的 <code>close()</code> 方法，而且会以与创建顺序相反的顺序关闭他们。这个顺序很重要，因为在这种配置情况下，<code>SecondReporter</code> 对象有可能会依赖 <code>FirstReporter</code> 对象。</p>\n<h3 id=\"6-2-构造器抛出异常\">6.2 构造器抛出异常</h3>\n<p>如果在资源说明头创建某个对象时其构造器抛出异常，结果会怎样？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Reporter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AutoCloseable</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">    Reporter() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Closing &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FirstReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SecondReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ExcepReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;</span><br><span class=\"line\">    ExcepReporter() <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoCloseableDetails</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">FirstReporter</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FirstReporter</span>();</span><br><span class=\"line\">             <span class=\"type\">ExcepReporter</span> <span class=\"variable\">er</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ExcepReporter</span>();</span><br><span class=\"line\">             <span class=\"type\">SecondReporter</span> <span class=\"variable\">sr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecondReporter</span>()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside try&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught Exception&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating ExcepReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Caught Exception</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们在资源说明头定义了三个对象，中间的对象抛出了一个异常，正因为如此，编译器强制我们提供一个 <code>catch</code> 子句来捕捉构造器的异常，这意味着资源说明头实际上是被这个 <code>try</code> 块包围的。</p>\n<p>不出所料，<code>FirstReporter</code> 顺利创建，而 <code>ExcepReporter</code> 在创建过程中抛出了一个异常。清注意 <code>ExcepReporter</code> 的 <code>close()</code> 方法没有被调用，这是因为如果构造器失败了，我们不能假定可以在这个对象上安全地执行任何操作，包括关闭它在内。因为 <code>ExcepReporter</code> 抛出了异常，所以 <code>SecondReporter</code> 对象从未被创建，也不会被清理。</p>\n<h3 id=\"6-3-try块抛出异常\">6.3 try块抛出异常</h3>\n<p>如果构造器都不会抛出异常，但是在 <code>try</code> 块中可能抛出异常，编译器又会强制我们提供一个 <code>catch</code> 子句：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Reporter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AutoCloseable</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">    Reporter() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Closing &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FirstReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SecondReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ExcepReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;</span><br><span class=\"line\">    ExcepReporter() <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoCloseableDetails</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">FirstReporter</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FirstReporter</span>()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside try&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">SecondReporter</span> <span class=\"variable\">sr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecondReporter</span>();</span><br><span class=\"line\">            <span class=\"type\">ExcepReporter</span> <span class=\"variable\">er</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ExcepReporter</span>();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;End of try&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught Exception&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside try</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating SecondReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating ExcepReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Caught Exception</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意，<code>SecondReporter</code> 对象永远不会得到清理，这是因为它不是在资源说明头中创建的，所以它的清理得不到保证。这一点很重要，因为 Java 在这里没有以警告或错误的形式给出提示，所以像这样的错误很容易被漏掉。</p>\n<h3 id=\"6-4-close-方法抛出异常\">6.4 close()方法抛出异常</h3>\n<p>最后，让我们看看在 <code>close()</code> 方法中抛出异常的情况：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Reporter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AutoCloseable</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">    Reporter() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Closing &quot;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FirstReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SecondReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ExcepReporter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Reporter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.close();</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AutoCloseableDetails</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">FirstReporter</span> <span class=\"variable\">fr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FirstReporter</span>();</span><br><span class=\"line\">             <span class=\"type\">ExcepReporter</span> <span class=\"variable\">er</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ExcepReporter</span>();</span><br><span class=\"line\">             <span class=\"type\">SecondReporter</span> <span class=\"variable\">sr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecondReporter</span>()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inside try&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught Exception&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating ExcepReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Creating SecondReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside try</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing SecondReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing ExcepReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Closing FirstReporter</span></span><br><span class=\"line\"><span class=\"comment\">         * Caught Exception</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>请注意，因为这三个对象都被创建出来了，所以它们又都以相反的顺序被关闭了，即使 <code>ExcepReporter.close()</code> 抛出了异常。当我们考虑到这一点时，这就是我们希望发生的事情，但是如果必须自己编程实现所有的逻辑，代码可能会出现漏洞，从而导致出错。因此我们应该尽可能地使用 <code>try-with-resources</code>，这个特性还能使生成的代码更干净且更容易理解。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/36775.html",
            "url": "https://asanosaki.github.io/posts/36775.html",
            "title": "Java流（Stream、Optional）详解",
            "date_published": "2023-10-28T09:23:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java8 的一个十分强大的功能：流（Stream），能够优化传统实现方式中复杂冗余的代码。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-Java8对流的支持\">1. Java8对流的支持</h2>\n<p>流是一个与任何特定的存储机制都没有关系的元素序列。不同于在集合中遍历元素，使用流的时候，我们是从一个管道中抽取元素，并对它们逬行操作。这些管道通常会被串联到一起，形成这个流上的一个操作管线。</p>\n<p>流的一个核心优点是，它们能使我们的程序更小，也更好理解。当配合流使用时，Lambda 表达式和方法引用就发挥出其威力了。流大大提升了 Java 8 的吸引力。</p>\n<p>假设我们想按照有序方式显示随机选择的5~20范围内的，不重复的整数，借助流我们只需要说明想做什么即可实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Randoms</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>)</span><br><span class=\"line\">            .ints(<span class=\"number\">5</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">            .distinct().limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .sorted()</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 6</span></span><br><span class=\"line\"><span class=\"comment\">         * 10</span></span><br><span class=\"line\"><span class=\"comment\">         * 13</span></span><br><span class=\"line\"><span class=\"comment\">         * 16</span></span><br><span class=\"line\"><span class=\"comment\">         * 18</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们先为 <code>Random</code> 对象设置一个随机种子，<code>ints()</code> 方法会生成一个流，该方法有多个重载版本，其中两个参数的版本可以设置所生成值的上下界。使用中间流操作 <code>distinct()</code> 去掉重复的值，再使用 <code>limit()</code> 选择前5个值，<code>sorted()</code> 表示元素是有序的，最后我们想显示每一个条目，所以使用了 <code>forEach()</code>，它会根据我们传递的函数，在每个流对象上执行一个操作。这里我们传递了一个方法引用 <code>System.out::println</code>，用于将每个条目显示在控制台上。</p>\n<p>使用流实现的代码我们看不到任何显式的迭代机制，因此称为<strong>内部迭代</strong>，这是流编程的一个核心特性。</p>\n<h2 id=\"2-流的创建\">2. 流的创建</h2>\n<p>使用 <code>Stream.of()</code>，可以轻松地将一组条目变成一个流：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamOf</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Stream.of(<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>).forEach(System.out::println);</span><br><span class=\"line\">        Stream.of(<span class=\"string\">&quot;Hello &quot;</span>, <span class=\"string\">&quot;World &quot;</span>, <span class=\"string\">&quot;AsanoSaki&quot;</span>).forEach(System.out::print);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 4</span></span><br><span class=\"line\"><span class=\"comment\">         * 1</span></span><br><span class=\"line\"><span class=\"comment\">         * 7</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello World AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此外，每个 <code>Collection</code> 都可以使用 <code>stream()</code> 方法来生成一个流：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x;</span><br><span class=\"line\"></span><br><span class=\"line\">    A(<span class=\"type\">int</span> x) &#123; <span class=\"built_in\">this</span>.x = x; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CollectionToStream</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;A&gt; listA = Arrays.asList(<span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">1</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">2</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\">        System.out.println(listA.stream().mapToInt(a -&gt; a.x).sum());</span><br><span class=\"line\"></span><br><span class=\"line\">        Set&lt;String&gt; st = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeSet</span>&lt;&gt;(Arrays.asList(<span class=\"string\">&quot;Hello world and java&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>)));</span><br><span class=\"line\">        System.out.println(st.stream().map(String::toUpperCase).collect(Collectors.joining(<span class=\"string\">&quot; &quot;</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, Double&gt; mp = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        mp.put(<span class=\"string\">&quot;PI&quot;</span>, <span class=\"number\">3.14</span>);</span><br><span class=\"line\">        mp.put(<span class=\"string\">&quot;E&quot;</span>, <span class=\"number\">2.718</span>);</span><br><span class=\"line\">        mp.put(<span class=\"string\">&quot;PHI&quot;</span>, <span class=\"number\">1.618</span>);</span><br><span class=\"line\">        mp.entrySet().stream()</span><br><span class=\"line\">            .map(e -&gt; e.getKey() + <span class=\"string\">&quot;: &quot;</span> + e.getValue())</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 6</span></span><br><span class=\"line\"><span class=\"comment\">         * HELLO AND JAVA WORLD</span></span><br><span class=\"line\"><span class=\"comment\">         * PHI: 1.618</span></span><br><span class=\"line\"><span class=\"comment\">         * E: 2.718</span></span><br><span class=\"line\"><span class=\"comment\">         * PI: 3.14</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在创建了一个 <code>List&lt;A&gt;</code> 之后，只需要调用一下 <code>stream()</code> 这个所有集合类都有的方法。中间的 <code>map()</code> 操作接受流中的毎个元素，在其上应用一个操作来创建一个新的元素，然后将这个新元素沿着流继续传递下去，这里的 <code>mapToInt()</code> 将一个对象流转变成了一个包含 <code>Integer</code> 的 <code>IntStream</code>。对于 <code>Float</code> 和 <code>Double</code> 也有名字类似的操作。</p>\n<p><code>collect()</code> 操作会根据其参数将所有的流元素组合起来，当我们使用 <code>Collectors.joining()</code> 时，得到的结果是一个 <code>String</code>，每个元素都会以 <code>joining()</code> 的参数分隔，还有其他很多 <code>Collectors</code>，可以生成不同的结果。</p>\n<p>为了从 <code>Map</code> 集合生成一个流，我们首先调用 <code>entrySet()</code> 来生成一个对象流，其中每个对象都包含着一个键和与其关联的值，然后再使用 <code>getKey()</code> 和 <code>getValue()</code> 将其分开。</p>\n<h3 id=\"2-1-随机数流\">2.1 随机数流</h3>\n<p><code>Ramdom</code> 类在 Java 8 引入了流，有一组可以生成流的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RandomGenerators</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">(Stream&lt;T&gt; stream)</span> &#123;</span><br><span class=\"line\">        stream.limit(<span class=\"number\">3</span>).map(x -&gt; x + <span class=\"string\">&quot; &quot;</span>).forEach(System.out::print);</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\">        show(rand.ints().boxed());</span><br><span class=\"line\">        show(rand.doubles().boxed());</span><br><span class=\"line\">        show(rand.ints(<span class=\"number\">10</span>, <span class=\"number\">20</span>).boxed());  <span class=\"comment\">// 设置上下边界</span></span><br><span class=\"line\">        show(rand.ints(<span class=\"number\">2</span>).boxed());  <span class=\"comment\">// 设置流的大小</span></span><br><span class=\"line\">        show(rand.ints(<span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">20</span>).boxed());  <span class=\"comment\">// 设置流的大小与上下边界</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * -1172028779 1717241110 -2014573909</span></span><br><span class=\"line\"><span class=\"comment\">         * 0.053412216308810656 0.5779976127815049 0.4170137422770571</span></span><br><span class=\"line\"><span class=\"comment\">         * 17 18 18</span></span><br><span class=\"line\"><span class=\"comment\">         * 1122537102 491149179</span></span><br><span class=\"line\"><span class=\"comment\">         * 19 18</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为消除冗余代码，上面的示例创建了<strong>泛型</strong>方法 <code>show(Stream&lt;T&gt; stream)</code>，这个特性在之后会讲。类型参数 <code>T</code> 可以是任何东西，所以使用 <code>Integer</code>、<code>Long</code> 和 <code>Double</code> 都可以。然而，<code>Random</code> 类只会生成 <code>int</code>、<code>long</code> 和 <code>double</code> 等基本类型的值。幸运的是，<code>boxed()</code> 流操作会自动将基本类型转换为其对应的包装器类型，使得 <code>show()</code> 能够接受这个流。</p>\n<h3 id=\"2-2-整型的区间范围\">2.2 整型的区间范围</h3>\n<p><code>IntStream</code> 类提供了一个 <code>range()</code> 方法，可以生成一个流（由 <code>int</code> 值组成的序列），在编写循环时非常方便：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.IntStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IntStreamRange</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// for-in循环</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i: IntStream.range(<span class=\"number\">1</span>, <span class=\"number\">5</span>).toArray())</span><br><span class=\"line\">            System.out.print(i + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 1 2 3 4</span></span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Stream</span></span><br><span class=\"line\">        System.out.println(IntStream.range(<span class=\"number\">1</span>, <span class=\"number\">5</span>).boxed().map(Object::toString).collect(Collectors.joining(<span class=\"string\">&quot; &quot;</span>)));  <span class=\"comment\">// 1 2 3 4</span></span><br><span class=\"line\">        IntStream.range(<span class=\"number\">1</span>, <span class=\"number\">5</span>).boxed().forEach(x -&gt; System.out.print(x + <span class=\"string\">&quot; &quot;</span>));  <span class=\"comment\">// 1 2 3 4</span></span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在我们编写一个 <code>repeat()</code> 工具函数取代简单的 <code>for</code> 循环：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.IntStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Repeat</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">repeat</span><span class=\"params\">(<span class=\"type\">int</span> n, Runnable action)</span> &#123;</span><br><span class=\"line\">        IntStream.range(<span class=\"number\">0</span>, n).forEach(i -&gt; action.run());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        repeat(<span class=\"number\">3</span>, () -&gt; System.out.println(<span class=\"string\">&quot;Lambda&quot;</span>));</span><br><span class=\"line\">        repeat(<span class=\"number\">2</span>, Repeat::hello);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Lambda</span></span><br><span class=\"line\"><span class=\"comment\">         * Lambda</span></span><br><span class=\"line\"><span class=\"comment\">         * Lambda</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-Stream-generate\">2.3 Stream.generate()</h3>\n<p><code>Stream.generate()</code> 可以接受任何的 <code>Supplier&lt;T&gt;</code>（<code>java.util.function</code> 中的接口），并生成一个由 <code>T</code> 类型的对象组成的流。如果想创建一个由完全相同的对象组成的流，只需要将一个生成这些对象的 Lambda 表达式传给 <code>generate()</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Supplier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Generator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Supplier</span>&lt;String&gt; &#123;</span><br><span class=\"line\">    <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\">    <span class=\"type\">char</span>[] letters = <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>.toCharArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">get</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(letters[rand.nextInt(letters.length)]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> Stream.generate(<span class=\"keyword\">new</span> <span class=\"title class_\">Generator</span>()).limit(<span class=\"number\">10</span>).collect(Collectors.joining());</span><br><span class=\"line\">        System.out.println(str);  <span class=\"comment\">// YNZBRNYGCF</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Stream.generate(() -&gt; <span class=\"string\">&quot;AsanoSaki&quot;</span>).limit(<span class=\"number\">2</span>).forEach(s -&gt; System.out.print(s + <span class=\"string\">&quot; &quot;</span>));  <span class=\"comment\">// AsanoSaki AsanoSaki</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-Stream-iterate\">2.4 Stream.iterate()</h3>\n<p><code>Stream.iterate()</code> 从一个种子开始（第一个参数），然后将其传给第二个参数所引用的方法，其结果被添加到这个流上，并且保存下来作为下一次 <code>iterate()</code> 调用的第一个参数，以此类推。我们可以通过迭代生成一个之前实现过的斐波那契数列：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamFibonacci</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Stream&lt;Integer&gt; <span class=\"title function_\">fib</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Stream.iterate(<span class=\"number\">0</span>, i -&gt; &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> x + i;</span><br><span class=\"line\">            x = i;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">StreamFibonacci</span>().fib().limit(<span class=\"number\">10</span>).forEach(x -&gt; System.out.print(x + <span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">StreamFibonacci</span>().fib().skip(<span class=\"number\">10</span>).limit(<span class=\"number\">10</span>).forEach(x -&gt; System.out.print(x + <span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 0 1 1 2 3 5 8 13 21 34</span></span><br><span class=\"line\"><span class=\"comment\">         * 55 89 144 233 377 610 987 1597 2584 4181</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>iterate()</code> 只会记住结果，所以必须使用 <code>x</code> 来记住另一个元素。我们使用了 <code>skip()</code> 操作，这个之前没有介绍过，它会直接丢弃由其参数指定的相应数目的流元素，这里丢弃了前10个。</p>\n<h3 id=\"2-5-流生成器\">2.5 流生成器</h3>\n<p>在<strong>生成器</strong>（Builder）设计模式中，我们创建一个生成器对象，为它提供多段构造信息，最后执行<strong>生成</strong>（build）动作。 <code>Stream</code> 库提供了这样一个 <code>Builder</code>，假设我们实现读取文件的每一行并将其转换为单词流：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileToWordsBuilder</span> &#123;</span><br><span class=\"line\">    Stream.Builder&lt;String&gt; builder = Stream.builder();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">FileToWordsBuilder</span><span class=\"params\">(String filePath)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        Files.lines(Paths.get(filePath)).forEach(line -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (String s: line.split(<span class=\"string\">&quot;[ .?,!]+&quot;</span>))</span><br><span class=\"line\">                builder.add(s);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;src/file/FileToWordsBuilder.txt&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">FileToWordsBuilder</span>(filePath).builder.build()</span><br><span class=\"line\">            .forEach(s -&gt; System.out.print(s + <span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello world Today is Saturday Have a nice day</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中的文本内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br><span class=\"line\">Today is Saturday?</span><br><span class=\"line\">Have a nice day!</span><br></pre></td></tr></table></figure>\n<p>构造器添加了文件中的所有单词，但是它没有调用 <code>build()</code>，这意味着只要不调用 <code>build()</code> 就可以继续向 <code>Builder</code> 对象中添加单词。如果在调用 <code>build()</code> 之后还尝试向 <code>Stream.Builder</code> 中添加单词，则会产生异常。</p>\n<h3 id=\"2-6-Arrays\">2.6 Arrays</h3>\n<p><code>Arrays</code> 类中包含了名为 <code>stream()</code> 的静态方法，可以将数组转换为流。可以是任何对象数组，也可以是 <code>int</code>、<code>long</code> 和 <code>double</code> 基本类型，生成 <code>IntStream</code>、<code>LongStream</code> 和 <code>DoubleStream</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArraysStream</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Arrays.stream(<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[] &#123; <span class=\"string\">&quot;ABC&quot;</span>, <span class=\"string\">&quot;XYZ&quot;</span>, <span class=\"string\">&quot;YYJ&quot;</span> &#125;)</span><br><span class=\"line\">            .forEach(s -&gt; System.out.print(s + <span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> &#125;)</span><br><span class=\"line\">            .forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(<span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[] &#123; <span class=\"number\">3.14159</span>, <span class=\"number\">2.718</span>, <span class=\"number\">1.618</span> &#125;)</span><br><span class=\"line\">            .forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%.2f &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[] &#123; <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span> &#125;, <span class=\"number\">1</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">            .forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * ABC XYZ YYJ</span></span><br><span class=\"line\"><span class=\"comment\">         * 1 2 3</span></span><br><span class=\"line\"><span class=\"comment\">         * 3.14 2.72 1.62</span></span><br><span class=\"line\"><span class=\"comment\">         * 8 7 6</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后一次调用 <code>stream()</code> 时使用了两个额外的参数，第一个表示从数组的哪个位置开始选择元素，第二个表示停止位置（开区间），即在本例中选择数组中 <code>[1, 4)</code> 的元素。</p>\n<h2 id=\"3-中间操作\">3. 中间操作</h2>\n<h3 id=\"3-1-对流元素进行排序\">3.1 对流元素进行排序</h3>\n<p>使用 <code>sorted()</code> 可以进行默认排序（从小到大），该方法也可以接受一个 <code>Comparator</code> 参数，该参数可以传入一个 Lambda 表达式也可以使用预定义好的 <code>Comparator</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamSorted</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Stream.of(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">            .sorted(Comparator.reverseOrder())</span><br><span class=\"line\">            .forEach(x -&gt; System.out.print(x + <span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 3 2 1</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-移除元素\">3.2 移除元素</h3>\n<ul>\n<li><code>distinct()</code>：移除流中的重复元素。</li>\n<li><code>filter(Predicate)</code>：过滤只保留符合特定条件的元素，即满足过滤函数 <code>Predicate</code> 为 <code>true</code> 的流元素。</li>\n</ul>\n<p>来看一个筛选素数的例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.LongStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Prime</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isPrime</span><span class=\"params\">(<span class=\"type\">long</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LongStream.rangeClosed(<span class=\"number\">2</span>, (<span class=\"type\">long</span>)Math.sqrt(n)).noneMatch(i -&gt; n % i == <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> LongStream <span class=\"title function_\">getPrime</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> LongStream.iterate(<span class=\"number\">2</span>, i -&gt; i + <span class=\"number\">1</span>).filter(Prime::isPrime);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Prime.getPrime().limit(<span class=\"number\">10</span>).forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 2 3 5 7 11 13 17 19 23 29</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>rangeClosed()</code> 包含了上界值，如果流中的元素没有任何一个取余操作的结果为0，则 <code>noneMatch()</code> 操作返回 <code>true</code>，如果有任何一个计算结果等于0，则返回 <code>false</code>。<code>noneMatch()</code> 会在第一次失败后退出，而不会把后面的所有计算都尝试一遍。</p>\n<h2 id=\"4-Optional类型\">4. Optional类型</h2>\n<p>在研究终结操作之前，我们必须考虑一个问题：如果我们向流中请求对象，但是流中什么都没有，这时会发生什么呢？有没有某种我们可以使用的对象，既可以作为流元素来占位，也可以在我们要找的元素不存在时友好地告知我们（也就是说，不会抛出异常）。</p>\n<p>这个想法被实现为 <code>Optional</code> 类型，某些标准的流操作会返回 <code>Optional</code> 对象，因为它们不能确保所要的结果一定存在，这些流操作列举如下：</p>\n<ul>\n<li><code>findFirst()</code>：返回包含第一个元素的 <code>Optional</code>。如果这个流为空，则返回 <code>Optional.empty</code>。</li>\n<li><code>findAny()</code>：返回包含任何元素的 <code>Optional</code>。如果这个流为空，则返回 <code>Optional.empty</code>。</li>\n<li><code>max()</code> 和 <code>min()</code> 分别返回包含流中最大值或最小值的 <code>Optional</code>，如果这个流为空，则返回 <code>Optional.empty</code>。</li>\n<li><code>reduce()</code> 的一个版本，它并不以一个 <code>identity</code> 对象作为其第一个参数（在 <code>reduce()</code> 的其他版本中，<code>identity</code> 对象会成为默认结果，所以不会有结果为空的风险），它会将返回值包在一个 <code>Optional</code> 中。</li>\n<li>对于数值化的流 <code>IntStream</code>、<code>LongStream</code> 和 <code>DoubleStream</code>，<code>average()</code> 操作将其结果包在一个 <code>Optional</code> 中，以防流为空的情况。</li>\n</ul>\n<p>看一下以下代码样例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Optional;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamOptional</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(Optional&lt;String&gt; stringOptional)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (stringOptional.isPresent())</span><br><span class=\"line\">            System.out.println(stringOptional.get());</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Nothing in Optional!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(Stream.&lt;String&gt;empty().findFirst());</span><br><span class=\"line\">        test(Stream.of(<span class=\"string\">&quot;Hello&quot;</span>).findFirst());</span><br><span class=\"line\">        test(Stream.&lt;String&gt;empty().findFirst());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * Nothing in Optional!</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这时不会因为流是空的而抛出异常，而是会得到一个 <code>Optional.empty</code> 对象。<code>Optional</code> 有一个 <code>toString()</code> 方法，可以显示有用的信息。</p>\n<p>注意，空流是通过 <code>Stream.&lt;String&gt;empty()</code> 创建的，如果只用了 <code>Stream.empty()</code> 而没有任何上下文信息，那么 Java 不知道它应该是什么类型的，而这种语法解决了该问题。如果编译器有足够的上下文信息，那么它可以推断出 <code>empty()</code> 调用的类型，就像下面这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stream&lt;String&gt; s = Stream.empty();</span><br></pre></td></tr></table></figure>\n<p>我们接收到一个 <code>Optional</code> 时，首先要调用 <code>isPresent()</code>，看看里面是不是有东西，如果有，再使用 <code>get()</code> 来获取。</p>\n<h3 id=\"4-1-便捷函数\">4.1 便捷函数</h3>\n<p>有很多便捷函数，可用于获取 <code>Optional</code> 中的数据，它们简化了上面先检查再处理所包含对象的过程：</p>\n<ul>\n<li><code>ifPresent(Consumer)</code>：如果对象存在，则用这个对象来调用 <code>Consumer</code>，否则什么都不做。</li>\n<li><code>orElse(otherObject)</code>：如果对象存在，则返回这个对象，否则返回 <code>otherObject</code>。</li>\n<li><code>orElseGet(Supplier)</code>：如果对象存在，则返回这个对象，否则返回使用 <code>Supplier</code> 函数创建的替代<strong>对象</strong>。</li>\n<li><code>orElseThrow(Supplier)</code>：如果对象存在，则返回这个对象，否则抛出一个使用 <code>Supplier</code> 函数创建的<strong>异常</strong>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Optional;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OptionalFunctions</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Optional&lt;String&gt; emptyOptional = Stream.&lt;String&gt;empty().findFirst();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Optional&lt;String&gt; stringOptional = Stream.of(<span class=\"string\">&quot;Hello&quot;</span>).findFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------- ifPresent ----------&quot;</span>);</span><br><span class=\"line\">        emptyOptional.ifPresent(System.out::println);</span><br><span class=\"line\">        stringOptional.ifPresent(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------- orElse ----------&quot;</span>);</span><br><span class=\"line\">        System.out.println(emptyOptional.orElse(<span class=\"string\">&quot;Other String&quot;</span>));</span><br><span class=\"line\">        System.out.println(stringOptional.orElse(<span class=\"string\">&quot;Other String&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------- orElseGet ----------&quot;</span>);</span><br><span class=\"line\">        System.out.println(emptyOptional.orElseGet(() -&gt; <span class=\"string\">&quot;Other Supplier Object&quot;</span>));</span><br><span class=\"line\">        System.out.println(stringOptional.orElseGet(() -&gt; <span class=\"string\">&quot;Other Supplier Object&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------- orElseThrow ----------&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(stringOptional.orElseThrow(() -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>(<span class=\"string\">&quot;Supplier Exception&quot;</span>)));  <span class=\"comment\">// 先执行非空Optional</span></span><br><span class=\"line\">            System.out.println(emptyOptional.orElseThrow(() -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>(<span class=\"string\">&quot;Supplier Exception&quot;</span>)));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Caught&quot;</span> + e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * ---------- ifPresent ----------</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * ---------- orElse ----------</span></span><br><span class=\"line\"><span class=\"comment\">         * Other String</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * ---------- orElseGet ----------</span></span><br><span class=\"line\"><span class=\"comment\">         * Other Supplier Object</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * ---------- orElseThrow ----------</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * Caughtjava.lang.Exception: Supplier Exception</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-创建Optional\">4.2 创建Optional</h3>\n<p>当需要自己编写生成 <code>Optional</code> 的代码时，有如下三种可以使用的静态方法：</p>\n<ul>\n<li><code>empty()</code>：返回一个空的 <code>Optional</code>。</li>\n<li><code>of(value)</code>：如果已经知道这个 <code>value</code> 不为 <code>null</code>，可以使用该方法将其包在一个 <code>Optional</code> 中。</li>\n<li><code>ofNullable(value)</code>：如果不知道这个 <code>value</code> 是不是 <code>null</code>，可以使用这个方法，如果 <code>value</code> 为 <code>null</code>，它会自动返回 <code>Optional.empty</code>，否则会将这个 <code>value</code> 包在一个 <code>Optional</code> 中。</li>\n</ul>\n<p>来看一下示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Optional;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CreatingOptionals</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Optional&lt;String&gt;</span><br><span class=\"line\">        stringOptional = Optional.of(<span class=\"string\">&quot;Hello&quot;</span>),</span><br><span class=\"line\">        emptyOptional = Optional.empty(),</span><br><span class=\"line\">        nullOptional = Optional.ofNullable(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(stringOptional.orElse(<span class=\"string\">&quot;Empty&quot;</span>));</span><br><span class=\"line\">        System.out.println(emptyOptional.orElse(<span class=\"string\">&quot;Empty&quot;</span>));</span><br><span class=\"line\">        System.out.println(nullOptional.orElse(<span class=\"string\">&quot;Empty&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Hello</span></span><br><span class=\"line\"><span class=\"comment\">     * Empty</span></span><br><span class=\"line\"><span class=\"comment\">     * Empty</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-Optional对象上的操作\">4.3 Optional对象上的操作</h3>\n<p>有三种方法支持对 <code>Optional</code> 进行事后处理，所以如果你的流管线生成了一个 <code>Optional</code>，你可以在最后再做一项处理：</p>\n<ul>\n<li><code>filter(Predicate)</code>：将 <code>Predicate</code> 应用于 <code>Optional</code> 的内容，并返回其结果。如果 <code>Optional</code> 与 <code>Predicate</code> 不匹配，则将其转换为 <code>empty</code>。如果 <code>Optional</code> 本身已经是 <code>empty</code>，则直接传回。</li>\n<li><code>map(Function)</code>：如果 <code>Optional</code> 不为 <code>empty</code>，则将 <code>Function</code> 应用于 <code>Optional</code> 中包含的对象，并返回结果，否则传回 <code>Optional.empty</code>。</li>\n<li><code>flatMap(Function)</code>：和 <code>map()</code> 类似，但是所提供的映射函数会将结果包在 <code>Optional</code> 中，这样 <code>flatMap()</code> 最后就不会再做任何包装了。</li>\n</ul>\n<p>数值化的 <code>Optional</code> 上没有提供这些操作。</p>\n<p>我们来看一下 <code>filter</code> 的用法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OptionalFilter</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String[] elements = &#123; <span class=\"string\">&quot;Dog&quot;</span>, <span class=\"string\">&quot;Cat&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;Bird&quot;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= elements.length; i++)</span><br><span class=\"line\">            System.out.println(</span><br><span class=\"line\">                Arrays.stream(elements)</span><br><span class=\"line\">                    .skip(i)</span><br><span class=\"line\">                    .findFirst()</span><br><span class=\"line\">                    .filter(s -&gt; s.length() == <span class=\"number\">3</span>)</span><br><span class=\"line\">            );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional[Dog]</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional[Cat]</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尽管输出看上去像是一个流，其实每次进入 <code>for</code> 循环，它都会重新获得一个流，并跳过用 <code>for</code> 循环的索引设置的元素数，这就使其看上去像流中的连续元素，然后它执行 <code>findFirst()</code>，获得剩余元素的中的第一个，它会被包在一个 <code>Optional</code> 中返回。</p>\n<p>注意，我们的 <code>for</code> 循环是循环到 <code>i == elements.length</code>，因此最后一个元素会超出这个流。不过这会自动变为 <code>Optional.empty</code>。</p>\n<h3 id=\"4-4-由Optional组成的流\">4.4 由Optional组成的流</h3>\n<p>假设有一个可能会生成 <code>null</code> 值的生成器，如果使用这个生成器创建了一个流，我们自然想将这些元素包在 <code>Optional</code> 中，当使用这个流时，我们必须弄清楚如何获得 <code>Optional</code> 中的对象：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Optional;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Signal</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String msg;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    Signal(String msg) &#123; <span class=\"built_in\">this</span>.msg = msg; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Signal(&quot;</span> + msg + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Signal <span class=\"title function_\">getSignal</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (rand.nextInt(<span class=\"number\">4</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Signal</span>(<span class=\"string\">&quot;Case 1&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>: <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Signal</span>(<span class=\"string\">&quot;Case 2&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Stream&lt;Optional&lt;Signal&gt;&gt; <span class=\"title function_\">getSignalOptStream</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Stream.generate(Signal::getSignal).map(Optional::ofNullable);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StreamOfOptionals</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Signal.getSignalOptStream().limit(<span class=\"number\">5</span>).forEach(System.out::println);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------&quot;</span>);</span><br><span class=\"line\">        Signal.getSignalOptStream().limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .filter(Optional::isPresent)</span><br><span class=\"line\">            .map(Optional::get)</span><br><span class=\"line\">            .forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional[Signal(Case 2)]</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional[Signal(Case 1)]</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional[Signal(Case 2)]</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         * Optional.empty</span></span><br><span class=\"line\"><span class=\"comment\">         * --------------------</span></span><br><span class=\"line\"><span class=\"comment\">         * Signal(Case 2)</span></span><br><span class=\"line\"><span class=\"comment\">         * Signal(Case 1)</span></span><br><span class=\"line\"><span class=\"comment\">         * Signal(Case 2)</span></span><br><span class=\"line\"><span class=\"comment\">         * Signal(Case 2)</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里我使用了 只保留非 <code>empty</code> 的 <code>Optional</code>，然后通过 <code>map()</code> 调用 <code>get()</code> 来获得包在其中的对象，因为每种情况都需要我们来决定“没有值”的含义，所以我们通常需要针对每种应用采取不同的方法。</p>\n<h2 id=\"5-终结操作\">5. 终结操作</h2>\n<p>这些操作接受一个流，并生成一个最终结果，它们不会再把任何东西发给某个后端的流。因此，终结操作总是我们在一个管线内可以做的最后一件事。</p>\n<h3 id=\"5-1-将流转换为一个数组\">5.1 将流转换为一个数组</h3>\n<ul>\n<li><code>toArray()</code>：将流元素转换到适当类型的数组中。</li>\n<li><code>toArray(generator)</code>：<code>generator</code> 用于在特定情况下分配自己的数组存储。</li>\n</ul>\n<p>直接看样例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RandInts</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] nums = <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>).ints(<span class=\"number\">0</span>, <span class=\"number\">10</span>).limit(<span class=\"number\">10</span>).toArray();</span><br><span class=\"line\">        System.out.println(Arrays.toString(nums));  <span class=\"comment\">// [8, 5, 3, 1, 1, 9, 8, 0, 2, 7]</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-在每个流元素上应用某个终结操作\">5.2 在每个流元素上应用某个终结操作</h3>\n<ul>\n<li><code>forEach(Consumer)</code>：这种用法我们已经看到过很多次了，即以 <code>System.out::println</code> 作为 <code>Consumer</code> 函数。</li>\n<li><code>forEachOrdered(Consumer)</code>：这个版本确保 <code>forEach</code> 对元素的操作顺序是原始的流的顺序。</li>\n</ul>\n<p>第一种形式被明确地设计为可以以任何顺序操作元素，这只有在引入 <code>parallel()</code> 操作时才有意义。<code>parallel()</code> 让 Java 尝试在多个处理器上执行操作。它可以做到这一点，正是因为使用了流，它可以将流分割为多个流（通常情况是每个处理器一个流），并在不同的处理器上运行每个流。</p>\n<p>我们在以下示例中引入 <code>parallel()</code> 来了解 <code>forEachOrdered()</code> 的作用和必要性：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForEachOrdered</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] nums = <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>).ints(<span class=\"number\">0</span>, <span class=\"number\">10</span>).limit(<span class=\"number\">10</span>).toArray();  <span class=\"comment\">// 确保每次流元素都相同</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(nums).forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(nums).parallel().forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.stream(nums).parallel().forEachOrdered(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * 8 5 3 1 1 9 8 0 2 7</span></span><br><span class=\"line\"><span class=\"comment\">         * 8 9 0 7 2 3 5 1 8 1</span></span><br><span class=\"line\"><span class=\"comment\">         * 8 5 3 1 1 9 8 0 2 7</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在第一个流中，我们没有使用 <code>parallel()</code>，所以结果的显示顺序就是它们从 <code>Arrays.stream(nums)</code> 中出现的顺序。第二个流引入了 <code>parallel()</code>，即便是这么小的一个流，我们也可以看到输出的顺序和之前不一样了。这是因为有多个处理器在处理这个问题，而且如果多次运行这个程序，会发现每次的输出还会有所不同，原因在于多个处理器同时处理这个问题所带来的不确定性因素。</p>\n<p>最后一个流仍然使用了 <code>parallel()</code>，但是又使用 <code>forEachOrdered()</code> 来强制结果回到原始的顺序。因此，对于非 <code>parallel()</code> 的流，使用 <code>forEachOrdered()</code> 不会有任何影响。</p>\n<h3 id=\"5-3-收集操作\">5.3 收集操作</h3>\n<ul>\n<li><code>collect(Collector)</code>：使用这个 <code>Collector</code> 将流元素累加到一个结果集合中。</li>\n<li><code>collect(Supplier, BiConsumer, BiConsumer)</code>：和上面类似，但是 <code>Supplier</code> 会创建一个新的结果集合，第一个 <code>BiConsumer</code> 是用来将下一个元素包含到结果中的函数，第二个 <code>BiConsumer</code> 用于将两个值组合起来。</li>\n</ul>\n<p>我们之前仅仅看到了 <code>Collectors</code> 对象的几个示例，我们可以将流元素收集到任何特定种类的集合中。假设想把我们的条目最终放到一个 <code>TreeSet</code> 中，由此使它们总是有序的。在 <code>Collectors</code> 中没有特定的 <code>toTreeSet()</code> 方法，只有 <code>toSet()</code>，但是可以使用 <code>Collectors.toCollection()</code>，并将任何类型的 <code>Collection</code> 的构造器引用传给它。下面的程序提取文件中的单词放到 <code>TreeSet</code> 中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Collectors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TreeSetOfWords</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">filePath</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;src/file/FileToWordsBuilder.txt&quot;</span>;</span><br><span class=\"line\">        Set&lt;String&gt; words = Files.lines(Paths.get(filePath))</span><br><span class=\"line\">            .flatMap(line -&gt; Arrays.stream(line.split(<span class=\"string\">&quot;\\\\W+&quot;</span>)))</span><br><span class=\"line\">            .filter(word -&gt; !word.matches(<span class=\"string\">&quot;\\\\d+&quot;</span>))</span><br><span class=\"line\">            .map(String::trim)</span><br><span class=\"line\">            .collect(Collectors.toCollection(TreeSet::<span class=\"keyword\">new</span>));</span><br><span class=\"line\">        System.out.println(words);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * [Have, Hello, Saturday, This, Today, a, day, digit, is, nice, world]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>FileToWordsBuilder.txt</code> 文件内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br><span class=\"line\">Today is Saturday?</span><br><span class=\"line\">Have a nice day!</span><br><span class=\"line\">This is digit 666.</span><br></pre></td></tr></table></figure>\n<p><code>Files.lines()</code> 打开 <code>Path</code> 所指向的文件，并将其变为由文本行组成的 <code>Stream</code>。它的下一行代码以一个或多个非单词字符（<code>\\\\W+</code>）为边界来分割这些文本行，这里生成的数组通过 <code>Arrays.stream()</code> 变为 <code>Stream</code>，然后其结果又被展开映射回一个由单词组成的 <code>Stream</code>。<code>matches(\\\\d+)</code> 会找到并删除全是数字的 <code>String</code>。接下来使用 <code>String.trim()</code> 去除周围可能存在的任何空白，最后把这些单词放到一个 <code>TreeSet</code> 中。</p>\n<h3 id=\"5-4-组合所有的流元素\">5.4 组合所有的流元素</h3>\n<ul>\n<li><code>reduce(BinaryOperator)</code>：使用 <code>BinaryOperator</code> 来组合所有的流元素，因为这个流可能为空，所以返回的是一个 <code>Optional</code>。</li>\n<li><code>reduce(identity, BinaryOperator)</code>：和上面一样，但是将 <code>identity</code> 用作这个组合的初始值，因此，即使这个流是空的，我们仍然能得到 <code>identity</code> 作为结果。</li>\n<li><code>reduce(identity, BiFunction, BinaryOperator)</code>：这个更复杂（所以我们不会介绍），但是之所以把它列在这里，是因为它可能更高效。可以通过组合显式的 <code>map()</code> 和 <code>reduce()</code> 操作来更简单地表达这种需求。</li>\n</ul>\n<p>来看一下最简单的用法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.stream.Stream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Apple</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> price;</span><br><span class=\"line\"></span><br><span class=\"line\">    Apple(<span class=\"type\">int</span> price) &#123; <span class=\"built_in\">this</span>.price = price; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">getPrice</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> price; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Apple(&quot;</span> + price + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 生成器</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Random</span> <span class=\"variable\">rand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>(<span class=\"number\">47</span>);</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Apple <span class=\"title function_\">generator</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Apple</span>(rand.nextInt(<span class=\"number\">100</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Reduce</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Stream.generate(Apple::generator)</span><br><span class=\"line\">            .limit(<span class=\"number\">5</span>)</span><br><span class=\"line\">            .peek(a -&gt; System.out.println(<span class=\"string\">&quot;Peek: &quot;</span> + a))</span><br><span class=\"line\">            .reduce((a0, a1) -&gt; a0.getPrice() &gt; <span class=\"number\">60</span> ? a0 : a1)</span><br><span class=\"line\">            .ifPresent(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Peek: Apple(58)</span></span><br><span class=\"line\"><span class=\"comment\">         * Peek: Apple(55)</span></span><br><span class=\"line\"><span class=\"comment\">         * Peek: Apple(93)</span></span><br><span class=\"line\"><span class=\"comment\">         * Peek: Apple(61)</span></span><br><span class=\"line\"><span class=\"comment\">         * Peek: Apple(61)</span></span><br><span class=\"line\"><span class=\"comment\">         * Apple(93)</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们在使用 <code>reduce()</code> 时，没有提供作为<strong>初始值</strong>的第一个参数，这意味着它会生成一个 <code>Optional</code>，只有当结果不是 <code>empty</code> 时，<code>Optional.ifPresent()</code> 方法才会调用 <code>Consumer&lt;Apple&gt;</code>（之所以 <code>System.out::println</code> 能够符合，是因为它可以通过 <code>toString()</code> 方法将 <code>Apple</code> 转化为一个 <code>String</code>）。</p>\n<p>Lambda 表达式中的第一个参数 <code>a0</code> 是上次调用这个 <code>reduce()</code> 时带回的结果，第二个参数 <code>a1</code> 是来自流中的新值。如果 <code>a0</code> 的 <code>price</code> 大于60就接受 <code>a0</code>，否则就接受 <code>a1</code>，也就是序列中的下一个元素。</p>\n<p>作为结果，我们得到的是流中第一个 <code>price</code> 大于60的 <code>Apple</code>，一旦找到了一个这样的对象，它就会抓住不放，哪怕还会出现其他候选。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/731.html",
            "url": "https://asanosaki.github.io/posts/731.html",
            "title": "Java函数式编程（Lambda表达式、方法引用）详解",
            "date_published": "2023-10-26T09:16:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java8 中的函数式编程方式，结合代码示例详细地讲解了什么是 Lambda 表达式与方法引用。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-新方式与旧方式的对比\">1. 新方式与旧方式的对比</h2>\n<p>通常情况下，方法会根据所传递的数据产生不同的结果。如果想让一个方法在每次调用时都有不同的表现呢？如果将代码传递给方法，就可以控制其行为。</p>\n<p>以前的做法是，创建一个对象，让它的一个方法包含所需行为，然后将这个对象传递给我们想控制的方法。下面的示例演示了这一点，然后增加了 Java 8 的实现方式：方法引用和 Lambda 表达式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Strategy</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">approach</span><span class=\"params\">(String msg)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DefaultStrategy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Strategy</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">approach</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg.toLowerCase() + <span class=\"string\">&quot;?&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Unrelated</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">twice</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg + <span class=\"string\">&quot; &quot;</span> + msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Strategize</span> &#123;</span><br><span class=\"line\">    Strategy strategy;</span><br><span class=\"line\">    String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    Strategize(String msg) &#123;</span><br><span class=\"line\">        strategy = <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultStrategy</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(strategy.approach(msg));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">changeStrategy</span><span class=\"params\">(Strategy strategy)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.strategy = strategy;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Strategize</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Strategize</span>(<span class=\"string\">&quot;Hello world&quot;</span>);</span><br><span class=\"line\">        s.f();  <span class=\"comment\">// hello world?</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Strategy[] strategies = &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Strategy</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> String <span class=\"title function_\">approach</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> msg.toUpperCase() + <span class=\"string\">&quot;!&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,  <span class=\"comment\">// 匿名内部类</span></span><br><span class=\"line\">            msg -&gt; msg.substring(<span class=\"number\">0</span>, <span class=\"number\">5</span>),  <span class=\"comment\">// Lambda表达式</span></span><br><span class=\"line\">            Unrelated::twice  <span class=\"comment\">// 方法引用</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Strategy newStrategy: strategies) &#123;</span><br><span class=\"line\">            s.changeStrategy(newStrategy);</span><br><span class=\"line\">            s.f();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * HELLO WORLD!</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello world Hello world</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Strategy</code> 提供了接口，功能是通过其中唯一的 <code>approach()</code> 方法来承载的，通过创建不同的 <code>Strategy</code> 对象，我们可以创建不同的行为。</p>\n<p>传统上，我们通过定义一个实现了 <code>Strategy</code> 接口的类来完成这种行为，比如 <code>DefaultStrategy</code>。更简洁、自然的方式是创建一个匿名内部类，不过这样仍然会存在一定数量的重复代码，而且我们总是要花点功夫才能明白这里是在使用匿名内部类。</p>\n<p>Java 8 的 Lambda 表达式突出的特点是用箭头 <code>-&gt;</code> 将参数和函数体分隔开来，箭头右边是从 Lambda 返回的表达式，这和类定义以及匿名内部类实现了同样的效果，但是代码要少得多。</p>\n<p>Java 8 的方法引用是用 <code>::</code>，左边是类名或对象名，右边是方法名，但是没有参数列表。</p>\n<h2 id=\"2-Lambda表达式\">2. Lambda表达式</h2>\n<p>Lambda 表达式是使用尽可能少的语法编写的函数定义。Lambda 表达式产生的是函数，而不是类，在 Java 虚拟机（JVM）上，一切都是类，所以幕后会有各种各样的操作让 Lambda 看起来像函数。</p>\n<p>任何 Lambda 表达式的基本语法如下：</p>\n<ol>\n<li>参数；</li>\n<li>之后跟一个 <code>-&gt;</code>，可以读作“产生”；</li>\n<li><code>-&gt;</code> 后面跟一个方法体。</li>\n</ol>\n<p>需要注意以下几个方面：</p>\n<ul>\n<li>如果只有一个参数，可以只写这个参数，不写括号，也可以使用括号，尽管这种方式更不常见。</li>\n<li>如果有多个参数，将它们放在使用括号包裹起来的参数列表内。</li>\n<li>如果没有参数，必须使用括号来指示空的参数列表。</li>\n<li>如果方法体只有一行，那么方法体中表达式的结果会自动成为 Lambda 表达式的返回值，不能使用 <code>return</code>。</li>\n<li>如果 Lambda 表达式需要多行代码，则必须将这些代玛行放到 <code>&#123;&#125;</code> 中，这种情况下需要使用 <code>return</code> 从 Lambda 表达式生成一个值。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Description</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">f</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Body</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">f</span><span class=\"params\">(String str)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Multi</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">f</span><span class=\"params\">(String str, <span class=\"type\">int</span> x)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LambdaExpressions</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Description</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> () -&gt; <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Body</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> s -&gt; <span class=\"string\">&quot;Hello &quot;</span> + s;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Body</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> (s) -&gt; <span class=\"string\">&quot;Hello &quot;</span> + s;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">Multi</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> (s, x) -&gt; &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Multi&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello &quot;</span> + s + <span class=\"string\">&quot; &quot;</span> + x;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(d.f());</span><br><span class=\"line\">        System.out.println(b1.f(<span class=\"string\">&quot;AsanoSaki&quot;</span>));</span><br><span class=\"line\">        System.out.println(b2.f(<span class=\"string\">&quot;AsanoSaki&quot;</span>));</span><br><span class=\"line\">        System.out.println(m.f(<span class=\"string\">&quot;AsanoSaki&quot;</span>, <span class=\"number\">666</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello World!</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * Multi</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello AsanoSaki 666</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>递归意味着一个函数调用了自身。在 Java 中也可以编写递归的 Lambda 表达式，但是要注意这个 Lambda 表达式必须被赋值给一个静态变量或一个实例变星，否则会出现编译错误：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Factorial</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">f</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RecursiveFactorial</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Factorial fact;  <span class=\"comment\">// 需要将Lambda表达式赋值给一个静态变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        fact = n -&gt; n == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : n * fact.f(n - <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">            System.out.print(fact.f(i) + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 1 1 2 6 24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>请注意，不能在定义的时候像这样来初始化 <code>fact</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"type\">Factorial</span> <span class=\"variable\">fact</span> <span class=\"operator\">=</span> n -&gt; n == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : n * fact.f(n - <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p>尽管这样的期望非常合理，但是对于 Java 编译器而言处理起来太复杂了，所以会产生编译错误。</p>\n<p>现在我们再用递归的 Lambda 表达式实现斐波那契数列，这次使用实例变量，用构造器来初始化：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Fibonacci</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">f</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RecursiveFibonacci</span> &#123;</span><br><span class=\"line\">    Fibonacci fib;</span><br><span class=\"line\"></span><br><span class=\"line\">    RecursiveFibonacci() &#123;  <span class=\"comment\">// 构造器内初始化Fibonacci</span></span><br><span class=\"line\">        fib = n -&gt; n == <span class=\"number\">0</span> ? <span class=\"number\">0</span> : n == <span class=\"number\">1</span> ? <span class=\"number\">1</span> : fib.f(n - <span class=\"number\">2</span>) + fib.f(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">RecursiveFibonacci</span> <span class=\"variable\">rf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RecursiveFibonacci</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">            System.out.print(rf.fib.f(i) + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 0 1 1 2 3 5 8 13 21 34</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-方法引用\">3. 方法引用</h2>\n<p>Java 8 方法引用指向的是方法，没有之前 Java 版本的历史包袱，方法引用是用类名或对象名，后面跟 <code>::</code>，然后跟方法名：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Callable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">(String s)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Print</span> &#123;  <span class=\"comment\">// 非静态类</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">(String s)</span> &#123;  <span class=\"comment\">// 签名和call()一致</span></span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodReferences</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hello</span><span class=\"params\">(String s)</span> &#123;  <span class=\"comment\">// 静态方法引用</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello &quot;</span> + s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GoodMorning</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">void</span> <span class=\"title function_\">goodMorning</span><span class=\"params\">(String s)</span> &#123;  <span class=\"comment\">// 静态内部类的非静态方法</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Good morning &quot;</span> + s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GoodEvening</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">goodEvening</span><span class=\"params\">(String s)</span> &#123;  <span class=\"comment\">// 静态内部类的静态方法</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Good evening &quot;</span> + s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Print</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Print</span>();</span><br><span class=\"line\">        <span class=\"type\">Callable</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> p::print;</span><br><span class=\"line\">        c.call(<span class=\"string\">&quot;AsanoSaki&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        c = MethodReferences::hello;</span><br><span class=\"line\">        c.call(<span class=\"string\">&quot;AsanoSaki&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        c = <span class=\"keyword\">new</span> <span class=\"title class_\">GoodMorning</span>()::goodMorning;</span><br><span class=\"line\">        c.call(<span class=\"string\">&quot;AsanoSaki&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        c = GoodEvening::goodEvening;</span><br><span class=\"line\">        c.call(<span class=\"string\">&quot;AsanoSaki&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * Hello AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * Good morning AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         * Good evening AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-Runnable\">3.1 Runnable</h3>\n<p><code>java.lang</code> 包中的 <code>Runnable</code> 接口也遵从特殊的单方法接口格式，其 <code>run()</code> 方法没有参数，也没有返回值，所以我们可以将 Lambda 表达式或方法引用用作 <code>Runnable</code>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">RunnableReference</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;RunnableReference::f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RunnableMethodReference</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Thread对象接受一个Runnable作为其构造器参数</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Runnable</span>() &#123;  <span class=\"comment\">// 匿名内部类</span></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Anonymous&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).start();  <span class=\"comment\">// start()方法会调用run()</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(  <span class=\"comment\">// Lambda表达式</span></span><br><span class=\"line\">            () -&gt; System.out.println(<span class=\"string\">&quot;Lambda&quot;</span>)</span><br><span class=\"line\">        ).start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(RunnableReference::f).start();  <span class=\"comment\">// 方法引用</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Anonymous</span></span><br><span class=\"line\"><span class=\"comment\">         * Lambda</span></span><br><span class=\"line\"><span class=\"comment\">         * RunnableReference::f()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-未绑定方法引用\">3.2 未绑定方法引用</h3>\n<p>未绑定方法引用（unbound method reference）指的是尚未关联到某个对象的普通（非静态）方法，对于未绑定引用，必须先提供对象，然后才能使用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"string\">&quot;A::f()&quot;</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">GetStringUnbound</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">get</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">GetStringBoundA</span> &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">get</span><span class=\"params\">(A a)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UnboundMethodReference</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">GetStringBoundA</span> <span class=\"variable\">g</span> <span class=\"operator\">=</span> A::f;</span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(a.f());  <span class=\"comment\">// A::f()</span></span><br><span class=\"line\">        System.out.println(g.get(a));  <span class=\"comment\">// A::f()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果我们按以下方式将 <code>A::f</code> 赋值给 <code>GetStringUnbound</code> 编译器会报错，即使 <code>get()</code> 的签名和 <code>f()</code> 相同。问题在于，这里事实上还涉及另一个（隐藏的）参数：我们的老朋友 <code>this</code>。如果没有一个可供附着的 <code>A</code> 对象，就无法调用 <code>f()</code>。因此，<code>A::f</code> 代表的是一个未绑定方法引用，因为它没有绑定到某个对象。</p>\n<p>为解决这个冋题，我们需要一个 <code>A</code> 对象，所以我们的接口事实上还需要一个额外的参数，如 <code>GetStringBoundA</code> 中所示，如果将 <code>A::f</code> 赋值给一个 <code>GetStringBoundA</code>，Java 则会幵心地接受。在未绑定引用的情况下，函数式方法（接口中的单一方法）的签名与方法引用的签名不再完全匹配，这样做有一个很好的理由，那就是我们需要一个对象，让方法在其上调用。</p>\n<p>在 <code>g.get(a)</code> 中我们接受了未绑定引用，然后以 <code>A</code> 为参数在其上调用了 <code>get()</code>，最终以某种方式调用了 <code>a.f()</code>。Java 知道它必须接受第一个参数，事实上就是 <code>this</code>，并在它的上面调用该方法。</p>\n<p>如果方法有更多参数，只要遵循第一个参数取的是 <code>this</code> 这种模式即可，即对于本例来说第一个参数为 <code>A</code> 即可。</p>\n<h3 id=\"3-3-构造器方法引用\">3.3 构造器方法引用</h3>\n<p>我们也可以捕获对某个构造器的引用，之后通过该引用来调用那个构造器：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> &#123;</span><br><span class=\"line\">    String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    Cat() &#123; name = <span class=\"string\">&quot;Kitty&quot;</span>; &#125;  <span class=\"comment\">// 无参构造器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Cat(String name) &#123; <span class=\"built_in\">this</span>.name = name; &#125;  <span class=\"comment\">// 有参构造器</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">MakeCatNoArgs</span> &#123;</span><br><span class=\"line\">    Cat <span class=\"title function_\">makeCat</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">MakeCatWithArgs</span> &#123;</span><br><span class=\"line\">    Cat <span class=\"title function_\">makeCat</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConstructorReference</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MakeCatNoArgs</span> <span class=\"variable\">m1</span> <span class=\"operator\">=</span> Cat::<span class=\"keyword\">new</span>;  <span class=\"comment\">// 所有构造器名字都是new，编译器可以从接口来推断使用哪个构造器</span></span><br><span class=\"line\">        <span class=\"type\">MakeCatWithArgs</span> <span class=\"variable\">m2</span> <span class=\"operator\">=</span> Cat::<span class=\"keyword\">new</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Cat</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> m1.makeCat();  <span class=\"comment\">// 调用此处的函数式接口方法makeCat()意味着调用构造器Cat::new</span></span><br><span class=\"line\">        <span class=\"type\">Cat</span> <span class=\"variable\">c2</span> <span class=\"operator\">=</span> m2.makeCat(<span class=\"string\">&quot;Lucy&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-函数式接口\">4. 函数式接口</h2>\n<p>方法引用和 Lambda 表达式都必须赋值，而这些赋值都需要类型信息，让编译器确保类型的正确性，尤其是 Lambda 表达式，又引入了新的要求，考虑如下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x -&gt; x.toString()</span><br></pre></td></tr></table></figure>\n<p>我们看到返回类型必须是 <code>String</code>，但是 <code>x</code> 是什么类型呢？因为 Lambda 表达式包含了某种形式的<strong>类型推断</strong>（编译器推断出类型的某些信息，而不需要程序员显式指定），所以编译器必须能够以某种方式推断出 <code>x</code> 的类型。</p>\n<p>下面是第二个示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(x, y) -&gt; x + y</span><br></pre></td></tr></table></figure>\n<p>现在 <code>x</code> 和 <code>y</code> 可以是支持 <code>+</code> 操作符的任何类型，包括两种不同的数值类型，或者是一个 <code>String</code> 和某个能够自动转换为 <code>String</code> 的其他类型。</p>\n<p>Java 8 引入了包含一组接口的 <code>java.util.function</code>，这些接口是 Lambda 表达式和方法引用的目标类型，每个接口都只包含一个抽象方法，叫作<strong>函数式方法</strong>。当编写接口时，这种函数式方法模式可以使用 <code>@FunctionalInterface</code> 注解来强制实施：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">FunctionalPrint</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">(String s)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">NotFunctional</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f1</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f2</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;  <span class=\"comment\">// 编译器会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FunctionalAnnotation</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hello</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello &quot;</span> + s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">FunctionalAnnotation</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FunctionalAnnotation</span>();</span><br><span class=\"line\">        <span class=\"type\">FunctionalPrint</span> <span class=\"variable\">fp</span> <span class=\"operator\">=</span> f::hello;</span><br><span class=\"line\">        fp.print(<span class=\"string\">&quot;AsanoSaki&quot;</span>);  <span class=\"comment\">// Hello AsanoSaki</span></span><br><span class=\"line\"></span><br><span class=\"line\">        fp = s -&gt; System.out.println(<span class=\"string\">&quot;Hi &quot;</span> + s);</span><br><span class=\"line\">        fp.print(<span class=\"string\">&quot;AsanoSaki&quot;</span>);  <span class=\"comment\">// Hi AsanoSaki</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>@FunctionalInterface</code> 注解是可选的，Java 会将 <code>main()</code> 中的 <code>FunctionalPrint</code> 看作函数式接口。在 <code>NotFunctional</code> 接口的定义中我们可以看到 <code>@FunctionalInterface</code> 的作用：如果接口中的方法多于一个，则会产生一条编译错误信息。</p>\n<p>现在我们仔细看一下 <code>fp</code> 的定义中发生了什么，<code>FunctionalPrint</code> 定义了接口，然而被赋值给它们的只是方法 <code>hello()</code>，而不是类，它甚至不是实现了这里定义的某个接口的类中的方法。这是 Java 8 增加的一个小魔法：如果我们将一个方法引用或 Lambda 表达式赋值给某个函数式接口（而且类型可以匹配），那么 Java 会调整这个赋值，使其匹配目标接口。而在底层，Java 编译器会创建一个<strong>实现了目标接口的类的实例</strong>，并将我们的方法引用或 Lambda 表达式包裹在其中。</p>\n<p>使用了 <code>@FunctionalInterface</code> 注解的接口也叫作<strong>单一抽象方法</strong>（Single Abstract Method，SAM）类型。</p>\n<h3 id=\"4-1-默认目标接口\">4.1 默认目标接口</h3>\n<p><code>java.util.function</code> 旨在创建一套足够完备的目标接口，这样一般情况下我们就不需要定义自己的接口了。这一套接口的命名遵循一定的规律，一般来说通过名字就可以了解特定的接口是做什么的，部分接口示例如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.BiConsumer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.DoubleFunction;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Function;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.IntToDoubleFunction;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FunctionVariants</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Function&lt;Integer, String&gt; f = x -&gt; <span class=\"string\">&quot;Function &quot;</span> + x;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> DoubleFunction&lt;String&gt; df = x -&gt; <span class=\"string\">&quot;DoubleFunction &quot;</span> + x;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">IntToDoubleFunction</span> <span class=\"variable\">itdf</span> <span class=\"operator\">=</span> x -&gt; x / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> BiConsumer&lt;Integer, String&gt; bc = (x, s) -&gt; System.out.println(<span class=\"string\">&quot;BiConsumer &quot;</span> + x + <span class=\"string\">&quot; &quot;</span> + s);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(f.apply(<span class=\"number\">6</span>));  <span class=\"comment\">// Function 6</span></span><br><span class=\"line\">        System.out.println(df.apply(<span class=\"number\">6</span>));  <span class=\"comment\">// DoubleFunction 6.0</span></span><br><span class=\"line\">        System.out.println(itdf.applyAsDouble(<span class=\"number\">6</span>));  <span class=\"comment\">// 3.0</span></span><br><span class=\"line\">        bc.accept(<span class=\"number\">6</span>, <span class=\"string\">&quot;AsanoSaki&quot;</span>);  <span class=\"comment\">// BiConsumer 6 AsanoSaki</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-带有更多参数的函数式接口\">4.2 带有更多参数的函数式接口</h3>\n<p><code>java.util.function</code> 中的接口毕竟是有限的，如果我们需要有3个参数的函数接口呢？因为那些接口相当直观，所以看一下 Java 库的源代码，然后编写我们自己的接口也很容易：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">TriFunction</span>&lt;T, U, V, R&gt; &#123;  <span class=\"comment\">// R为泛型返回类型</span></span><br><span class=\"line\">    R <span class=\"title function_\">apply</span><span class=\"params\">(T t, U u, V v)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TriFunctionTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        TriFunction&lt;Integer, Long, Double, Double&gt; tf = (i, j, k) -&gt; i + j + k;</span><br><span class=\"line\">        System.out.println(tf.apply(<span class=\"number\">1</span>, <span class=\"number\">2L</span>, <span class=\"number\">3D</span>));  <span class=\"comment\">// 6.0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-高阶函数\">5. 高阶函数</h2>\n<p>高阶函数是一个能接受函数作为参数或能把函数当返回值的函数，有了 Lambda 表达式，在方法中创建并返回一个函数简直不费吹灰之力，要接受并使用函数，方法必须在其参数列表中正确地描述函数类型：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProduceFunction</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Function&lt;String, String&gt; <span class=\"title function_\">produce</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 函数作为返回值</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> String::toLowerCase;  <span class=\"comment\">// 或者用Lambda表达式s -&gt; s.toLowerCase()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> String <span class=\"title function_\">consume</span><span class=\"params\">(Function&lt;Integer, String&gt; toStr, <span class=\"type\">int</span> x)</span> &#123;  <span class=\"comment\">// 函数作为参数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> toStr.apply(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Function&lt;String, String&gt; toLower = produce();</span><br><span class=\"line\">        System.out.println(toLower.apply(<span class=\"string\">&quot;Hello World&quot;</span>));  <span class=\"comment\">// hello world</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(consume(x -&gt; <span class=\"string\">&quot;To String &quot;</span> + x, <span class=\"number\">6</span>));  <span class=\"comment\">// To String 6</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-函数组合\">6. 函数组合</h2>\n<p>函数组合是指将多个函数结合使用，以创建新的函数，这通常被认为是函数式编程的一部分。<code>java.util.function</code> 中的一些接口也包含了支持函数组合的方法，我们以 <code>andThen()</code> 和 <code>compose()</code> 方法为例：</p>\n<ul>\n<li><code>andThen()</code>：先执行原始操作，再执行方法参数中的操作。</li>\n<li><code>compose()</code>：先执行方法参数中的操作，再执行原始操作。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> funcprog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.function.Function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FunctionComposition</span> &#123;  <span class=\"comment\">// hello world</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Function&lt;String, String&gt; f1 = s -&gt; s.substring(<span class=\"number\">0</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">                                    f2 = s -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(s).reverse().toString();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(f1.andThen(f2).apply(<span class=\"string\">&quot;Hello World&quot;</span>));  <span class=\"comment\">// olleH</span></span><br><span class=\"line\">        System.out.println(f1.compose(f2).apply(<span class=\"string\">&quot;Hello World&quot;</span>));  <span class=\"comment\">// dlroW</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/26102.html",
            "url": "https://asanosaki.github.io/posts/26102.html",
            "title": "Java内部类、匿名内部类、嵌套类详解",
            "date_published": "2023-10-25T06:27:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 中的内部类、匿名内部类以及嵌套类机制。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-创建内部类\">1. 创建内部类</h2>\n<p>创建内部类的方式就是把类定义放在一个包围它的类之中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Parcel1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Contests</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">value</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Destination</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String dest;</span><br><span class=\"line\"></span><br><span class=\"line\">        Destination(String dest) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.dest = dest;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String <span class=\"title function_\">getDest</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> dest; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ship</span><span class=\"params\">(String dest)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Contests</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Contests</span>();</span><br><span class=\"line\">        <span class=\"type\">Destination</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Destination</span>(dest);</span><br><span class=\"line\">        System.out.println(d.getDest());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//        Contests c = new Contests();  // 不能这么定义</span></span><br><span class=\"line\">        <span class=\"type\">Parcel1</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Parcel1</span>();</span><br><span class=\"line\">        p.ship(<span class=\"string\">&quot;XDU&quot;</span>);  <span class=\"comment\">// XDU</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-内部类到外部类的连接\">2. 内部类到外部类的连接</h2>\n<p>到目前为止，内部类看上去就是一种名称隐藏和代码组织机制。当创建一个内部类时，这个内部类的对象中会隐含一个链接，指向用于创建该对象的外围对象。通过该链接，无须任何特殊条件，内部类对象就可以访问外围对象的成员。此外，内部类拥有対外围对象所有元素的访问权：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Selector</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"title function_\">end</span><span class=\"params\">()</span>;  <span class=\"comment\">// 是否到尾部</span></span><br><span class=\"line\">    Object <span class=\"title function_\">current</span><span class=\"params\">()</span>;  <span class=\"comment\">// 返回当前对象</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">next</span><span class=\"params\">()</span>;  <span class=\"comment\">// 指向下一个对象</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Sequence</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object[] objs;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Sequence</span><span class=\"params\">(<span class=\"type\">int</span> size)</span> &#123;</span><br><span class=\"line\">        objs = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Object x)</span> &#123;  <span class=\"comment\">// 添加对象x</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (now &lt; objs.length)</span><br><span class=\"line\">            objs[now++] = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SequenceSelector</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Selector</span> &#123;  <span class=\"comment\">// 用于移动和选择每个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">end</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> i == objs.length; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Object <span class=\"title function_\">current</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> objs[i]; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">next</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; objs.length) i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Selector <span class=\"title function_\">getSelector</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SequenceSelector</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Sequence</span> <span class=\"variable\">seq</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Sequence</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">            seq.add(Integer.toString(i));  <span class=\"comment\">// 向Sequence中加入String对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Selector</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> seq.getSelector();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!s.end()) &#123;</span><br><span class=\"line\">            System.out.print(s.current() + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            s.next();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>Sequence</code> 是以类的形式包装起来的定长 <code>Object</code> 数组，可以调用 <code>add()</code> 向序列末尾增加一个新的 <code>Object</code>（如果还有空间）。要取得 <code>Sequence</code> 中的每一个对象，可以使用名为 <code>Selector</code> 的接口，这是迭代器（Iterator）设计模式的一个例子。</p>\n<p><code>SequenceSelector</code> 中的 <code>end()</code>、<code>current()</code> 和 <code>next()</code> 这些方法中的每一个都用到了外部类的字段 <code>objs</code>，这个引用并不是 <code>SequenceSelector</code> 的一部分，而是外围对象的一个 <code>private</code> 字段。然而，内部类可以访问外围对象的所有方法和字段，就好像拥有它们一样。</p>\n<p>这是怎么做到的呢？对于负责创建内部类对象的特定外围类对象而言，内部类对象偷偷地获取了一个指向它的引用。然后，当你要访问外围类的成员时，该引用会被用于选择相应的外围类成员。幸运的是，编译器会为你处理所有的这些细节。</p>\n<h2 id=\"3-在内部类中生成外部类对象的引用\">3. 在内部类中生成外部类对象的引用</h2>\n<p>要生成外部类对象的引用，可以使用外部类的名字，后面加上 <code>.this</code>。这样生成的引用会自动具有正确的类型，而且是可以在编译时确定并检查的，所以没有任何运行时开销，如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DotThis</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;DotThis.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> DotThis <span class=\"title function_\">outer</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> DotThis.<span class=\"built_in\">this</span>;  <span class=\"comment\">// 如果直接写this，引用的是Inner的this</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Inner <span class=\"title function_\">getInner</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Inner</span>(); &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DotThis</span> <span class=\"variable\">dt</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DotThis</span>();</span><br><span class=\"line\">        DotThis.<span class=\"type\">Inner</span> <span class=\"variable\">dti</span> <span class=\"operator\">=</span> dt.getInner();  <span class=\"comment\">// 使用外部类的对象来创建内部类</span></span><br><span class=\"line\">        dti.outer().f();  <span class=\"comment\">// DotThis.f()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>有时我们想让其他某个对象来创建它的某个内部类的对象，要实现这样的功能，可以使用 <code>.new</code> 语法，在 <code>new</code> 表达式中提供指向其他外部类对象的引用，就像下面这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在内部类中生成外部类对象的引用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DotNew</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Inner.f()&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DotNew</span> <span class=\"variable\">dn</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DotNew</span>();</span><br><span class=\"line\">        DotNew.<span class=\"type\">Inner</span> <span class=\"variable\">dni</span> <span class=\"operator\">=</span> dn.<span class=\"keyword\">new</span> <span class=\"title class_\">Inner</span>();</span><br><span class=\"line\">        dni.f();  <span class=\"comment\">// Inner.f()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们要使用外部类的对象来创建内部类的对象，正如我们在示例代码中所看到的那样，这也解决了内部类的名字作用域问题。</p>\n<p>除非已经有了一个外部类的对象，否则创建内部类对象是不可能的，这是因为内部类的对象会暗中连接到用于创建它的外部类对象。然而，如果你创建的是嵌套类（<code>static</code> 修饰的内部类），它就不需要指向外部类对象的引用。</p>\n<h2 id=\"4-匿名内部类\">4. 匿名内部类</h2>\n<p>我们先来看一下如何创建匿名内部类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">AnonymousIf</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">value</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AnonymousClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> AnonymousIf <span class=\"title function_\">getAnanymousIf</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnonymousIf</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">value</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AnonymousClass</span> <span class=\"variable\">ac</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnonymousClass</span>();</span><br><span class=\"line\">        <span class=\"type\">AnonymousIf</span> <span class=\"variable\">ai</span> <span class=\"operator\">=</span> ac.getAnanymousIf();</span><br><span class=\"line\">        System.out.println(ai.value());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码的意思是创建一个继承自 <code>AnonymousIf</code> 的匿名类的对象，通过 <code>new</code> 表达式返回的引用会被自动地向上转型为一个 <code>AnonymousIf</code> 引用。</p>\n<p>在这个匿名内部类中，<code>AnonymousIf</code> 是用无参构造器创建的，如果基类需要带一个参数的构造器，可以这么做：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BaseAnonyClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> x;</span><br><span class=\"line\"></span><br><span class=\"line\">    BaseAnonyClass(<span class=\"type\">int</span> value) &#123;</span><br><span class=\"line\">        x = value;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Construct BaseAnonyClass with &quot;</span> + value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">value</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AnonymousClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> BaseAnonyClass <span class=\"title function_\">getBaseAnonyClass</span><span class=\"params\">(<span class=\"type\">int</span> value, <span class=\"keyword\">final</span> String str)</span> &#123;  <span class=\"comment\">// 用到匿名类之外的对象需要用final修饰</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BaseAnonyClass</span>(value) &#123;  <span class=\"comment\">// 基类构造器的调用</span></span><br><span class=\"line\">            <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#123;  <span class=\"comment\">// 匿名内部类的构造器</span></span><br><span class=\"line\">                name = str;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Anonymous class constructor&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">value</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.value() * <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AnonymousClass</span> <span class=\"variable\">ac</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnonymousClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">BaseAnonyClass</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> ac.getBaseAnonyClass(<span class=\"number\">10</span>, <span class=\"string\">&quot;AsanoSaki&quot;</span>);</span><br><span class=\"line\">        System.out.println(b.value());</span><br><span class=\"line\">        System.out.println(b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Construct BaseAnonyClass with 10</span></span><br><span class=\"line\"><span class=\"comment\">         * Anonymous class constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * 20</span></span><br><span class=\"line\"><span class=\"comment\">         * AsanoSaki</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以在定义匿名类中的字段时执行初始化，如果你正在定义一个匿名类，而且一定要用到一个在该匿名类之外定义的对象，编译器要求参数引用需要用 <code>final</code> 修饰，或者是“实际上的最终变量”（也就是说，在初始化之后它永远不会改变，所以它可以被视为 <code>final</code> 的）。这里变量 <code>value</code> 被传给了匿名类的基类构造器，并没有在匿名类的内部被直接用到，因此不是必须为 <code>final</code> 变量。</p>\n<p>如果必须在匿名类中执行某个类似构造器的动作，该怎么办呢？因为匿名类没有名字，所以不可能有命名的构造器。我们可以借助实例初始化，使用 <code>&#123;&#125;</code> 语句块在效果上为匿名内部类创建一个构造器。</p>\n<h2 id=\"5-嵌套类\">5. 嵌套类</h2>\n<p>如果不需要内部类对象和外部类对象之间的连接，可以将内部类设置为 <code>static</code> 的，我们通常称之为<strong>嵌套类</strong>。要理解 <code>static</code> 应用于内部类时的含义，请记住，普通内部类对象中隐式地保留了一个引用，指向创建该对象的外部类对象，对于 <code>static</code> 的内部类来说，情况就不是这样了，嵌套类意味着：</p>\n<ul>\n<li>不需要一个外部类对象来创建嵌套类对象。</li>\n<li>无法从嵌套类对象内部访问非 <code>static</code> 的外部类对象。</li>\n</ul>\n<p>从另一方面来看，嵌套类和普通内部类还有些不同。普通内部类的字段和方法，只能放在类的外部层次中，所以普通内部类中不能有 <code>static</code> 数据、<code>static</code> 字段，也不能包含嵌套类，但是嵌套类中可以包含所有这些内容：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NestedClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StaticInner</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;StaticInner static f()&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        StaticInner() &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Construct StaticInner&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AnotherStaticClass</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;AnotherStaticClass static f()&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">StaticInner</span> <span class=\"variable\">si</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StaticInner</span>();</span><br><span class=\"line\">        StaticInner.f();</span><br><span class=\"line\">        StaticInner.AnotherStaticClass.f();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Construct StaticInner</span></span><br><span class=\"line\"><span class=\"comment\">         * StaticInner static f()</span></span><br><span class=\"line\"><span class=\"comment\">         * AnotherStaticClass static f()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到我们在 <code>main()</code> 中并不需要创建 <code>NestedClass</code> 对象就能直接创建 <code>static</code> 的内部类对象。</p>\n<h2 id=\"6-接口中的类\">6. 接口中的类</h2>\n<p>嵌套类可以是接口的一部分，放到接口中的任何类都会自动成为 <code>public</code> 和 <code>static</code> 的，因为类是 <code>static</code> 的，所以被嵌套的类只是放在了这个接口的命名空间内，甚至可以在内部类内实现包围它的这个接口，就像这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ClassInInterface</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ClassInInterface</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;ClassInInterface.Inner f()&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">Inner</span>().f();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/2297.html",
            "url": "https://asanosaki.github.io/posts/2297.html",
            "title": "Java方法调用动态绑定（多态性）与继承详解",
            "date_published": "2023-10-23T13:06:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 的多态性，并深入分析 Java 中的动态绑定方法机制。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-方法调用绑定\">1. 方法调用绑定</h2>\n<p>我们首先来看下面这个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Tone</span> &#123;</span><br><span class=\"line\">    LOW, MIDDLE, HIGH;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Instrument</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">play</span><span class=\"params\">(Tone t)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Instrument.play() &quot;</span> + t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Piano</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Instrument</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">play</span><span class=\"params\">(Tone t)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Piano.play() &quot;</span> + t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Guitar</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Instrument</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">play</span><span class=\"params\">(Tone t)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Guitar.play() &quot;</span> + t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Music</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">tune</span><span class=\"params\">(Instrument i, Tone t)</span> &#123;</span><br><span class=\"line\">        i.play(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Piano</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Piano</span>();</span><br><span class=\"line\">        <span class=\"type\">Guitar</span> <span class=\"variable\">g</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Guitar</span>();</span><br><span class=\"line\">        tune(p, Tone.MIDDLE);  <span class=\"comment\">// 向上转型，输出：Piano.play() MIDDLE</span></span><br><span class=\"line\">        tune(g, Tone.HIGH);  <span class=\"comment\">// Guitar.play() HIGH</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>main()</code> 方法中，我们将 <code>Piano</code> 引用传递给了 <code>tune()</code>，且不需要任何强制类型转换。这是因为 <code>Instrument</code> 中的接口必定存在于 <code>Piano</code> 中，因为 <code>Piano</code> 继承了 <code>Instrument</code>。从 <code>Piano</code> 向上转型到 <code>Instrument</code> 可以“缩小”该接口，但不会小于 <code>Instrument</code> 的完整接口。</p>\n<p>那么编译器怎么可能知道这个 <code>Instrument</code> 引用在这里指的是 <code>Piano</code>，而不是 <code>Guitar</code>？为了更深入地了解这个问题，有必要研究一下绑定（binding）这个问题。</p>\n<p>将一个方法调用和一个方法体关联起来的动作称为<strong>绑定</strong>。在程序运行之前执行绑定（如果存在编译器和链接器的话，由它们来实现），称为前期绑定。你之前可能没有听说过这个术语，因为在面向过程语言中默认就是前期绑定的。例如，在 C 语言中只有一种方法调用，那就是前期绑定。</p>\n<p>解决这个问题的方案称为<strong>后期绑定</strong>，这意味着绑定发生在<strong>运行时</strong>，并基于对象的类型。后期绑定也称为动态绑定或运行时绑定，当一种语言实现后期绑定时，必须有某种机制在运行时来确定对象的类型，并调用恰当的方法。也就是说，编译器仍然不知道对象的类型，但方法调用机制能找到并调用正确的方法体。</p>\n<p>Java 中的所有方法绑定都是后期绑定，除非方法是 <code>static</code> 或 <code>final</code> 的（<code>private</code> 方法隐式为 <code>final</code>）。这意味着通常不需要你来决定是否要执行后期绑定，因为它会自动发生。</p>\n<h2 id=\"2-尝试重写Private方法\">2. 尝试重写Private方法</h2>\n<p>看一下下面这段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrivateOverride</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Private f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">PrivateOverride</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Derived</span>();  <span class=\"comment\">// 创建Derived对象</span></span><br><span class=\"line\">        p.f();  <span class=\"comment\">// Private f()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Derived</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">PrivateOverride</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 你以为重写了父类中的f()</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Public f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可能会很自然地认为输出应该为 <code>Public f()</code>，但 <code>private</code> 方法自动就是 <code>final</code> 的，并且对子类也是隐藏的，所以 <code>Derived</code> 的 <code>f()</code> 在这里是一个全新的方法，它甚至没有重载，因为 <code>f()</code> 的基类版本在 <code>Derived</code> 中是不可见的。</p>\n<p>这样的结果就是，只有非 <code>private</code> 的方法可以被重写，但要注意重写 <code>private</code> 方法的假象，它不会产生编译器警告，但也不会执行你可能期望的操作，如果使用了 <code>@Override</code> 注解，那么这个问题就会被检测出来。</p>\n<h2 id=\"3-字段访问与静态方法的多态\">3. 字段访问与静态方法的多态</h2>\n<p>现在你可能会开始认为一切都可以多态地发生，但是，只有普通的方法调用可以是多态的。例如，如果直接访问一个字段，则该访问会在编译时解析：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Super</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getX</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Sub</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Super</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getX</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> x; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getSuperX</span><span class=\"params\">()</span> &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.x; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetField</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Super</span> <span class=\"variable\">sup</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Sub</span>();  <span class=\"comment\">// 向上转型</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;sup.x = &quot;</span> + sup.x + <span class=\"string\">&quot;, sup.getX() = &quot;</span> + sup.getX());</span><br><span class=\"line\">        <span class=\"type\">Sub</span> <span class=\"variable\">sub</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Sub</span>();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;sub.x = &quot;</span> + sub.x + <span class=\"string\">&quot;, sub.getX() = &quot;</span> + sub.getX() + <span class=\"string\">&quot;, sub.getSuperX() = &quot;</span> + sub.getSuperX());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * sup.x = 0, sup.getX() = 1</span></span><br><span class=\"line\"><span class=\"comment\">         * sub.x = 1, sub.getX() = 1, sub.getSuperX() = 0</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当 <code>Sub</code> 对象向上转型为 <code>Super</code> 引用时，任何字段访问都会被编译器解析，因此不是多态的。在此示例中，<code>Super.x</code> 和 <code>Sub.x</code> 被分配了不同的存储空间，因此，<code>Sub</code> 实际上包含两个被称为 <code>x</code> 的字段：它自己的字段和它从 <code>Super</code> 继承的字段。然而，当你在 <code>Sub</code> 中引用 <code>x</code> 时，<code>Super</code> 版本并不是默认的那个，要获得 <code>Super</code> 的字段必须明确地使用 <code>super.x</code>。</p>\n<p>现在我们再来看一下静态方法，如果一个方法是静态的，那它的行为就不会是多态的，因为静态方法与类相关联，而不是与单个对象相关联：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StaticSuper</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">staticPrint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Super staticPrint()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dynamicPrint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Super dynamicPrint()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StaticSub</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">StaticSuper</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">staticPrint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Sub staticPrint()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dynamicPrint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Sub dynamicPrint()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StaticPolymorphism</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">StaticSuper</span> <span class=\"variable\">sup</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StaticSub</span>();  <span class=\"comment\">// 向上转型</span></span><br><span class=\"line\">        StaticSub.staticPrint();  <span class=\"comment\">// Sub staticPrint()</span></span><br><span class=\"line\">        sup.dynamicPrint();  <span class=\"comment\">// Sub dynamicPrint()</span></span><br><span class=\"line\">        StaticSuper.staticPrint();  <span class=\"comment\">// Super staticPrint()</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-构造器内部的多态方法行为\">4. 构造器内部的多态方法行为</h2>\n<p>构造器调用的层次结构带来了一个难题，对于正在构造的对象，如果在构造器中调用它的动态绑定方法，会发生什么？</p>\n<p>在普通方法内部，动态绑定调用是在运行时解析的，这是因为对象不知道它是属于该方法所在的类还是其子类。如果在构造器内调用动态绑定方法，就会用到该方法<strong>被重写后的定义</strong>。但是，这个调用的效果可能相当出乎意料，因为这个被重写的方法是在对象（即子类对象）完全构造之前被调用的，因为是从外到内（即从基类到子类）执行构造器的，这可能会带来一些难以发现的错误。如下面这段代码所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    A() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A() before A.f()&quot;</span>);</span><br><span class=\"line\">        f();  <span class=\"comment\">// 其实是调用子类重写后的f()</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A() after A.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;  <span class=\"comment\">// 子类对象的默认初始值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    B(<span class=\"type\">int</span> x) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x = x;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B(), x = &quot;</span> + x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B.f(), x = &quot;</span> + x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PolyConstructors</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * A() before A.f()</span></span><br><span class=\"line\"><span class=\"comment\">         * B.f(), x = 0</span></span><br><span class=\"line\"><span class=\"comment\">         * A() after A.f()</span></span><br><span class=\"line\"><span class=\"comment\">         * B(), x = 5</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>A.f()</code> 是为重写而设计的，这个重写发生在 <code>B</code> 中，但是在 <code>A</code> 的构造器调用了这个方法，而这个调用实际上是对 <code>B.f()</code> 的调用。输出显示，当 <code>A</code> 的构造器调用 <code>f()</code> 时，<code>B.x</code> 的值甚至不是默认的初始值1，而是0。</p>\n<p>因此类的完整初始化过程如下：</p>\n<ol>\n<li>在发生任何其他事情之前，为对象分配的存储空间会先被初始化为二进制零。</li>\n<li>如前面所述的那样调用基类的构造器，此时被重写的 <code>f()</code> 方法会被调用（是的，这发生在 <code>B</code> 构造器被调用之前），由于第1步的缘故，此时会发现 <code>B.x</code> 值为零。</li>\n<li>按声明的顺序来初始化成员。</li>\n<li>执行子类构造器的主体代码。</li>\n</ol>\n<p>这样做有一个好处：一切至少都会初始化为零（或对于特定数据类型来说，是任何与零等价的值），而不仅仅是被视为垃圾。这包括通过组合嵌入在类中的对象引用，这些引用默认为 <code>null</code>。因此，如果忘记初始化该引用，在运行时就会出现异常。</p>\n<p>因此，编写构造器时有一个很好的准则：用尽可能少的操作使对象逬入正常状态，如果可以避免的话，请不要调用此类中的任何其他方法。只有基类中的 <code>final</code> 方法可以在构造器中安全调用（这也适用于 <code>private</code> 方法，它们默认就是 <code>final</code> 的）这些方法不能被重写，因此不会产生这种令人惊讶的问题。</p>\n<h2 id=\"5-用继承与组合进行设计\">5. 用继承与组合进行设计</h2>\n<p>一旦学习了多态，似乎一切就都应该被继承，因为多态是一个如此巧妙的工具，但其实这会给你的设计増加负担。更好的方法是先选择组合，尤其是在不清楚到底使用哪种方法时。组合不会强制我们的程序设计使用继承层次结构，组合也更加灵活，因为在使用组合时可以动态选择类型（以及随之而来的行为），而继承则要求在编译时就知道确切的类型。以下示例说明了这一点：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">act</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HappyPeople</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">act</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Happy People&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SadPeople</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">act</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Sad People&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ComInherit</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">People</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HappyPeople</span>();  <span class=\"comment\">// 组合HappyPeople和SadPeople类</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">change</span><span class=\"params\">()</span> &#123;  <span class=\"comment\">// 允许其状态发生改变</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p <span class=\"keyword\">instanceof</span> HappyPeople)</span><br><span class=\"line\">            p = <span class=\"keyword\">new</span> <span class=\"title class_\">SadPeople</span>();</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            p = <span class=\"keyword\">new</span> <span class=\"title class_\">HappyPeople</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">act</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        p.act();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ComInherit</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ComInherit</span>();</span><br><span class=\"line\">        c.act();  <span class=\"comment\">// Happy People</span></span><br><span class=\"line\">        c.change();</span><br><span class=\"line\">        c.act();  <span class=\"comment\">// Sad People</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-向下转型与反射\">6. 向下转型与反射</h2>\n<p>因为向上转型（在继承层次结构中向上移动）会丢失特定类型的信息，所以我们自然就可以通过<strong>向下转型</strong>（downcast）来重新获取类型信息，即在继承层次结构中向下移动。</p>\n<p>我们知道向上转型总是安全的，因为基类不可能有比子类更多的接口。因此，通过基类接口发送的每条消息都能保证被子类接受。</p>\n<p>然而对于向下转型来说，我们并不知道这些，在 Java 中，每个转型都会被检查。因此，即使看起来只是在执行一个普通的带括号的强制转型，但在运行时会检查此强制转型，以确保它实际上是你期望的类型，如果不是，则会抛出一个 <code>ClassCastException</code> 错误。这种在运行时检查类型的行为是 Java 反射（reflection）的一部分。以下示例里展示了一些基本的反射行为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Useful</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Useful.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MoreUseful</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Useful</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;MoreUseful.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">g</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;MoreUseful.g()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Reflect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Useful[] x = &#123; <span class=\"keyword\">new</span> <span class=\"title class_\">Useful</span>(), <span class=\"keyword\">new</span> <span class=\"title class_\">MoreUseful</span>() &#125;;  <span class=\"comment\">// 两个对象都属于Useful类</span></span><br><span class=\"line\">        x[<span class=\"number\">0</span>].f();</span><br><span class=\"line\">        x[<span class=\"number\">1</span>].f();</span><br><span class=\"line\"><span class=\"comment\">//        x[1].g();  // 编译错误，无法在Useful类中发现g()方法</span></span><br><span class=\"line\">        ((MoreUseful)x[<span class=\"number\">1</span>]).g();  <span class=\"comment\">// 向下转型</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ((MoreUseful)x[<span class=\"number\">0</span>]).g();  <span class=\"comment\">// 无法转成期望的MoreUseful类型</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassCastException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Exception: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Useful.f()</span></span><br><span class=\"line\"><span class=\"comment\">         * MoreUseful.f()</span></span><br><span class=\"line\"><span class=\"comment\">         * MoreUseful.g()</span></span><br><span class=\"line\"><span class=\"comment\">         * Exception: com.yyj.Useful cannot be cast to com.yyj.MoreUseful</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果想访问 <code>MoreUseful</code> 对象的扩展接口，可以尝试向下转型，如果类型正确就会成功。否则会得到一个 <code>ClassCastException</code> 异常。其实你无须为此异常编写任何特殊代码，因为它表示一个程序员犯的错误，它可能发生在程序中的任何位置。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/54920.html",
            "url": "https://asanosaki.github.io/posts/54920.html",
            "title": "Java类中字段及子类初始化过程详解",
            "date_published": "2023-10-22T07:16:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 类中不同类型的字段以及子类的初始化过程。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-初始化顺序\">1. 初始化顺序</h2>\n<p>类中的变量<strong>定义</strong>顺序决定了初始化的顺序，即使分散到方法定义之间，变量定义仍然会在任何方法（包括构造器）调用<strong>之前</strong>就被初始化，看下面这段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderOfInitialization</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        b.f();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 2</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 3</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class B</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 4</span></span><br><span class=\"line\"><span class=\"comment\">         * This is f()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    A(<span class=\"type\">int</span> value) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class A with &quot;</span> + value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">1</span>);  <span class=\"comment\">// 在构造器之前定义</span></span><br><span class=\"line\"></span><br><span class=\"line\">    B() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class B&quot;</span>);</span><br><span class=\"line\">        a3 = <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">4</span>);  <span class=\"comment\">// 在构造器内定义</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">2</span>);  <span class=\"comment\">// 在构造器之后定义</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;This is f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">3</span>);  <span class=\"comment\">// 在尾部定义</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在类 <code>B</code> 中，<code>A</code> 对象的定义分散到各个方法之间，但他们均在构造器执行前被初始化完成，其中有一个对象引用在构造器内被重新初始化。</p>\n<p><code>a3</code> 引用被初始化了两次：一次在构造器调用之前，另一次在构造器调用期间（第一个对象被丢弃了，因此稍后可能会被垃圾收集器回收）。</p>\n<h2 id=\"2-静态数据的初始化\">2. 静态数据的初始化</h2>\n<p>无论创建了多少对象，静态数据都只有一份存储空间。来看下面的代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StaticInitialization</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Creating class B in main...&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">B</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class A with 2</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class A with 3</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class A with 1</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class B</span></span><br><span class=\"line\"><span class=\"comment\">     * This is A.f()</span></span><br><span class=\"line\"><span class=\"comment\">     * Creating class B in main...</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class A with 1</span></span><br><span class=\"line\"><span class=\"comment\">     * Initial class B</span></span><br><span class=\"line\"><span class=\"comment\">     * This is A.f()</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    A(<span class=\"type\">int</span> value) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class A with &quot;</span> + value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;This is A.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">A</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    B() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class B&quot;</span>);</span><br><span class=\"line\">        a2.f();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">A</span> <span class=\"variable\">a3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>静态字段 <code>a2</code> 和 <code>a3</code> 的创建在 <code>a1</code> 字段之前，且仅在第一个 <code>B</code> 对象创建时被初始化，之后这些静态对象不会被重新初始化。</p>\n<p>因此初始化的顺序是从静态字段开始，然后是非静态字段。例如要执行静态的 <code>main</code> 方法，必须先加载 <code>StaticInitialization</code> 类，然后初始化他的静态字段 <code>b2</code>，这就导致类 <code>B</code> 被加载，而类 <code>B</code> 中包含静态的类 <code>A</code> 的对象，因此 <code>A</code> 也被加载，所以这个程序中所有的类都在 <code>main</code> 方法开始执行前被加载。</p>\n<p>现在总结一下对象创建的过程，假设有一个名为 <code>A</code> 的类：</p>\n<ol>\n<li>尽管没有显式使用 <code>static</code> 关键字，但构造器实际上也是静态方法。因此，第一次创建类型为 <code>A</code> 的对象时，或者第一次访问类 <code>A</code> 的静态方法或静态字段时，Java 解释器会搜索类路径来定位 <code>A.class</code> 文件。</li>\n<li>当 <code>A.class</code> 被加载后（这将创建一个 Class 对象），它的所有静态初始化工作都会执行。因此，静态初始化只在 Class 对象首次加载时发生一次。</li>\n<li>当使用 <code>new A()</code> 创建对象时，构建过程首先会在堆上为 <code>A</code> 对象分配足够的存储空间。</li>\n<li>这块存储空间会被淸空，然后自动将该 <code>A</code> 对象中的所有基本类型设置为其默认值（数值类型的默认值是0，<code>boolean</code> 和 <code>char</code> 则是和0等价的对应值），而引用会被设置为 <code>null</code>。</li>\n<li>执行所有出现在字段定义处的初始化操作。</li>\n<li>执行构造器。这实际上可能涉及相当多的动作，尤其是在涉及继承时。</li>\n</ol>\n<h2 id=\"3-显式的静态初始化\">3. 显式的静态初始化</h2>\n<p>Java 允许在一个类里将多个静态初始化语句放在一个特殊的“静态子句”里（有时称为静态块）：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ExplicitStatic</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Inside main()&quot;</span>);</span><br><span class=\"line\">        B.a1.f();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside main()</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 1</span></span><br><span class=\"line\"><span class=\"comment\">         * Initial class A with 2</span></span><br><span class=\"line\"><span class=\"comment\">         * This is A.f()</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    A(<span class=\"type\">int</span> value) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class A with &quot;</span> + value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">f</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;This is A.f()&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> A a1;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> A a2;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        a1 = <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">        a2 = <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    B() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Initial class B&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尽管看起来有点像一个方法，但它只是在 <code>static</code> 关键字后加了一段代码，这段代码和其他静态初始化语句一样，只执行一次：第一次创建该类的对象时，或第一次访问该类的静态成员时（即使从未创建过该类的对象）。</p>\n<h2 id=\"4-子类初始化\">4. 子类初始化</h2>\n<p>当创建子类对象时，它里面包含了一个基类的子对象。正确初始化基类的子对象至关重要，我们只有一种方法可以保证这一点：在子类构造器中调用基类构造器来执行初始化，它具有执行基类初始化所需的全部信息和权限。Java 会自动在子类构造器中插入对基类<strong>无参</strong>构造器的调用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    A() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    B() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseNonParamsConstructor</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    BaseNonParamsConstructor() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BaseNonParamsConstructor constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">BaseNonParamsConstructor</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BaseNonParamsConstructor</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * A constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * B constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * BaseNonParamsConstructor constructor</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到构造过程是从基类“向外”逬行的，因此基类在子类构造器可以访问它之前就被初始化了。即使没有为 <code>BaseNonParamsConstructor</code> 创建构造器，编译器也会为它合成一个可以调用基类构造器的无参构造器。</p>\n<p>如果基类没有无参构造器，或者如果你必须要调用具有参数的基类构造器，那么就要使用 <code>super</code> 关键字和相应的参数列表，来显式调用基类构造器：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    A(<span class=\"type\">int</span> i) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    B(<span class=\"type\">int</span> i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseWithParamsConstructor</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    BaseWithParamsConstructor() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BaseWithParamsConstructor constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">BaseWithParamsConstructor</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BaseWithParamsConstructor</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * A constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * B constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * BaseWithParamsConstructor constructor</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-子类及静态数据初始化\">5. 子类及静态数据初始化</h2>\n<p>了解整个初始化的过程，包括继承，有助于我们全面了解所发生的事情，现在我们来看一个综合示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Insect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> printInit(<span class=\"string\">&quot;Static Insect.x initialized&quot;</span>);  <span class=\"comment\">// 静态字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Insect() &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Insect constructor&quot;</span>);</span><br><span class=\"line\">        id = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">printInit</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Beetle</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Insect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> printInit(<span class=\"string\">&quot;Beetle.k initialized&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> printInit(<span class=\"string\">&quot;Static Beetle.x initialized&quot;</span>);  <span class=\"comment\">// 静态字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Beetle</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Beetle constructor&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Inside main()&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Beetle</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Beetle</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * Static Insect.x initialized</span></span><br><span class=\"line\"><span class=\"comment\">         * Static Beetle.x initialized</span></span><br><span class=\"line\"><span class=\"comment\">         * Inside main()</span></span><br><span class=\"line\"><span class=\"comment\">         * Insect constructor</span></span><br><span class=\"line\"><span class=\"comment\">         * Beetle.k initialized</span></span><br><span class=\"line\"><span class=\"comment\">         * Beetle constructor</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当你运行这个文件时，首先会尝试访问静态方法 <code>Beetle.main()</code>，所以加载器会去 <code>Beetle.class</code> 文件中找到 <code>Beetle</code> 类的编译代码，在加载它的代码时，加载器注意到有一个基类 <code>Insect</code>，然后它就会去加载基类。无论是否创建该基类的对象，都会发生这种情况。</p>\n<p>如果基类又有自己的基类，那么第二个基类也将被加载，以此类推。接下来，会执行根基类（本例中为 <code>Insect</code>）中的静态初始化，然后是下一个子类，以此类推。这很重要，因为子类的静态初始化可能依赖于基类成员的正确初始化。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/43228.html",
            "url": "https://asanosaki.github.io/posts/43228.html",
            "title": "Java对象的相等判定问题与equals方法详解",
            "date_published": "2023-10-21T08:06:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 中不同类的相等判定规则以及不同类中 equals 方法的效果。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-Integer\">1. Integer</h2>\n<p>首先我们来看以下这段代码的运行结果：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Equivalence</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        testIntEqual(<span class=\"number\">127</span>);</span><br><span class=\"line\">        testIntEqual(<span class=\"number\">128</span>);</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * [127] Auto: true true</span></span><br><span class=\"line\"><span class=\"comment\">         * [127] valueOf: true true</span></span><br><span class=\"line\"><span class=\"comment\">         * [127] Integer: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [127] Int: true</span></span><br><span class=\"line\"><span class=\"comment\">         * [128] Auto: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [128] valueOf: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [128] Integer: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [128] Int: true</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testIntEqual</span><span class=\"params\">(<span class=\"type\">int</span> value)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一种定义方式，利用了自动装箱特性，推荐该写法</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> value;</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> value;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%d] Auto: %b %b\\n&quot;</span>, value, a1 == b1, a1.equals(b1));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 第二种定义方式</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> Integer.valueOf(value);</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> Integer.valueOf(value);</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%d] valueOf: %b %b\\n&quot;</span>, value, a2 == b2, a2.equals(b2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 第三种定义方式，Java9之后已弃用，效率远不如valueOf</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">a3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(value);</span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(value);</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%d] Integer: %b %b\\n&quot;</span>, value, a3 == b3, a3.equals(b3));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 第四种定义方式，不使用包装类，无equals方法</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a4</span> <span class=\"operator\">=</span> value;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b4</span> <span class=\"operator\">=</span> value;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%d] Int: %b\\n&quot;</span>, value, a4 == b4);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于参数值127，<code>==</code> 操作符只在使用 <code>new</code> 创建对象的方式上判定两个数为 <code>false</code>，这是因为操作符 <code>==/!=</code> 比较的是对象的引用，虽然参与比较的两个引用包含的内容相同，但他们指向了内存中的不同对象。注意这种定义方式在 Java9 之后已经被废弃，因为其效率远不如使用 <code>valueOf</code> 方法。</p>\n<p>对于参数值128，可以发现所有创建方式创建的两个相同值的 <code>Integer</code> 对象在 <code>==</code> 操作符的判定下均为 <code>false</code>，这是因为出于效率的原因，<code>Integer</code> 会通过享元模式来缓存范围在-128~127内的对象，因此多次调用 <code>Integer.valueOf(127)</code> 生成的其实是同一个对象，而在此范围之外的值则不会这样，即每次调用 <code>Integer.valueOf(128)</code> 返回的都是不同的对象。</p>\n<p>因此在使用 <code>Integer</code> 的时候如果需要比较值是否相等应该只是用 <code>equals</code> 方法。</p>\n<h2 id=\"2-Double\">2. Double</h2>\n<p>我们再来看下面这段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Equivalence</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        testDoubleEqual(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        testDoubleEqual(<span class=\"number\">0</span>, Double.MIN_VALUE);</span><br><span class=\"line\">        testDoubleEqual(Double.MAX_VALUE, Double.MAX_VALUE - Double.MIN_VALUE * <span class=\"number\">1000000</span>);</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 0.000000e+00] double: true</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 0.000000e+00] Auto: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 0.000000e+00] valueOf: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 0.000000e+00] Double: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 4.900000e-324] double: false</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 4.900000e-324] Auto: false false</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 4.900000e-324] valueOf: false false</span></span><br><span class=\"line\"><span class=\"comment\">         * [0.000000e+00 | 4.900000e-324] Double: false false</span></span><br><span class=\"line\"><span class=\"comment\">         * [1.797693e+308 | 1.797693e+308] double: true</span></span><br><span class=\"line\"><span class=\"comment\">         * [1.797693e+308 | 1.797693e+308] Auto: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [1.797693e+308 | 1.797693e+308] valueOf: false true</span></span><br><span class=\"line\"><span class=\"comment\">         * [1.797693e+308 | 1.797693e+308] Double: false true</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testDoubleEqual</span><span class=\"params\">(<span class=\"type\">double</span> a, <span class=\"type\">double</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%e | %e] double: %b\\n&quot;</span>, a, b, a == b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> a;</span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> b;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%e | %e] Auto: %b %b\\n&quot;</span>, a1, b1, a1 == b1, a1.equals(b1));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> Double.valueOf(a);</span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> Double.valueOf(b);</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%e | %e] valueOf: %b %b\\n&quot;</span>, a2, b2, a2 == b2, a2.equals(b2));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">a3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Double</span>(a);</span><br><span class=\"line\">        <span class=\"type\">Double</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Double</span>(b);</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;[%e | %e] Double: %b %b\\n&quot;</span>, a3, b3, a3 == b3, a3.equals(b3));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>理论上浮点数的比较应该是很严格的，即两个数值之间即使有极小的不同也应该不相等。</p>\n<p>例如0和 <code>Double.MIN_VALUE</code> 相比较并不相等，但是 <code>Double.MAX_VALUE</code> 减去一百万倍的 <code>Double.MIN_VALUE</code> 却仍等于 <code>Double.MIN_VALUE</code>，这是因为当一个非常大的数值减去一个相对较小的数值时，非常大的数值并不会发生显著变化，这叫做<strong>舍入误差</strong>，误差的产生原因是因为机器不能存储足够的信息来表示一个大数值的微小变化。</p>\n<h2 id=\"3-自定义类\">3. 自定义类</h2>\n<p>现在你是不是以为在比较对象内容是否相等的情况下都一律用 <code>equals</code> 函数即可？但是并没有这么简单。看下面这段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Equivalence</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        testClassEqual();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testClassEqual</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">        System.out.println(a1.equals(a2));  <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">        System.out.println(b1.equals(b2));  <span class=\"comment\">// true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">    A(<span class=\"type\">int</span> val) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">    B(<span class=\"type\">int</span> val) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.val = val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object o)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">tempB</span> <span class=\"operator\">=</span> (B)o;  <span class=\"comment\">// 将Object对象转型为B</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.val == tempB.val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们创建了两个类 <code>A</code> 的对象，且值相等，但是 <code>equals</code> 方法返回的结果为 <code>false</code>，这是因为 <code>equals</code> 方法的<strong>默认</strong>行为是比较<strong>引用</strong>，如果想比较内容必须像类 <code>B</code> 那样重写 <code>equals</code> 方法。</p>\n<p>因此实际上其实是大多数标准库会重写 <code>equals</code> 方法来比较对象的内容而不是他们的引用。</p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://asanosaki.github.io/posts/23459.html",
            "url": "https://asanosaki.github.io/posts/23459.html",
            "title": "算法竞赛Java数据结构与算法类详解",
            "date_published": "2023-10-20T08:39:00.000Z",
            "content_html": "<blockquote>\n<p>本文介绍了 Java 中常用的数据结构与算法类。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"1-String-StringBuffer-StringBuilder\">1. String/StringBuffer/StringBuilder</h2>\n<p><code>String</code> 类即字符串，在 Java 中 <code>String</code> 类是<strong>不可改变</strong>的，如果修改 <code>String</code> 对象，那么其实是开一个新的空间保存，而原空间中的字符串还存在于内存中。<code>String</code> 类的用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Hello World!&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span>[] charArray = &#123; <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span> &#125;;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">strFromChar</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(charArray);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; str.length(); i++)</span><br><span class=\"line\">    System.out.print(str.charAt(i));</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">char</span> c: str.toCharArray())  <span class=\"comment\">// toCharArray将String转为字符数组</span></span><br><span class=\"line\">    System.out.print(c);</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">str.charAt(<span class=\"number\">0</span>);  <span class=\"comment\">// H，返回第0个字符</span></span><br><span class=\"line\">str.compareTo(<span class=\"string\">&quot;G&quot;</span>);  <span class=\"comment\">// 1，比较字符串，如果大于返回1，小于返回-1，否则返回0</span></span><br><span class=\"line\">str.equals(<span class=\"string\">&quot;Hello World!&quot;</span>);  <span class=\"comment\">// true，Java中比较两个字符串值是否相等必须用equals</span></span><br><span class=\"line\">str.startsWith(<span class=\"string\">&quot;He&quot;</span>);  <span class=\"comment\">// true，判断是否以&quot;He&quot;开头</span></span><br><span class=\"line\">str.endsWith(<span class=\"string\">&quot;d!&quot;</span>);  <span class=\"comment\">// true，判断是否以&quot;d!&quot;结尾</span></span><br><span class=\"line\">str.indexOf(<span class=\"string\">&#x27;o&#x27;</span>);  <span class=\"comment\">// 4，返回&#x27;o&#x27;第一次出现的位置，若不存在返回-1</span></span><br><span class=\"line\">str.indexOf(<span class=\"string\">&#x27;o&#x27;</span>, <span class=\"number\">5</span>);  <span class=\"comment\">// 7，返回&#x27;o&#x27;从下标5开始第一次出现的位置，若不存在返回-1</span></span><br><span class=\"line\">str.lastIndexOf(<span class=\"string\">&#x27;o&#x27;</span>);  <span class=\"comment\">// 7，返回&#x27;o&#x27;最后出现的位置，若不存在返回-1</span></span><br><span class=\"line\">str.lastIndexOf(<span class=\"string\">&#x27;o&#x27;</span>, <span class=\"number\">6</span>);  <span class=\"comment\">// 4，返回&#x27;o&#x27;在下标6之前的字符串中最后出现的位置，若不存在返回-1</span></span><br><span class=\"line\">str.replace(<span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>);  <span class=\"comment\">// Hellx Wxrld!，将&#x27;o&#x27;替换成&#x27;x&#x27;</span></span><br><span class=\"line\">str.split(<span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// [Hello, World!]，以&quot; &quot;进行分割，返回分割后的数组，支持正则表达式</span></span><br><span class=\"line\">str.substring(<span class=\"number\">6</span>, <span class=\"number\">9</span>);  <span class=\"comment\">// Wor，返回[6, 9)的字串，如果不指定第二个下标默认为末尾</span></span><br><span class=\"line\">str.toLowerCase();  <span class=\"comment\">// hello world!，将所有字母转为小写后返回</span></span><br><span class=\"line\">str.toUpperCase();  <span class=\"comment\">// HELLO WORLD!，将所有字母转为大写后返回</span></span><br></pre></td></tr></table></figure>\n<p>当需要对字符串进行频繁修改时，要用 <code>StringBuffer</code> 或 <code>StringBuilder</code> 类。这两个类的对象能够被多次修改，并且不产生新的未使用对象。</p>\n<p><code>StringBuffer</code> 和 <code>StringBuilder</code> 之间最大的不同在于 <code>StringBuilder</code> 的方法不是线程安全的（不能同步访问）。但是 <code>StringBuilder</code> 相较于 <code>StringBuffer</code> 有速度优势，所以多数情况下建议使用 <code>StringBuilder</code> 类。以 <code>StringBuilder</code> 为例，用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\"><span class=\"type\">StringBuilder</span> <span class=\"variable\">strBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(str);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; strBuilder.length(); i++)</span><br><span class=\"line\">    System.out.print(strBuilder.charAt(i));</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">strBuilder.append(<span class=\"string\">&quot;A&quot;</span>);  <span class=\"comment\">// 在末尾追加字符串/字符/数字</span></span><br><span class=\"line\">strBuilder.reverse();  <span class=\"comment\">// 翻转字符串</span></span><br><span class=\"line\">strBuilder.delete(<span class=\"number\">0</span>, <span class=\"number\">1</span>);  <span class=\"comment\">// 删除[0, 1)中的字符串</span></span><br><span class=\"line\">strBuilder.insert(<span class=\"number\">6</span>, <span class=\"string\">&quot;A&quot;</span>);  <span class=\"comment\">// 在下标6的位置插入字符串/字符/数字</span></span><br><span class=\"line\">strBuilder.replace(<span class=\"number\">0</span>, <span class=\"number\">7</span>, <span class=\"string\">&quot;Hello&quot;</span>);  <span class=\"comment\">// 将[0, 7)中的字符串替换为&quot;Hello&quot;</span></span><br><span class=\"line\">strBuilder.toString();  <span class=\"comment\">// 转换回String</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Arrays\">2. Arrays</h2>\n<p><code>Arrays</code> 类定义在 <code>java.util</code> 包中，该类能够方便地操作数组，用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123; <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span> &#125;;</span><br><span class=\"line\"><span class=\"type\">int</span>[][] arr2d = &#123;&#123; <span class=\"number\">1</span>, <span class=\"number\">2</span> &#125;, &#123; <span class=\"number\">3</span>, <span class=\"number\">4</span> &#125;&#125;;</span><br><span class=\"line\">Integer[] arrInteger = &#123; <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++)</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> x: arr)</span><br><span class=\"line\">    System.out.print(x + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">Arrays.sort(arr);  <span class=\"comment\">// 从小到大排序</span></span><br><span class=\"line\">Arrays.sort(arrInteger, (x, y) -&gt; y - x);  <span class=\"comment\">// 从大到小排序，必须用Integer对象</span></span><br><span class=\"line\">Arrays.binarySearch(arr, <span class=\"number\">3</span>);  <span class=\"comment\">// 返回2，对排好序的数组二分查找</span></span><br><span class=\"line\">Arrays.equals(arr, arr);  <span class=\"comment\">// 返回true，判断两个数组是否相等</span></span><br><span class=\"line\">Arrays.fill(arr, <span class=\"number\">0</span>);  <span class=\"comment\">// 用0填充数组所有元素</span></span><br><span class=\"line\">Arrays.toString(arr);  <span class=\"comment\">// 返回[0, 0, 0, 0, 0]，将数组的第一维转换成字符串形式</span></span><br><span class=\"line\">Arrays.deepToString(arr2d);  <span class=\"comment\">// 返回[[1, 2], [3, 4]]，递归转换数组的每一维，可用于二维及以上的数组</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-ArrayList\">3. ArrayList</h2>\n<p>Java 的集合框架主要包括两种类型的容器：</p>\n<ul>\n<li>集合（Collection）：存储一个元素集合。</li>\n<li>图（Map）：存储键/值对映射。</li>\n</ul>\n<p>其中，<code>Collection</code> 接口又包含了 <code>List</code> 接口和 <code>Set</code> 接口两大分支，前者为允许存在重复元素的有序集合，后者为不允许存在重复元素的无序集合；<code>Map</code> 是一个映射接口，其中的每一个元素包含一个 <code>key</code> 和对应的 <code>value</code>。</p>\n<p><code>ArrayList</code> 类实现了 <code>List</code> 接口，继承自 <code>AbstractList</code> 类，位于 <code>java.util</code> 包中（迭代器也位于该包中），可以用于<strong>动态</strong>地调整存储在其中的元素的大小。<code>ArrayList</code> 类是基于数组的数据结构，它提供了一组用于操作元素的方法，包括添加、删除、插入、搜索和排序等。</p>\n<p><code>ArrayList</code> 用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">ArrayList&lt;Integer&gt; v = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();  <span class=\"comment\">// &lt;&gt;中只能为引用数据类型</span></span><br><span class=\"line\">ArrayList&lt;Integer&gt; v = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>));  <span class=\"comment\">// 初始化时赋值，当前为[1, 2, 3]</span></span><br><span class=\"line\">List&lt;Integer&gt; v = Arrays.stream(<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[] &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> &#125;).boxed().collect(Collectors.toList());  <span class=\"comment\">// int[]转List，注意只能为List，不能用ArrayList</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; v.size(); i++)  <span class=\"comment\">// 传统for循环</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, v.get(i));</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> x: v)  <span class=\"comment\">// forEach循环，推荐这种写法</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x);</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Iterator&lt;Integer&gt; it = v.iterator(); it.hasNext();)  <span class=\"comment\">// 迭代器</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, it.next());</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (ListIterator&lt;Integer&gt; it = v.listIterator(); it.hasNext();)  <span class=\"comment\">// 列表迭代器</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, it.next());</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">v.stream().forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));  <span class=\"comment\">// Java8的Stream API和Lambda表达式</span></span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">v.add(<span class=\"number\">4</span>);  <span class=\"comment\">// 在尾部添加4，当前为[1, 2, 3, 4]</span></span><br><span class=\"line\">v.add(<span class=\"number\">1</span>, <span class=\"number\">5</span>);  <span class=\"comment\">// 在下标1处添加5，当前为[1, 5, 2, 3, 4]</span></span><br><span class=\"line\">v.remove(<span class=\"number\">4</span>);  <span class=\"comment\">// 删除下标4处的元素，当前为[1, 5, 2, 3]</span></span><br><span class=\"line\">v.set(<span class=\"number\">0</span>, <span class=\"number\">4</span>);  <span class=\"comment\">// 将下标0处的元素置为4，当前为[4, 5, 2, 3]</span></span><br><span class=\"line\">v.subList(<span class=\"number\">0</span>, <span class=\"number\">2</span>);  <span class=\"comment\">// 返回[4, 5]，截取[0, 2)的子列表</span></span><br><span class=\"line\">v.indexOf(<span class=\"number\">5</span>);  <span class=\"comment\">// 返回1，获取元素5第一次出现的下标，若不存在返回-1</span></span><br><span class=\"line\">v.isEmpty();  <span class=\"comment\">// 返回false，判断是否为空</span></span><br><span class=\"line\">v.contains(<span class=\"number\">2</span>);  <span class=\"comment\">// 返回true，判断是否含有元素2</span></span><br><span class=\"line\">v.sort(Comparator.naturalOrder());  <span class=\"comment\">// 从小到大排序，当前为[2, 3, 4, 5]</span></span><br><span class=\"line\">v.sort(Comparator.reverseOrder());  <span class=\"comment\">// 从大到小排序，当前为[5, 4, 3, 2]</span></span><br><span class=\"line\">v.addAll(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>));  <span class=\"comment\">// 添加另一个Collection对象，当前为[5, 4, 3, 2, 1, 2]</span></span><br><span class=\"line\">Collections.addAll(v, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>);  <span class=\"comment\">// 添加任意数量的元素，当前为[5, 4, 3, 2, 1, 2, 7, 8, 9]</span></span><br><span class=\"line\">Collections.reverse(v);  <span class=\"comment\">// 翻转List，当前为[9, 8, 7, 2, 1, 2, 3, 4, 5]</span></span><br><span class=\"line\">ArrayList&lt;Integer&gt; t = (ArrayList&lt;Integer&gt;)v.clone();  <span class=\"comment\">// 复制一份，和原ArrayList不是同一份</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// List转换为数组</span></span><br><span class=\"line\">Integer[] a = <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[v.size()];  <span class=\"comment\">// 必须为包装类</span></span><br><span class=\"line\">v.toArray(a);</span><br><span class=\"line\"></span><br><span class=\"line\">Integer[] b = v.toArray(<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>[<span class=\"number\">0</span>]);  <span class=\"comment\">// 效果同上</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span>[] c = v.stream().mapToInt(Integer::valueOf).toArray();  <span class=\"comment\">// 必须为基本类型，mapToInt()将Stream&lt;Integer&gt;转换成IntStream</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-LinkedList\">4. LinkedList</h2>\n<p>Java 的 <code>LinkedList</code> 类是一个实现了 <code>List</code> 接口和 <code>Deque</code> 接口的<strong>双向链表</strong>。它也可以被当作堆栈、队列或双端队列进行操作。</p>\n<p>与 <code>ArrayList</code> 相比，<code>LinkedList</code> 的增加和删除的操作效率更高，而查找和修改的操作效率较低。因此需要频繁访问列表中的某一个元素且只需要在列表末尾进行添加和删除元素操作推荐使用 <code>ArrayList</code>，而需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作推荐使用 <code>LinkedList</code>。</p>\n<p><code>LinkedList</code> 的定义与遍历方式与 <code>ArrayList</code> 相同，且上述的 <code>ArrayList</code> 常用方法在 <code>LinkedList</code> 中均可使用，额外添加的部分方法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">LinkedList&lt;Integer&gt; v = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">v.addLast(<span class=\"number\">4</span>);  <span class=\"comment\">// 在尾部添加4，当前为[1, 2, 3, 4]</span></span><br><span class=\"line\">v.addFirst(<span class=\"number\">5</span>);  <span class=\"comment\">// 在首部添加5，当前为[5, 1, 2, 3, 4]</span></span><br><span class=\"line\">v.removeLast();  <span class=\"comment\">// 删除并返回尾部元素，当前为[5, 1, 2, 3]</span></span><br><span class=\"line\">v.removeFirst();  <span class=\"comment\">// 删除并返回首部元素，当前为[1, 2, 3]</span></span><br><span class=\"line\">v.getFirst();  <span class=\"comment\">// 返回首部元素1</span></span><br><span class=\"line\">v.getLast();  <span class=\"comment\">// 返回尾部元素3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-HashSet-TreeSet\">5. HashSet/TreeSet</h2>\n<p>Java 的 <code>HashSet</code> 类是一个实现了 <code>Set</code> 接口的集合类，它使用 <code>HashMap</code> 作为基础，因此其特性和 <code>HashMap</code> 类似：</p>\n<ul>\n<li>不重复：是一个没有重复元素的集合。</li>\n<li>无序：它不保证元素的顺序。</li>\n<li>允许 <code>null</code>：允许使用 <code>null</code> 元素。</li>\n<li>非同步：即不是线程安全的，如果多个线程尝试同时修改 <code>HashSet</code>，则最终结果是不确定的。 必须在多线程访问时显式同步对 <code>HashSet</code> 的并发访问。</li>\n</ul>\n<p><code>HashSet</code> 用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">HashSet&lt;Integer&gt; st = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">HashSet&lt;Integer&gt; st = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> x: st)  <span class=\"comment\">// forEach循环，推荐这种写法</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x);</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Iterator&lt;Integer&gt; it = st.iterator(); it.hasNext();)  <span class=\"comment\">// 迭代器</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, it.next());</span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">st.stream().forEach(x -&gt; System.out.printf(<span class=\"string\">&quot;%d &quot;</span>, x));  <span class=\"comment\">// Java8的Stream API和Lambda表达式</span></span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">st.add(<span class=\"number\">4</span>);  <span class=\"comment\">// 添加元素，当前为&#123;1, 2, 3, 4&#125;</span></span><br><span class=\"line\">st.remove(<span class=\"number\">3</span>);  <span class=\"comment\">// 删除元素，当前为&#123;1, 2, 4&#125;</span></span><br><span class=\"line\">st.contains(<span class=\"number\">3</span>);  <span class=\"comment\">// 返回false，判断是否存在3</span></span><br><span class=\"line\">st.size();  <span class=\"comment\">// 返回3，获取集合的元素数量</span></span><br><span class=\"line\">st.isEmpty();  <span class=\"comment\">// 返回false，判断是否为空</span></span><br><span class=\"line\">st.clear();  <span class=\"comment\">// 清空元素</span></span><br></pre></td></tr></table></figure>\n<p><code>TreeSet</code> 与 <code>HashSet</code> 的用法基本一致，区别在于 <code>TreeSet</code> 中的元素是<strong>有序</strong>的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">TreeSet&lt;Integer&gt; st = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeSet</span>&lt;&gt;();</span><br><span class=\"line\">TreeSet&lt;Integer&gt; st = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeSet</span>&lt;&gt;(Arrays.asList(<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">st.ceiling(<span class=\"number\">3</span>);  <span class=\"comment\">// 返回3，查找大于等于3的最小的数，不存在则返回null</span></span><br><span class=\"line\">st.floor(<span class=\"number\">3</span>);  <span class=\"comment\">// 返回3，查找小于等于3的最大的数，不存在则返回null</span></span><br><span class=\"line\">...其余同HashSet</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-HashMap-TreeMap\">6. HashMap/TreeMap</h2>\n<p>Java 的 <code>HashMap</code> 是一个实现了 <code>Map</code> 接口的哈希表，它存储的内容是键值对（key-value）映射。<code>HashMap</code> 的特性如下：</p>\n<ul>\n<li>键值对存储：<code>HashMap</code> 是以 <code>key-value</code> 存储形式存在，主要用来存放键值对。</li>\n<li>非同步：<code>HashMap</code> 的实现不是同步的，这意味着它不是线程安全的。</li>\n<li>允许 <code>null</code>：它的 <code>key</code>、<code>value</code> 都可以为 <code>null</code>。</li>\n<li>无序：此外，<code>HashMap</code> 中的映射不是有序的。</li>\n</ul>\n<p><code>HashMap</code> 的底层数据结构为：</p>\n<ul>\n<li>Java8 之前：<code>HashMap</code> 由数组+链表组成，数组是 <code>HashMap</code> 的主体，链表则主要用于解决<strong>哈希碰撞</strong>。</li>\n<li>Java8 之后：在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为8）并且当前数组的长度大于64时，此时此索引位置上的所有数据改为使用<strong>红黑树</strong>存储。</li>\n</ul>\n<p><code>HashMap</code> 的保存顺序与插入顺序不同，这是因为 <code>HashMap</code> 使用了一种非常快速的算法，该算法会控制顺序。<code>LinkedHashMap</code> 则是按照插入顺序来保存键值对，同时保留了 <code>HashMap</code> 的查找速度。</p>\n<p><code>HashMap</code> 用法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">HashMap&lt;String, Integer&gt; mp = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">HashMap&lt;String, Integer&gt; mp = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;String, Integer&gt;() &#123;&#123;  <span class=\"comment\">// 可能会导致一些未预期的副作用，因为它实际上创建了一个匿名子类</span></span><br><span class=\"line\">    put(<span class=\"string\">&quot;ABC&quot;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    put(<span class=\"string\">&quot;DEF&quot;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (String k: mp.keySet())  <span class=\"comment\">// 遍历key</span></span><br><span class=\"line\">    System.out.println(k);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> v: mp.values())  <span class=\"comment\">// 遍历value</span></span><br><span class=\"line\">    System.out.println(v);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Map.Entry&lt;String, Integer&gt; e: mp.entrySet())  <span class=\"comment\">// 遍历key-value，推荐这种写法</span></span><br><span class=\"line\">    System.out.println(e.getKey() + <span class=\"string\">&quot; &quot;</span> + e.getValue());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">Iterator</span> <span class=\"variable\">it</span> <span class=\"operator\">=</span> mp.entrySet().iterator(); it.hasNext();) &#123;  <span class=\"comment\">// 迭代器</span></span><br><span class=\"line\">    Map.<span class=\"type\">Entry</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> (Map.Entry)it.next();</span><br><span class=\"line\">    System.out.println(e.getKey() + <span class=\"string\">&quot; &quot;</span> + e.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">mp.put(<span class=\"string\">&quot;YYJ&quot;</span>, <span class=\"number\">666</span>);  <span class=\"comment\">// 添加键值对，如果键已经存在，就替换原来的值，当前为&#123;ABC=2, DEF=1, YYJ=666&#125;</span></span><br><span class=\"line\">mp.get(<span class=\"string\">&quot;YYJ&quot;</span>);  <span class=\"comment\">// 返回666，获取某个key对应的value，如果key不存在返回null</span></span><br><span class=\"line\">mp.remove(<span class=\"string\">&quot;YYJ&quot;</span>);  <span class=\"comment\">// 删除指定的key及其对应的value，如果key不存在返回null，当前为&#123;ABC=2, DEF=1&#125;</span></span><br><span class=\"line\">mp.containsKey(<span class=\"string\">&quot;YYJ&quot;</span>);  <span class=\"comment\">// 返回false，判断是否包含指定的key</span></span><br><span class=\"line\">mp.containsValue(<span class=\"number\">1</span>);  <span class=\"comment\">// 返回true，判断是否包含指定的value</span></span><br><span class=\"line\">mp.size();  <span class=\"comment\">// 返回2，获取键值对的数量</span></span><br><span class=\"line\">mp.clear();  <span class=\"comment\">// 清空键值对</span></span><br><span class=\"line\">mp.isEmpty();  <span class=\"comment\">// 返回true，判断是否为空</span></span><br></pre></td></tr></table></figure>\n<p>与 <code>Set</code> 同理，<code>TreeMap</code> 与 <code>HashMap</code> 的用法基本一致，区别在于 <code>TreeMap</code> 中的元素是根据键的升序排好序的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义</span></span><br><span class=\"line\">TreeMap&lt;String, Integer&gt; mp = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeMap</span>&lt;&gt;();</span><br><span class=\"line\">TreeMap&lt;String, Integer&gt; mp = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeMap</span>&lt;String, Integer&gt;() &#123;&#123;  <span class=\"comment\">// 可能会导致一些未预期的副作用，因为它实际上创建了一个匿名子类</span></span><br><span class=\"line\">    put(<span class=\"string\">&quot;DEF&quot;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    put(<span class=\"string\">&quot;ABC&quot;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 常用方法</span></span><br><span class=\"line\">Map.Entry&lt;String, Integer&gt; ceiling = mp.ceilingEntry(<span class=\"string\">&quot;AAA&quot;</span>);  <span class=\"comment\">// 查找键大于等于&quot;AAA&quot;的最小的键值对，不存在则返回null</span></span><br><span class=\"line\">System.out.println(ceiling.getKey() + <span class=\"string\">&quot;: &quot;</span> + ceiling.getValue());  <span class=\"comment\">// ABC: 2</span></span><br><span class=\"line\">Map.Entry&lt;String, Integer&gt; floor = mp.floorEntry(<span class=\"string\">&quot;DEG&quot;</span>);  <span class=\"comment\">// 查找键小于等于&quot;DEG&quot;的最大的键值对，不存在则返回null</span></span><br><span class=\"line\">System.out.println(floor.getKey() + <span class=\"string\">&quot;: &quot;</span> + floor.getValue());  <span class=\"comment\">// DEF: 1</span></span><br><span class=\"line\">mp.ceilingKey(<span class=\"string\">&quot;A&quot;</span>);  <span class=\"comment\">// 返回ABC，查找键大于等于&quot;A&quot;的最小的键，不存在则返回null</span></span><br><span class=\"line\">mp.floorKey(<span class=\"string\">&quot;A&quot;</span>);  <span class=\"comment\">// 返回null，查找键小于等于&quot;A&quot;的最大的键，不存在则返回null</span></span><br><span class=\"line\">...其余同HashMap</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-Stack\">7. Stack</h2>\n<p>栈（Stack）是一个<strong>后进先出</strong>（LIFO）的集合，它有时被称作<strong>下推栈</strong>，因为不管我们最后压入的是什么，它都会第一个弹出。</p>\n<p>Java 1.0 就提供了 <code>Stack</code> 类，结果这个类的设计非常糟糕，不过因为要向后兼容，所以我们永远也无法摆脱 Java 过去的设计错误了。Java 6 加入了 <code>ArrayDeque</code>，提供了直接实现栈功能的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Deque&lt;String&gt; stk = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayDeque</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (String s: <span class=\"string\">&quot;This is stack&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">    stk.push(s);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (!stk.isEmpty())</span><br><span class=\"line\">    System.out.print(stk.pop() + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// stack is This</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"8-Queue-PriorityQueue\">8. Queue/PriorityQueue</h2>\n<p>队列（Queue）是一个典型的先进先岀（FIFO）的集合。换言之，我们在一端放入在另一端拿出来，放入的顺序和取出的顺序是一样的。队列常用来将对象从程序的一个区域可靠地转移到另一个区域，队列在<strong>并发编程</strong>中特别重要，因为它们可以安全地将对象从一个任务转移到另一个任务。</p>\n<p><code>LinkedList</code> 实现了 <code>Queue</code> 接口，提供了支持队列行为的方法，因此 <code>LinkedList</code> 可以作为 <code>Queue</code> 的一种实现来使用，通过将 <code>LinkedList</code> 向上转型为 <code>Queue</code>，下面这个示例使用了 <code>Queue</code> 接口特有的方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;Integer&gt; Q = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">    Q.offer(i);</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(Q);  <span class=\"comment\">// [0, 1, 2, 3, 4]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (Q.peek() != <span class=\"literal\">null</span>)</span><br><span class=\"line\">    System.out.print(Q.remove() + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 0 1 2 3 4</span></span><br></pre></td></tr></table></figure>\n<p>其中：</p>\n<ul>\n<li><code>offer()</code> 是 <code>Queue</code> 特有的方法之一，负责在队列尾部插入一个元素，如果无法插入则返回 <code>false</code>。</li>\n<li><code>peek()</code> 和 <code>element()</code> 都会返回队头元素，不会将其删除，但是如果队列为空，<code>peek()</code> 返回 <code>null</code>，而 <code>element()</code> 抛出 <code>NoSuchElementException</code> 异常。</li>\n<li><code>poll()</code> 和 <code>remove()</code> 会将队头元素删除，同时返回该元素，但是如果队列为空，<code>poll()</code> 返回 <code>null</code>，而 <code>remove()</code> 抛出 <code>NoSuchElementException</code> 异常。</li>\n</ul>\n<p><strong>优先级队列</strong>（Priority Queue）是指下一个要拿出的元素是需求最强烈的元素（最高优先级）。Java 5 中添加了 <code>PriorityQueue</code>，为这种行为提供了一个自动化的实现。</p>\n<p><code>PriorityQueue</code> 默认的排序方法使用的是对象在队列中的自然顺序，但我们可以通过提供自己的 <code>Comparator</code> 来修改顺序：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PriorityQueue&lt;Integer&gt; Q = <span class=\"keyword\">new</span> <span class=\"title class_\">PriorityQueue</span>&lt;&gt;();  <span class=\"comment\">// 默认是升序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">5</span>; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    Q.offer(i);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (Q.peek() != <span class=\"literal\">null</span>)</span><br><span class=\"line\">    System.out.print(Q.remove() + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 1 2 3 4 5</span></span><br><span class=\"line\">System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;Integer&gt; nums = Arrays.asList(<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">PriorityQueue&lt;Integer&gt; RQ = <span class=\"keyword\">new</span> <span class=\"title class_\">PriorityQueue</span>&lt;&gt;(Collections.reverseOrder());  <span class=\"comment\">// 逆序</span></span><br><span class=\"line\">RQ.addAll(nums);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (RQ.peek() != <span class=\"literal\">null</span>)</span><br><span class=\"line\">    System.out.print(RQ.remove() + <span class=\"string\">&quot; &quot;</span>);  <span class=\"comment\">// 7 5 3 2 1</span></span><br><span class=\"line\">System.out.println();</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-深入Iterator与Collection\">9. 深入Iterator与Collection</h2>\n<p><code>Collection</code> 是所有序列集合共同的根接口，可以认为它是一个为表示其他接口之间的共性而出现的<strong>附属接口</strong>。支持使用这样一个接口的理由是，它可以创建更通用的代码，通过面向接口而不是面向实现来编写代码，我们的代码可以应用于更多对象类型。因此，如果我们编写一个以 <code>Collection</code> 为参数的方法，那么该方法可以应用于任何实现了 <code>Collection</code> 的类型。</p>\n<p>在 Java 中，看上去遵循 C++ 的方式比较明智，即使用迭代器而非 <code>Collection</code> 来表示集合之间的共性。但是，因为在 Java 中实现 <code>Collection</code> 也就意味着提供了 <code>iterator()</code> 方法，所以这两种方式其实是绑在一起了：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.yyj;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; numsList = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\">        Set&lt;Integer&gt; numsSet = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;(Arrays.asList(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        display(numsList.iterator());  <span class=\"comment\">// 1 2 3 3</span></span><br><span class=\"line\">        display(numsSet.iterator());  <span class=\"comment\">// 1 2 3</span></span><br><span class=\"line\">        display(numsList);  <span class=\"comment\">// 1 2 3 3</span></span><br><span class=\"line\">        display(numsSet);  <span class=\"comment\">// 1 2 3</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">display</span><span class=\"params\">(Iterator&lt;Integer&gt; it)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (it.hasNext())</span><br><span class=\"line\">            System.out.print(it.next() + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">display</span><span class=\"params\">(Collection&lt;Integer&gt; nums)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Integer x: nums)</span><br><span class=\"line\">            System.out.print(x + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-自定义对象数组排序\">10. 自定义对象数组排序</h2>\n<p>我们需要让进行排序的类实现 <code>Comparable</code> 接口，重写其中的 <code>compareTo()</code> 方法，在其中定义排序规则，那么就可以直接调用 <code>java.util.Arrays.sort()</code> 来排序对象数组：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Data</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Comparable</span>&lt;Data&gt; &#123;  <span class=\"comment\">// 实现Comparable&lt;T&gt;接口</span></span><br><span class=\"line\">    <span class=\"type\">int</span> x;</span><br><span class=\"line\">    String s;</span><br><span class=\"line\"></span><br><span class=\"line\">    Data(<span class=\"type\">int</span> x, String s) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x = x;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.s = s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">compareTo</span><span class=\"params\">(Data t)</span> &#123;  <span class=\"comment\">// 重写compareTo(T obj)方法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> t.x - x;  <span class=\"comment\">// 若t.x比当前对象的x小则返回-1，表示根据x从大到小排序</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;[%d, %s]&quot;</span>, x, s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SortObjectArrays</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Data[] datas = &#123; <span class=\"keyword\">new</span> <span class=\"title class_\">Data</span>(<span class=\"number\">4</span>, <span class=\"string\">&quot;Hello&quot;</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">Data</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;Java&quot;</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">Data</span>(<span class=\"number\">6</span>, <span class=\"string\">&quot;C++&quot;</span>) &#125;;</span><br><span class=\"line\">        Arrays.sort(datas);</span><br><span class=\"line\">        Arrays.stream(datas).forEach(System.out::println);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * [6, C++]</span></span><br><span class=\"line\"><span class=\"comment\">         * [4, Hello]</span></span><br><span class=\"line\"><span class=\"comment\">         * [1, Java]</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        }
    ]
}