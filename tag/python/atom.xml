<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://asanosaki.github.io</id>
    <title>AsanoSaki • Posts by &#34;python&#34; tag</title>
    <link href="https://asanosaki.github.io" />
    <updated>2023-05-29T07:52:00.000Z</updated>
    <category term="Others" />
    <category term="AI" />
    <category term="Hexo" />
    <category term="Linux" />
    <category term="Python" />
    <category term="MySQL" />
    <category term="Web" />
    <category term="Essay" />
    <category term="C++" />
    <category term="Network" />
    <entry>
        <id>https://asanosaki.github.io/posts/9681.html</id>
        <title>Python遥感常用模块Rasterio与Rioxarray教程</title>
        <link rel="alternate" href="https://asanosaki.github.io/posts/9681.html"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;rasterio&lt;/code&gt; 是一个很多模块是基于 &lt;code&gt;GDAL&lt;/code&gt; 的 Python 包，可用于处理地理空间栅格数据，例如 GeoTIFF 文件。&lt;code&gt;xarray&lt;/code&gt; 是一个为数组提供标签，例如尺寸、坐标和其他特定属性的 Python 包，它使大维数组的工作更加直观。&lt;code&gt;rioxarray&lt;/code&gt; 结合了 &lt;code&gt;rasterio&lt;/code&gt; 的功能和 &lt;code&gt;xarray&lt;/code&gt; 的所有优点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;1-Rasterio与Rioxarray安装&#34;&gt;1. Rasterio与Rioxarray安装&lt;/h2&gt;
&lt;p&gt;首先安装 Rasterio 模块，（本人使用 &lt;code&gt;conda&lt;/code&gt; 安装时遇到过报错 &lt;code&gt;ImportError: cannot import name &#39;CRS&#39; from &#39;pyproj&#39; (unknown location)&lt;/code&gt;，是由于 &lt;code&gt;pyproj&lt;/code&gt; 模块安装不全，因此建议采用后面的离线安装方式或者之后遇到问题时删除 &lt;code&gt;pyproj&lt;/code&gt; 模块后再离线安装该模块）：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;conda install gdal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;conda install rasterio&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果安装失败可以采用离线安装的方式，Rasterio 依赖很多第三方库，所以比较麻烦，按下面的顺序依次安装即可，可以尝试使用 &lt;code&gt;pip&lt;/code&gt; 安装或者下载 &lt;code&gt;.whl&lt;/code&gt; 文件离线安装（注意对上 Python 版本）：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pyproj&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Shapely&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GDAL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Fiona&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rasterio&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;各个模块的链接：&lt;a href=&#34;https://pypi.org/project/pyproj/&#34;&gt;Pyproj&lt;/a&gt;、&lt;a href=&#34;https://pypi.org/project/shapely/&#34;&gt;Shapely&lt;/a&gt;、&lt;a href=&#34;https://pypi.org/project/GDAL/&#34;&gt;GDAL&lt;/a&gt;、&lt;a href=&#34;https://pypi.org/project/Fiona/&#34;&gt;Fiona&lt;/a&gt;、&lt;a href=&#34;https://pypi.org/project/rasterio/&#34;&gt;Rasterio&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;离线安装指令：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install E:\GDAL-1.2.10-cp310-cp310-win_amd64.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 Python 中使用 Anaconda 安装 &lt;code&gt;rioxarray&lt;/code&gt; 包时，首先需要安装 &lt;code&gt;GDAL&lt;/code&gt; 和 &lt;code&gt;rasterio&lt;/code&gt;，然后再安装 &lt;code&gt;rioxarray&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install rioxarray&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;2-使用教程&#34;&gt;2. 使用教程&lt;/h2&gt;
&lt;p&gt;（1）使用 Rioxarray 读取并展示图像：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; rasterio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; rioxarray&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.rcParams[&lt;span class=&#34;string&#34;&gt;&amp;#x27;font.sans-serif&amp;#x27;&lt;/span&gt;] = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;SimHei&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.rcParams[&lt;span class=&#34;string&#34;&gt;&amp;#x27;axes.unicode_minus&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img_path = &lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/tiff_img.tif&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img = rioxarray.open_rasterio(img_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(img.shape)  &lt;span class=&#34;comment&#34;&gt;# (22, 488, 480)，第一维为通道数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;(img))  &lt;span class=&#34;comment&#34;&gt;# &amp;lt;class &amp;#x27;xarray.core.dataarray.DataArray&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;(img.values))  &lt;span class=&#34;comment&#34;&gt;# &amp;lt;class &amp;#x27;numpy.ndarray&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig, axes = plt.subplots(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, figsize=(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ax &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; axes.flat:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ax_img = ax.imshow(img[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], cmap=&lt;span class=&#34;string&#34;&gt;&amp;#x27;viridis&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ax, title &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;zip&lt;/span&gt;(axes.flat, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;img1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;img2&amp;#x27;&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ax.set_title(title)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.colorbar(mappable=ax_img, label=&lt;span class=&#34;string&#34;&gt;&amp;#x27;FSC&amp;#x27;&lt;/span&gt;, orientation=&lt;span class=&#34;string&#34;&gt;&amp;#x27;horizontal&amp;#x27;&lt;/span&gt;, ax=axes, fraction=&lt;span class=&#34;number&#34;&gt;0.04&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 图例，fraction可调整大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以用另一种形式展示（注意如果使用 Rasterio 读取图像则无法使用该方式展示图像）：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;plt.figure(dpi=&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, figsize=(&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.subplots_adjust(hspace=&lt;span class=&#34;number&#34;&gt;0.2&lt;/span&gt;, wspace=&lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.subplot(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].plot(cmap=&lt;span class=&#34;string&#34;&gt;&amp;#x27;terrain&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# getting the first band&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.subplot(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].plot(cmap=&lt;span class=&#34;string&#34;&gt;&amp;#x27;terrain&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# plt.savefig(&amp;#x27;1.png&amp;#x27;, dpi=300, bbox_inches=&amp;#x27;tight&amp;#x27;, pad_inches=0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（2）使用 Rasterio 读取图像：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;img = rasterio.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(img_path).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(img.shape)  &lt;span class=&#34;comment&#34;&gt;# (22, 488, 480)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;(img))  &lt;span class=&#34;comment&#34;&gt;# &amp;lt;class &amp;#x27;numpy.ndarray&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（3）转换为 Tensor 类型：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; torch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img_torch = torch.tensor(np.array(img.values), dtype=torch.float32)  &lt;span class=&#34;comment&#34;&gt;# Rioxarray转Tensor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(img_torch.shape)  &lt;span class=&#34;comment&#34;&gt;# torch.Size([22, 488, 480])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img_torch = torch.tensor(img, dtype=torch.float32)  &lt;span class=&#34;comment&#34;&gt;# Rasterio转Tensor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(img_torch.shape)  &lt;span class=&#34;comment&#34;&gt;# torch.Size([22, 488, 480])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（4）将 TIFF 图像逐像素提取出数据构建 CSV 文件：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tqdm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; train_test_split&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;read_image&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;img_path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img = rasterio.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(img_path).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    band, height, width = np.shape(img)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img_data_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; x &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; tqdm.trange(height):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; y &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(width):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            temp = img[::, x, y]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; np.array(np.isnan(temp), dtype=np.int8).&lt;span class=&#34;built_in&#34;&gt;sum&lt;/span&gt;() &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:  &lt;span class=&#34;comment&#34;&gt;# 过滤nan值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                img_data_list.append(temp.tolist())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img_arr = np.array(img_data_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img_arr = np.around(img_arr, &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 将数据四舍五入保留6位小数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    labels = img_arr[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 第一个特征为标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dataset = img_arr[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:]  &lt;span class=&#34;comment&#34;&gt;# 之后的特征为训练数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(os.path.basename(img_path), &lt;span class=&#34;string&#34;&gt;&amp;#x27;读取成功!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# return dataset, labels&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; img_arr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total_dataset = np.zeros((&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;), dtype=np.float32)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img_data = read_image(img_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total_dataset = np.append(total_dataset, img_data, axis=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total_dataset = np.delete(total_dataset, obj=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, axis=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 按行(axis=0)删除第一行(obj=0)元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(total_dataset, &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;, np.shape(total_dataset))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# [[0.570768 0.14354  0.159068 ... 0.458602 1.       0.4     ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  [0.307365 0.14354  0.159068 ... 0.458602 1.       0.4     ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  [0.005285 0.14354  0.159068 ... 0.428406 1.       0.4     ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  [0.993229 0.393478 0.370807 ... 0.243081 1.       0.8     ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  [0.967867 0.370807 0.356894 ... 0.243081 1.       0.8     ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  [0.945627 0.321429 0.305714 ... 0.243081 1.       0.8     ]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  (116082, 22)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一张影像22个波段，每一波段为一种特征，特征名如下，其中FSC既是模型训练时的标签数据也是模型输出数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;feature_name = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;FSC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR2&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR3&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR4&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR5&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR6&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SR7&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;NDVI&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;NDSI&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;#x27;NDFSI&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SensorZenith&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SensorAzimuth&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SolarZenith&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SolarAzimuth&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;#x27;Dem&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Slope&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Aspect&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;LST&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;A2T&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SC&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;LCT&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df = pd.DataFrame(total_dataset, columns=feature_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.to_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../data/MODIS_total_data.csv&amp;#x27;&lt;/span&gt;, index=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#              FSC       SR1       SR2       SR3  ...       LST       A2T   SC  LCT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 0       0.570768  0.143540  0.159068  0.165776  ...  0.447205  0.458602  1.0  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1       0.307365  0.143540  0.159068  0.165776  ...  0.447205  0.458602  1.0  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...          ...       ...       ...       ...  ...       ...       ...  ...  ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 116080  0.967867  0.370807  0.356894  0.384162  ...  0.252946  0.243081  1.0  0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 116081  0.945627  0.321429  0.305714  0.327329  ...  0.252946  0.243081  1.0  0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# [116082 rows x 22 columns]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;train_data, valid_data = train_test_split(df, test_size=&lt;span class=&#34;number&#34;&gt;0.3&lt;/span&gt;, random_state=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 按7:3的比例划分train_data与valid_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;train_data.to_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../data/MODIS_train_data.csv&amp;#x27;&lt;/span&gt;, index=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;valid_data.to_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../data/MODIS_valid_data.csv&amp;#x27;&lt;/span&gt;, index=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(train_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(valid_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             FSC       SR1       SR2  ...       A2T        SC  LCT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 65463  1.000000  0.868261  0.860124  ...  0.306415  0.954102  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 71636  0.000000  0.074969  0.090683  ...  0.492837  0.021780  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...         ...       ...       ...  ...       ...       ...  ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 77708  0.836359  0.252298  0.268199  ...  0.400243  1.000000  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 98539  0.004958  0.048758  0.073168  ...  0.547051  0.000000  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# [81257 rows x 22 columns]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#              FSC       SR1       SR2  ...       A2T        SC  LCT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 24035   0.907556  0.579814  0.588075  ...  0.332088  1.000000  0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 26625   0.988592  0.708696  0.702981  ...  0.334435  0.999297  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...          ...       ...       ...  ...       ...       ...  ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 22745   0.000000  0.054348  0.127143  ...  0.494257  0.532436  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 31068   0.994422  0.562795  0.532174  ...  0.384267  1.000000  0.4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# [34825 rows x 22 columns]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Python" />
        <updated>2023-05-29T07:52:00.000Z</updated>
    </entry>
    <entry>
        <id>https://asanosaki.github.io/posts/31783.html</id>
        <title>Python绘图模块Plotly教程</title>
        <link rel="alternate" href="https://asanosaki.github.io/posts/31783.html"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Plotly 是一个快速完善并崛起的交互式的、开源的绘图库库，Python 库则是它的一个重要分支。现已支持超过40种独特的图表类型，涵盖了广泛的统计、金融、地理、科学和三维用例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;1-Plotly安装&#34;&gt;1. Plotly安装&lt;/h2&gt;
&lt;p&gt;Python 中可以使用 &lt;code&gt;pip&lt;/code&gt; 或者 &lt;code&gt;conda&lt;/code&gt; 安装 Plotly：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install plotly&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;conda install plotly&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;2-Plotly绘图教程&#34;&gt;2. Plotly绘图教程&lt;/h2&gt;
&lt;h3 id=&#34;2-1-折线图与散点图&#34;&gt;2.1 折线图与散点图&lt;/h3&gt;
&lt;p&gt;折线图不仅可以表示数量的多少，而且可以反映同一事物在不同时间里的发展变化的情况，易于显示数据变化趋势，可以直观地反映这种变化以及各组之间的差别。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; plotly.graph_objects &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; go&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x = np.arange(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y1 = np.random.rand(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y2 = np.random.rand(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y3 = np.random.rand(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# name为图例名，textfont设置字体属性，mode为绘图模式，marker设置颜色否则后续导出图像会丢失颜色（不导出可不设置该参数也有默认颜色）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Scatter(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Lines&amp;#x27;&lt;/span&gt;, x=x, y=y1, textfont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;), mode=&lt;span class=&#34;string&#34;&gt;&amp;#x27;lines&amp;#x27;&lt;/span&gt;, marker=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(color=&lt;span class=&#34;string&#34;&gt;&amp;#x27;#0068C9&amp;#x27;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Scatter(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Markers&amp;#x27;&lt;/span&gt;, x=x, y=y2, textfont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;), mode=&lt;span class=&#34;string&#34;&gt;&amp;#x27;markers&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Scatter(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Lines&amp;amp;Markers&amp;#x27;&lt;/span&gt;, x=x, y=y3, textfont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;), mode=&lt;span class=&#34;string&#34;&gt;&amp;#x27;lines+markers&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置图像格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;1200&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;650&lt;/span&gt;,  &lt;span class=&#34;comment&#34;&gt;# 取消自动大小，手动设置宽高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;This is title&amp;#x27;&lt;/span&gt;,  &lt;span class=&#34;comment&#34;&gt;# 标题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;X&amp;#x27;&lt;/span&gt;, nticks=&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;),  &lt;span class=&#34;comment&#34;&gt;# 设置X轴属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Y&amp;#x27;&lt;/span&gt;, nticks=&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;=(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)),  &lt;span class=&#34;comment&#34;&gt;# 设置Y轴属性，nticks表示划分为多少段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    showlegend=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 显示图例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-2-饼图&#34;&gt;2.2 饼图&lt;/h3&gt;
&lt;p&gt;饼图用于强调各项数据占总体的占比，强调个体和整体的比较。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# textinfo表示显示内容是百分比还是标签，hoverinfo表示鼠标悬停的显示内容，pull表示每一块往外拉的比例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    go.Pie(labels=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Train data&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Valid data&amp;#x27;&lt;/span&gt;], values=[&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           textinfo=&lt;span class=&#34;string&#34;&gt;&amp;#x27;percent&amp;#x27;&lt;/span&gt;, hoverinfo=&lt;span class=&#34;string&#34;&gt;&amp;#x27;label+percent&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           textfont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;), pull=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.05&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;训练集划分&amp;#x27;&lt;/span&gt;, titlefont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           marker=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(colors=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;#0068C9&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;#83C9FF&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;450&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-3-直方图&#34;&gt;2.3 直方图&lt;/h3&gt;
&lt;p&gt;直方图虽然也和条形图一样通过矩形的长度表示数值，但他的宽度一般用于表示各组的组距，因此其高度与宽度均有意义，适合展示大量数据集的统计结果，直方图的表示的数据通常是连续排列，而柱状图则是分开排列。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x = np.random.rand(&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 生成1000个0-30之间的数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Histogram(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;X&amp;#x27;&lt;/span&gt;, x=x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;1350&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Value&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Count&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    showlegend=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_traces(opacity=&lt;span class=&#34;number&#34;&gt;0.6&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 设置透明度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可设置 &lt;code&gt;barmode&lt;/code&gt; 参数实现多个直方图覆盖的效果：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x1 = np.random.rand(&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x2 = np.random.rand(&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Histogram(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;X1&amp;#x27;&lt;/span&gt;, x=x1),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Histogram(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;X2&amp;#x27;&lt;/span&gt;, x=x2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    barmode=&lt;span class=&#34;string&#34;&gt;&amp;#x27;overlay&amp;#x27;&lt;/span&gt;,  &lt;span class=&#34;comment&#34;&gt;# 设置覆盖模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;1350&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Value&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Count&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    showlegend=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_traces(opacity=&lt;span class=&#34;number&#34;&gt;0.6&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 设置透明度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-4-条形图&#34;&gt;2.4 条形图&lt;/h3&gt;
&lt;p&gt;条形图用于比较各组数据的差异性，强调进行个体间的比较。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;x = np.arange(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y = np.random.randint(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;, size=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 生成10个1~30的整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Bar(name=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Bar1&amp;#x27;&lt;/span&gt;, x=x, y=y, textfont=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(size=&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;800&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Bar&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;X&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Y&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    showlegend=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-5-热力图&#34;&gt;2.5 热力图&lt;/h3&gt;
&lt;p&gt;热力图是一种特殊的图表，它是一种通过对色块着色来显示数据的统计图表，在绘图时，需要指定每个颜色映射的规则（一般以颜色的强度或色调为标准）；比如颜色越深的表示数值越大、程度越深或者颜色越浅的数值越大、程度越深。热力图适合用于查看总体的情况、观察特殊值或者显示多个变量之间的差异性、检测它们之间是否存在相关性等等。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df = pd.read_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../data/MODIS/test_data.csv&amp;#x27;&lt;/span&gt;, nrows=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# [10 rows x 22 columns]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(df.head(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#    FSC       SR1       SR2       SR3  ...       LST       A2T   SC  LCT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 0  1.0  0.587019  0.551739  0.565093  ...  0.129661  0.205581  1.0  0.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pearson = df.corr()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pearson.values.shape)  &lt;span class=&#34;comment&#34;&gt;# (22, 22)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;features = df.columns.values  &lt;span class=&#34;comment&#34;&gt;# 或者features = pearson.index.values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(features)  &lt;span class=&#34;comment&#34;&gt;# [&amp;#x27;FSC&amp;#x27; &amp;#x27;SR1&amp;#x27; &amp;#x27;SR2&amp;#x27; &amp;#x27;SR3&amp;#x27; ...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig = go.Figure(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        go.Heatmap(x=features, y=features, z=pearson.values, colorscale=&lt;span class=&#34;string&#34;&gt;&amp;#x27;blues&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.update_layout(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    autosize=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;, width=&lt;span class=&#34;number&#34;&gt;900&lt;/span&gt;, height=&lt;span class=&#34;number&#34;&gt;900&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;皮尔逊相关系数热力图&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 以下注释的两行代码用于保存本地时调整字体的大小防止显示不全&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# xaxis=dict(title=&amp;#x27;Feature&amp;#x27;, titlefont=dict(size=10), tickfont=dict(size=8)),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# yaxis=dict(title=&amp;#x27;Feature&amp;#x27;, titlefont=dict(size=10), tickfont=dict(size=8)),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Features&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaxis=&lt;span class=&#34;built_in&#34;&gt;dict&lt;/span&gt;(title=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Features&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    showlegend=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fig.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-6-导出图像到本地&#34;&gt;2.6 导出图像到本地&lt;/h3&gt;
&lt;p&gt;首先我们需要安装两个依赖项：&lt;code&gt;orca&lt;/code&gt; 和 &lt;code&gt;psutil&lt;/code&gt;，&lt;code&gt;orca&lt;/code&gt; 在 PyPi 存储库中不可用，因此需要使用 &lt;code&gt;conda&lt;/code&gt; 安装：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;conda install -c plotly plotly-orca psutil&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者直接安装 &lt;code&gt;kaleido&lt;/code&gt; 模块：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install kaleido&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完成后即可使用 Plotly 的 &lt;code&gt;io&lt;/code&gt; 库导出图像（格式可以是 SVG、JPG、PNG等）：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; plotly.io &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pio.write_image(fig, &lt;span class=&#34;string&#34;&gt;&amp;#x27;images/figure.svg&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Python" />
        <updated>2023-05-29T07:42:00.000Z</updated>
    </entry>
    <entry>
        <id>https://asanosaki.github.io/posts/55.html</id>
        <title>Python路径操作模块pathlib教程</title>
        <link rel="alternate" href="https://asanosaki.github.io/posts/55.html"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Python 路径操作新标准：&lt;code&gt;pathlib&lt;/code&gt; 模块相较于老式的 &lt;code&gt;os.path&lt;/code&gt; 更为简洁易用，本文为该模块的使用教程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;&lt;code&gt;pathlib&lt;/code&gt; 库从 Python 3.4 开始，到 Python 3.6 已经比较成熟。如果你的新项目可以直接用 3.6 及以上，建议用 &lt;code&gt;pathlib&lt;/code&gt;。相比于老式的 &lt;code&gt;os.path&lt;/code&gt; 有几个优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老的路径操作函数管理比较混乱，有的是导入 &lt;code&gt;os&lt;/code&gt;，有的又是在 &lt;code&gt;os.path&lt;/code&gt; 当中，而新的用法统一可以用 &lt;code&gt;pathlib&lt;/code&gt; 管理。&lt;/li&gt;
&lt;li&gt;老用法在处理不同操作系统 Win、Mac 以及 Linux 之间很吃力。换了操作系统常常要改代码，还经常需要进行一些额外操作。&lt;/li&gt;
&lt;li&gt;老用法主要是函数形式，返回的数据类型通常是字符串。但是路径和字符串并不等价，所以在使用 &lt;code&gt;os&lt;/code&gt; 操作路径的时候常常还要引入其他类库协助操作。新用法是面向对象，处理起来更灵活方便。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pathlib&lt;/code&gt; 简化了很多操作，用起来更轻松。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-路径获取&#34;&gt;1. 路径获取&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;（1）获取当前工作目录&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pathlib.Path.cwd())  &lt;span class=&#34;comment&#34;&gt;# D:\Dive into Deep Learning\src&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(pathlib.Path.cwd()))  &lt;span class=&#34;comment&#34;&gt;# D:\Dive into Deep Learning\src&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：工作目录是在哪个目录下运行你的程序，不是项目目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然在这里打印出来的很像一个字符串，但实际上得到的是一个 &lt;code&gt;WindowsPath(&#39;D:\Dive into Deep Learning\src&#39;)&lt;/code&gt; 对象，如果只想得到字符串表示，不想要 &lt;code&gt;WindowsPath&lt;/code&gt; 对象，可以用 &lt;code&gt;str()&lt;/code&gt; 转化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）获取用户 Home 目录&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pathlib.Path.home())  &lt;span class=&#34;comment&#34;&gt;# C:\Users\AsanoSaki&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）获取当前文件路径&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pathlib.Path(__file__))  &lt;span class=&#34;comment&#34;&gt;# D:\Dive into Deep Learning\src\路径操作.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（4）获取任意字符串路径&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;dir_path = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file_path = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/cat1.jpg&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path)  &lt;span class=&#34;comment&#34;&gt;# ..\images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（5）获取绝对路径&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path.resolve())  &lt;span class=&#34;comment&#34;&gt;# D:\Dive into Deep Learning\images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（6）获取文件属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文件属性比如文件大小、创建时间、修改时间等。&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.stat())  &lt;span class=&#34;comment&#34;&gt;# os.stat_result(st_mode=33206, st_ino=281474978388098, st_dev=80873957, st_nlink=1, st_uid=0, st_gid=0, st_size=53081, st_atime=1680229254, st_mtime=1670460384, st_ctime=1680228818)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.stat().st_size)  &lt;span class=&#34;comment&#34;&gt;# 53081&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;2-路径组成部分&#34;&gt;2. 路径组成部分&lt;/h2&gt;
&lt;p&gt;获取路径的组成部分非常方便：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.name&lt;/code&gt;：文件名，包含后缀名，如果是目录则获取目录名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.stem&lt;/code&gt;：文件名，不包含后缀。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.suffix&lt;/code&gt;：后缀，比如 &lt;code&gt;.txt&lt;/code&gt;、&lt;code&gt;.png&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.parent&lt;/code&gt;：父级目录，相当于 &lt;code&gt;cd ..&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.anchor&lt;/code&gt;：锚，目录前面的部分 &lt;code&gt;C:\&lt;/code&gt; 或者 &lt;code&gt;/&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.name)  &lt;span class=&#34;comment&#34;&gt;# cat1.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.stem)  &lt;span class=&#34;comment&#34;&gt;# cat1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.suffix)  &lt;span class=&#34;comment&#34;&gt;# .jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.parent)  &lt;span class=&#34;comment&#34;&gt;# ..\images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;3-子路径扫描&#34;&gt;3. 子路径扫描&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;（1）扫描某个目录下的所有路径&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;all_path = [&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(p) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; dir_path.iterdir() &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; dir_path.is_dir()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(all_path)  &lt;span class=&#34;comment&#34;&gt;# [&amp;#x27;..\\images\\cat1.jpg&amp;#x27;, &amp;#x27;..\\images\\cat2.jpg&amp;#x27;, &amp;#x27;..\\images\\cat3.jpg&amp;#x27;, &amp;#x27;..\\images\\catdog.jpg&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（2）使用模式匹配（正则表达式）查找目录下的指定文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;all_jpg = &lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(dir_path.glob(&lt;span class=&#34;string&#34;&gt;&amp;#x27;*.jpg&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all_jpg_strpath = [&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(p) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; all_jpg]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(all_jpg)  &lt;span class=&#34;comment&#34;&gt;# [WindowsPath(&amp;#x27;../images/cat1.jpg&amp;#x27;), WindowsPath(&amp;#x27;../images/cat2.jpg&amp;#x27;), WindowsPath(&amp;#x27;../images/cat3.jpg&amp;#x27;), WindowsPath(&amp;#x27;../images/catdog.jpg&amp;#x27;)]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(all_jpg_strpath)  &lt;span class=&#34;comment&#34;&gt;# [&amp;#x27;..\\images\\cat1.jpg&amp;#x27;, &amp;#x27;..\\images\\cat2.jpg&amp;#x27;, &amp;#x27;..\\images\\cat3.jpg&amp;#x27;, &amp;#x27;..\\images\\catdog.jpg&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）检查路径是否符合规则&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(file_path.&lt;span class=&#34;keyword&#34;&gt;match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;*.jpg&amp;#x27;&lt;/span&gt;))  &lt;span class=&#34;comment&#34;&gt;# True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;4-路径拼接&#34;&gt;4. 路径拼接&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pathlib&lt;/code&gt; 支持用 &lt;code&gt;/&lt;/code&gt; 拼接路径，如果用不惯 &lt;code&gt;/&lt;/code&gt;，也可以用类似 &lt;code&gt;os.path.join&lt;/code&gt; 的方法：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path / &lt;span class=&#34;string&#34;&gt;&amp;#x27;dir1&amp;#x27;&lt;/span&gt; / &lt;span class=&#34;string&#34;&gt;&amp;#x27;file1.txt&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# ..\images\dir1\file1.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path.joinpath(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dir1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;file1.txt&amp;#x27;&lt;/span&gt;))  &lt;span class=&#34;comment&#34;&gt;# ..\images\dir1\file1.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;5-路径测试（判断）&#34;&gt;5. 路径测试（判断）&lt;/h2&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path.is_file())  &lt;span class=&#34;comment&#34;&gt;# 是否为文件，False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path.is_dir())  &lt;span class=&#34;comment&#34;&gt;# 是否为文件夹，True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(dir_path.exists())  &lt;span class=&#34;comment&#34;&gt;# 是否存在，True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;6-文件操作&#34;&gt;6. 文件操作&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;（1）创建文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;new_file = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/readme.txt&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_file.touch(exist_ok=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_file.touch(exist_ok=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# FileExistsError: [Errno 17] File exists: &amp;#x27;..\\images\\readme.txt&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;exist_ok&lt;/code&gt; 表示当文件已经存在时，程序的反应。如果为 &lt;code&gt;True&lt;/code&gt;，文件存在时，不进行任何操作；如果为 &lt;code&gt;False&lt;/code&gt;，则会报 &lt;code&gt;FileExistsError&lt;/code&gt; 错误。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）创建目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;os&lt;/code&gt; 创建目录分为两个函数：&lt;code&gt;mkdir()&lt;/code&gt; 和 &lt;code&gt;makedirs()&lt;/code&gt;。&lt;code&gt;mkdir()&lt;/code&gt; 一次只能创建一级目录，&lt;code&gt;makedirs()&lt;/code&gt; 可以同时创建多级目录。使用 &lt;code&gt;pathlib&lt;/code&gt; 只需要用 &lt;code&gt;path.mkdir()&lt;/code&gt; 函数就可以。它提供了 &lt;code&gt;parents&lt;/code&gt; 参数，设置为 &lt;code&gt;True&lt;/code&gt; 可以创建多级目录，不设置则只能创建一层：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;new_dir = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/dir1/dir2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_dir.mkdir()  &lt;span class=&#34;comment&#34;&gt;# FileNotFoundError: [WinError 3] The system cannot find the path specified: &amp;#x27;..\\images\\dir1\\dir2&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new_dir.mkdir(parents=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（3）删除目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除目录非常危险，并且没有提示，一定要谨慎操作。一次只删除一级目录，且当前目录必须为空：&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;del_dir = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/dir&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_dir.rmdir()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;（4）删除文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight py&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;del_file = pathlib.Path(&lt;span class=&#34;string&#34;&gt;&amp;#x27;../images/readme.txt&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del_file.unlink()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Python" />
        <updated>2023-03-31T02:47:00.000Z</updated>
    </entry>
</feed>
